// Code generated by Gorgonia cudagen. DO NOT EDIT.
//go:build cuda
// +build cuda

package main

import "gorgonia.org/gorgonia"

func init() {
	gorgonia.AddToStdLib("sigmoid64", sigmoid64PTX, []string{"sigmoid64"})
	gorgonia.AddToStdLib("elembinop", elembinopPTX, []string{"add_vv_f64", "add_vv_f32", "sub_vv_f64", "sub_vv_f32", "mul_vv_f64", "mul_vv_f32", "div_vv_f64", "div_vv_f32", "gt_vv_f64", "gt_vv_f32", "gte_vv_f64", "gte_vv_f32", "lt_vv_f64", "lt_vv_f32", "lte_vv_f64", "lte_vv_f32", "eq_vv_f64", "eq_vv_f32", "ne_vv_f64", "ne_vv_f32", "add_vs_f64", "add_vs_f32", "sub_vs_f64", "sub_vs_f32", "mul_vs_f64", "mul_vs_f32", "div_vs_f64", "div_vs_f32", "gt_vs_f64", "gt_vs_f32", "gte_vs_f64", "gte_vs_f32", "lt_vs_f64", "lt_vs_f32", "lte_vs_f64", "lte_vs_f32", "eq_vs_f64", "eq_vs_f32", "ne_vs_f64", "ne_vs_f32", "add_sv_f64", "add_sv_f32", "sub_sv_f64", "sub_sv_f32", "mul_sv_f64", "mul_sv_f32", "div_sv_f64", "div_sv_f32", "gt_sv_f64", "gt_sv_f32", "gte_sv_f64", "gte_sv_f32", "lt_sv_f64", "lt_sv_f32", "lte_sv_f64", "lte_sv_f32", "eq_sv_f64", "eq_sv_f32", "ne_sv_f64", "ne_sv_f32", "add_ss_f64", "add_ss_f32", "sub_ss_f64", "sub_ss_f32", "mul_ss_f64", "mul_ss_f32", "div_ss_f64", "div_ss_f32", "gt_ss_f64", "gt_ss_f32", "gte_ss_f64", "gte_ss_f32", "lt_ss_f64", "lt_ss_f32", "lte_ss_f64", "lte_ss_f32", "eq_ss_f64", "eq_ss_f32", "ne_ss_f64", "ne_ss_f32", "pow_vv_f64", "pow_vv_f32", "pow_vs_f64", "pow_vs_f32", "pow_sv_f64", "pow_sv_f32", "pow_ss_f64", "pow_ss_f32"})
	gorgonia.AddToStdLib("elemunaryop", elemunaryopPTX, []string{"cos_f64", "sin_f64", "exp_f64", "ln_f64", "log2_f64", "sqrt_f64", "tanh_f64", "log1p_f64", "expm1_f64", "abs_f64", "ceil_f64", "floor_f64", "sign_f64", "square_f64", "cube_f64", "neg_f64", "inverse_f64", "softplus_f64", "sigmoid_f64", "cos_f32", "sin_f32", "exp_f32", "ln_f32", "log2_f32", "sqrt_f32", "tanh_f32", "log1p_f32", "expm1_f32", "abs_f32", "ceil_f32", "floor_f32", "sign_f32", "square_f32", "cube_f32", "neg_f32", "inverse_f32", "softplus_f32", "sigmoid_f32"})
	gorgonia.AddToStdLib("misc", miscPTX, []string{"hasNaN_f32", "hasNaN_f64", "hasInf_f32", "hasInf_f64"})
	gorgonia.AddToStdLib("sigmoid32", sigmoid32PTX, []string{"sigmoid32"})
}

const miscPTX = `//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_61
.address_size 64

	// .globl	hasNaN_f32

.visible .entry hasNaN_f32(
	.param .u64 hasNaN_f32_param_0,
	.param .u32 hasNaN_f32_param_1,
	.param .u64 hasNaN_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [hasNaN_f32_param_0];
	ld.param.u32 	%r2, [hasNaN_f32_param_1];
	ld.param.u64 	%rd2, [hasNaN_f32_param_2];
	mov.u32 	%r3, %ctaid.z;
	mov.u32 	%r4, %nctaid.y;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %nctaid.x;
	mov.u32 	%r8, %ctaid.x;
	mad.lo.s32 	%r9, %r6, %r7, %r8;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_3;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	setp.le.f32 	%p2, %f2, 0f7F800000;
	@%p2 bra 	$L__BB0_3;

	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.u32 	%r18, [%rd6];
	add.s32 	%r19, %r18, 1;
	st.global.u32 	[%rd6], %r19;

$L__BB0_3:
	ret;

}
	// .globl	hasNaN_f64
.visible .entry hasNaN_f64(
	.param .u64 hasNaN_f64_param_0,
	.param .u32 hasNaN_f64_param_1,
	.param .u64 hasNaN_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [hasNaN_f64_param_0];
	ld.param.u32 	%r2, [hasNaN_f64_param_1];
	ld.param.u64 	%rd2, [hasNaN_f64_param_2];
	mov.u32 	%r3, %ctaid.z;
	mov.u32 	%r4, %nctaid.y;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %nctaid.x;
	mov.u32 	%r8, %ctaid.x;
	mad.lo.s32 	%r9, %r6, %r7, %r8;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_3;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	abs.f64 	%fd2, %fd1;
	setp.le.f64 	%p2, %fd2, 0d7FF0000000000000;
	@%p2 bra 	$L__BB1_3;

	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.u32 	%r18, [%rd6];
	add.s32 	%r19, %r18, 1;
	st.global.u32 	[%rd6], %r19;

$L__BB1_3:
	ret;

}
	// .globl	hasInf_f32
.visible .entry hasInf_f32(
	.param .u64 hasInf_f32_param_0,
	.param .u32 hasInf_f32_param_1,
	.param .u64 hasInf_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [hasInf_f32_param_0];
	ld.param.u32 	%r2, [hasInf_f32_param_1];
	ld.param.u64 	%rd2, [hasInf_f32_param_2];
	mov.u32 	%r3, %ctaid.z;
	mov.u32 	%r4, %nctaid.y;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %nctaid.x;
	mov.u32 	%r8, %ctaid.x;
	mad.lo.s32 	%r9, %r6, %r7, %r8;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_3;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	setp.neu.f32 	%p2, %f2, 0f7F800000;
	@%p2 bra 	$L__BB2_3;

	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.u32 	%r18, [%rd6];
	add.s32 	%r19, %r18, 1;
	st.global.u32 	[%rd6], %r19;

$L__BB2_3:
	ret;

}
	// .globl	hasInf_f64
.visible .entry hasInf_f64(
	.param .u64 hasInf_f64_param_0,
	.param .u32 hasInf_f64_param_1,
	.param .u64 hasInf_f64_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<23>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [hasInf_f64_param_0];
	ld.param.u32 	%r2, [hasInf_f64_param_1];
	ld.param.u64 	%rd2, [hasInf_f64_param_2];
	mov.u32 	%r3, %ctaid.z;
	mov.u32 	%r4, %nctaid.y;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %nctaid.x;
	mov.u32 	%r8, %ctaid.x;
	mad.lo.s32 	%r9, %r6, %r7, %r8;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB3_3;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r18, %temp}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd1;
	}
	and.b32  	%r20, %r19, 2147483647;
	setp.ne.s32 	%p2, %r20, 2146435072;
	setp.ne.s32 	%p3, %r18, 0;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB3_3;

	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.u32 	%r21, [%rd6];
	add.s32 	%r22, %r21, 1;
	st.global.u32 	[%rd6], %r22;

$L__BB3_3:
	ret;

}

`
const sigmoid32PTX = `//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_61
.address_size 64

	// .globl	sigmoid32

.visible .entry sigmoid32(
	.param .u64 sigmoid32_param_0,
	.param .u32 sigmoid32_param_1
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<85>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [sigmoid32_param_0];
	ld.param.u32 	%r2, [sigmoid32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_9;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd1];
	neg.f32 	%f11, %f1;
	mov.f32 	%f12, 0f4016FC2A;
	rcp.approx.ftz.f32 	%f13, %f12;
	mul.rn.f32 	%f14, %f13, 0f3F37E150;
	mul.rn.f32 	%f15, %f14, %f14;
	mov.f32 	%f16, 0f3C4CAF63;
	mov.f32 	%f17, 0f3B18F0FE;
	fma.rn.f32 	%f18, %f17, %f15, %f16;
	mov.f32 	%f19, 0f3DAAAABD;
	fma.rn.f32 	%f20, %f18, %f15, %f19;
	mul.rn.f32 	%f21, %f20, %f15;
	mul.rn.f32 	%f22, %f21, %f14;
	mov.f32 	%f23, 0f3EB7E150;
	sub.rn.f32 	%f24, %f23, %f14;
	add.rn.f32 	%f25, %f24, %f24;
	mul.rn.f32 	%f26, %f13, 0fBF37E150;
	fma.rn.f32 	%f27, %f26, %f23, %f25;
	mul.rn.f32 	%f28, %f13, %f27;
	add.rn.f32 	%f29, %f14, %f22;
	sub.rn.f32 	%f30, %f14, %f29;
	add.rn.f32 	%f31, %f22, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	add.rn.f32 	%f33, %f29, %f32;
	sub.rn.f32 	%f34, %f29, %f33;
	add.rn.f32 	%f35, %f32, %f34;
	mov.f32 	%f36, 0f3F317200;
	mov.f32 	%f37, 0f3F800000;
	mul.rn.f32 	%f38, %f37, %f36;
	add.rn.f32 	%f39, %f38, %f33;
	sub.rn.f32 	%f40, %f38, %f39;
	add.rn.f32 	%f41, %f33, %f40;
	add.rn.f32 	%f42, %f35, %f41;
	mov.f32 	%f43, 0f35BFBE8E;
	mul.rn.f32 	%f44, %f37, %f43;
	add.rn.f32 	%f45, %f44, %f42;
	add.rn.f32 	%f46, %f39, %f45;
	sub.rn.f32 	%f47, %f39, %f46;
	add.rn.f32 	%f48, %f45, %f47;
	abs.f32 	%f2, %f11;
	setp.gt.f32 	%p2, %f2, 0f77F684DF;
	mul.rn.f32 	%f49, %f1, 0fB9000000;
	selp.f32 	%f50, %f49, %f11, %p2;
	mul.rn.f32 	%f51, %f50, %f46;
	neg.f32 	%f52, %f51;
	fma.rn.f32 	%f53, %f50, %f46, %f52;
	fma.rn.f32 	%f54, %f50, %f48, %f53;
	mov.f32 	%f55, 0f00000000;
	fma.rn.f32 	%f56, %f55, %f46, %f54;
	add.rn.f32 	%f57, %f51, %f56;
	neg.f32 	%f58, %f57;
	add.rn.f32 	%f59, %f51, %f58;
	add.rn.f32 	%f60, %f59, %f56;
	mov.b32 	%r18, %f57;
	setp.eq.s32 	%p3, %r18, 1118925336;
	add.s32 	%r19, %r18, -1;
	mov.b32 	%f61, %r19;
	add.rn.f32 	%f62, %f60, 0f37000000;
	selp.f32 	%f3, %f62, %f60, %p3;
	selp.f32 	%f63, %f61, %f57, %p3;
	mov.f32 	%f64, 0f3FB8AA3B;
	mul.rn.f32 	%f65, %f63, %f64;
	cvt.rzi.f32.f32 	%f66, %f65;
	abs.f32 	%f67, %f66;
	setp.gt.f32 	%p4, %f67, 0f42FC0000;
	mov.b32 	%r20, %f66;
	and.b32  	%r21, %r20, -2147483648;
	or.b32  	%r22, %r21, 1123811328;
	mov.b32 	%f68, %r22;
	selp.f32 	%f69, %f68, %f66, %p4;
	mov.f32 	%f70, 0fBF317218;
	fma.rn.f32 	%f71, %f69, %f70, %f63;
	mov.f32 	%f72, 0f3102E308;
	fma.rn.f32 	%f73, %f69, %f72, %f71;
	mul.rn.f32 	%f74, %f73, 0f3FB8AA3B;
	add.rn.f32 	%f75, %f69, 0f4B40007F;
	mov.b32 	%r23, %f75;
	shl.b32 	%r24, %r23, 23;
	mov.b32 	%f76, %r24;
	ex2.approx.ftz.f32 	%f77, %f74;
	mul.rn.f32 	%f4, %f77, %f76;
	setp.eq.f32 	%p5, %f4, 0f7F800000;
	mov.f32 	%f84, 0f7F800000;
	@%p5 bra 	$L__BB0_3;

	fma.rn.f32 	%f84, %f4, %f3, %f4;

$L__BB0_3:
	add.rn.f32 	%f78, %f2, 0f402DF854;
	mov.b32 	%r25, %f78;
	setp.lt.s32 	%p6, %r25, 2139095040;
	@%p6 bra 	$L__BB0_8;

	setp.gtu.f32 	%p7, %f2, 0f7F800000;
	@%p7 bra 	$L__BB0_7;
	bra.uni 	$L__BB0_5;

$L__BB0_7:
	mov.f32 	%f79, 0f402DF854;
	sub.rn.f32 	%f84, %f79, %f1;
	bra.uni 	$L__BB0_8;

$L__BB0_5:
	setp.neu.f32 	%p8, %f2, 0f7F800000;
	@%p8 bra 	$L__BB0_8;

	setp.gt.f32 	%p9, %f1, 0f80000000;
	selp.f32 	%f84, 0f00000000, 0f7F800000, %p9;

$L__BB0_8:
	add.rn.f32 	%f80, %f84, 0f3F800000;
	rcp.rn.f32 	%f81, %f80;
	setp.eq.f32 	%p10, %f1, 0f80000000;
	selp.f32 	%f82, 0f3F000000, %f81, %p10;
	st.global.f32 	[%rd1], %f82;

$L__BB0_9:
	ret;

}

`
const sigmoid64PTX = `//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_61
.address_size 64

	// .globl	sigmoid64
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;

.visible .entry sigmoid64(
	.param .u64 sigmoid64_param_0,
	.param .u32 sigmoid64_param_1
)
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<37>;
	.reg .f64 	%fd<23>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [sigmoid64_param_0];
	ld.param.u32 	%r5, [sigmoid64_param_1];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ctaid.z;
	mov.u32 	%r8, %nctaid.y;
	mov.u32 	%r9, %ctaid.y;
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	mov.u32 	%r11, %nctaid.x;
	mad.lo.s32 	%r12, %r10, %r11, %r6;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %tid.z;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r18, %r15, %r16, %r17;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r18, %r19, %r20;
	setp.ge.s32 	%p2, %r1, %r5;
	@%p2 bra 	$L__BB0_13;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd1];
	neg.f64 	%fd2, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd2;
	}
	bfe.u32 	%r21, %r2, 20, 11;
	add.s32 	%r22, %r21, -1012;
	mov.b64 	%rd5, %fd2;
	shl.b64 	%rd6, %rd5, %r22;
	setp.eq.s64 	%p3, %rd6, -9223372036854775808;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd21, [retval0+0];
	} // callseq 0
	mov.f64 	%fd11, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd11;
	}
	setp.lt.s32 	%p4, %r3, 0;
	and.pred  	%p1, %p4, %p3;
	not.pred 	%p5, %p1;
	@%p5 bra 	$L__BB0_3;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd21;
	}
	xor.b32  	%r24, %r23, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r25, %temp}, %fd21;
	}
	mov.b64 	%fd21, {%r25, %r24};

$L__BB0_3:
	setp.gt.s32 	%p6, %r3, -1;
	@%p6 bra 	$L__BB0_6;

	cvt.rzi.f64.f64 	%fd12, %fd2;
	setp.eq.f64 	%p7, %fd12, %fd2;
	@%p7 bra 	$L__BB0_6;

	mov.f64 	%fd21, 0dFFF8000000000000;

$L__BB0_6:
	mov.f64 	%fd14, 0d4005BF0A8B145769;
	sub.rn.f64 	%fd7, %fd14, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd7;
	}
	and.b32  	%r27, %r26, 2146435072;
	setp.ne.s32 	%p8, %r27, 2146435072;
	mov.f64 	%fd22, %fd21;
	@%p8 bra 	$L__BB0_12;

	abs.f64 	%fd15, %fd2;
	setp.gtu.f64 	%p9, %fd15, 0d7FF0000000000000;
	mov.f64 	%fd22, %fd7;
	@%p9 bra 	$L__BB0_12;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd2;
	}
	and.b32  	%r4, %r2, 2147483647;
	setp.eq.s32 	%p10, %r4, 2146435072;
	setp.eq.s32 	%p11, %r28, 0;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_9;

$L__BB0_11:
	setp.lt.s32 	%p19, %r2, 0;
	mov.u32 	%r35, 0;
	selp.b32 	%r36, 0, 2146435072, %p19;
	mov.b64 	%fd22, {%r35, %r36};
	bra.uni 	$L__BB0_12;

$L__BB0_9:
	mov.f64 	%fd16, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r29, %temp}, %fd16;
	}
	and.b32  	%r30, %r3, 2147483647;
	setp.ne.s32 	%p13, %r30, 2146435072;
	setp.ne.s32 	%p14, %r29, 0;
	or.pred  	%p15, %p13, %p14;
	mov.f64 	%fd22, %fd21;
	@%p15 bra 	$L__BB0_12;

	setp.gt.s32 	%p16, %r2, -1;
	selp.b32 	%r31, 2146435072, 0, %p16;
	mov.u32 	%r32, 0;
	setp.ne.s32 	%p17, %r4, 1071644672;
	and.pred  	%p18, %p17, %p1;
	or.b32  	%r33, %r31, -2147483648;
	selp.b32 	%r34, %r33, %r31, %p18;
	mov.b64 	%fd22, {%r32, %r34};

$L__BB0_12:
	add.rn.f64 	%fd17, %fd22, 0d3FF0000000000000;
	rcp.rn.f64 	%fd18, %fd17;
	setp.eq.f64 	%p20, %fd1, 0d8000000000000000;
	selp.f64 	%fd19, 0d3FE0000000000000, %fd18, %p20;
	st.global.f64 	[%rd1], %fd19;

$L__BB0_13:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<139>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	mov.f64 	%fd13, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd13;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB1_2;

	mov.f64 	%fd14, 0d4365BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB1_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd136, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB1_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd136;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd136;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd136, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB1_4:
	add.rn.f64 	%fd15, %fd136, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd17, %fd15;
	neg.f64 	%fd18, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd17;
	add.rn.f64 	%fd22, %fd136, 0dBFF0000000000000;
	mul.rn.f64 	%fd23, %fd22, %fd21;
	add.rn.f64 	%fd24, %fd23, %fd23;
	mul.rn.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	mul.rn.f64 	%fd39, %fd25, %fd38;
	sub.rn.f64 	%fd40, %fd22, %fd24;
	add.rn.f64 	%fd41, %fd40, %fd40;
	neg.f64 	%fd42, %fd24;
	fma.rn.f64 	%fd43, %fd42, %fd22, %fd41;
	mul.rn.f64 	%fd44, %fd21, %fd43;
	add.rn.f64 	%fd45, %fd39, 0d3FB5555555555555;
	mov.f64 	%fd46, 0d3FB5555555555555;
	sub.rn.f64 	%fd47, %fd46, %fd45;
	add.rn.f64 	%fd48, %fd39, %fd47;
	add.rn.f64 	%fd49, %fd48, 0d0000000000000000;
	add.rn.f64 	%fd50, %fd49, 0dBC46A4CB00B9E7B0;
	add.rn.f64 	%fd51, %fd45, %fd50;
	sub.rn.f64 	%fd52, %fd45, %fd51;
	add.rn.f64 	%fd53, %fd50, %fd52;
	mul.rn.f64 	%fd54, %fd24, %fd24;
	neg.f64 	%fd55, %fd54;
	fma.rn.f64 	%fd56, %fd24, %fd24, %fd55;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd44;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd44;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd57, {%r22, %r24};
	fma.rn.f64 	%fd58, %fd24, %fd57, %fd56;
	mul.rn.f64 	%fd59, %fd54, %fd24;
	neg.f64 	%fd60, %fd59;
	fma.rn.f64 	%fd61, %fd54, %fd24, %fd60;
	fma.rn.f64 	%fd62, %fd54, %fd44, %fd61;
	fma.rn.f64 	%fd63, %fd58, %fd24, %fd62;
	mul.rn.f64 	%fd64, %fd51, %fd59;
	neg.f64 	%fd65, %fd64;
	fma.rn.f64 	%fd66, %fd51, %fd59, %fd65;
	fma.rn.f64 	%fd67, %fd51, %fd63, %fd66;
	fma.rn.f64 	%fd68, %fd53, %fd59, %fd67;
	add.rn.f64 	%fd69, %fd64, %fd68;
	sub.rn.f64 	%fd70, %fd64, %fd69;
	add.rn.f64 	%fd71, %fd68, %fd70;
	add.rn.f64 	%fd72, %fd24, %fd69;
	sub.rn.f64 	%fd73, %fd24, %fd72;
	add.rn.f64 	%fd74, %fd69, %fd73;
	add.rn.f64 	%fd75, %fd71, %fd74;
	add.rn.f64 	%fd76, %fd44, %fd75;
	add.rn.f64 	%fd77, %fd72, %fd76;
	sub.rn.f64 	%fd78, %fd72, %fd77;
	add.rn.f64 	%fd79, %fd76, %fd78;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd80, {%r25, %r27};
	mov.b64 	%fd81, {%r26, %r27};
	sub.rn.f64 	%fd82, %fd80, %fd81;
	mov.f64 	%fd83, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd84, %fd82, %fd83, %fd77;
	neg.f64 	%fd85, %fd82;
	fma.rn.f64 	%fd86, %fd85, %fd83, %fd84;
	sub.rn.f64 	%fd87, %fd86, %fd77;
	sub.rn.f64 	%fd88, %fd79, %fd87;
	mov.f64 	%fd89, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd90, %fd82, %fd89, %fd88;
	add.rn.f64 	%fd91, %fd84, %fd90;
	sub.rn.f64 	%fd92, %fd84, %fd91;
	add.rn.f64 	%fd93, %fd90, %fd92;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd12;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd12;
	}
	mov.b64 	%fd94, {%r32, %r31};
	mul.rn.f64 	%fd95, %fd91, %fd94;
	neg.f64 	%fd96, %fd95;
	fma.rn.f64 	%fd97, %fd91, %fd94, %fd96;
	fma.rn.f64 	%fd98, %fd93, %fd94, %fd97;
	add.rn.f64 	%fd4, %fd95, %fd98;
	sub.rn.f64 	%fd99, %fd95, %fd4;
	add.rn.f64 	%fd5, %fd98, %fd99;
	mov.f64 	%fd100, 0d4338000000000000;
	mov.f64 	%fd101, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd102, %fd4, %fd101, %fd100;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd102;
	}
	mov.f64 	%fd103, 0dC338000000000000;
	add.rn.f64 	%fd104, %fd102, %fd103;
	mov.f64 	%fd105, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd106, %fd104, %fd105, %fd4;
	mov.f64 	%fd107, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd108, %fd104, %fd107, %fd106;
	mov.f64 	%fd109, 0d3E928AF3FCA213EA;
	mov.f64 	%fd110, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd111, %fd110, %fd108, %fd109;
	mov.f64 	%fd112, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd113, %fd111, %fd108, %fd112;
	mov.f64 	%fd114, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd115, %fd113, %fd108, %fd114;
	mov.f64 	%fd116, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd117, %fd115, %fd108, %fd116;
	mov.f64 	%fd118, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd119, %fd117, %fd108, %fd118;
	mov.f64 	%fd120, 0d3F81111111122322;
	fma.rn.f64 	%fd121, %fd119, %fd108, %fd120;
	mov.f64 	%fd122, 0d3FA55555555502A1;
	fma.rn.f64 	%fd123, %fd121, %fd108, %fd122;
	mov.f64 	%fd124, 0d3FC5555555555511;
	fma.rn.f64 	%fd125, %fd123, %fd108, %fd124;
	mov.f64 	%fd126, 0d3FE000000000000B;
	fma.rn.f64 	%fd127, %fd125, %fd108, %fd126;
	fma.rn.f64 	%fd128, %fd127, %fd108, %fd16;
	fma.rn.f64 	%fd129, %fd128, %fd108, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd129;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd129;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd137, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB1_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.rn.f64 	%fd130, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd137, 0d0000000000000000, %fd130, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB1_7;

	mov.f64 	%fd135, 0d4338000000000000;
	mov.f64 	%fd134, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd133, %fd4, %fd134, %fd135;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd133;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd131, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd132, {%r44, %r43};
	mul.rn.f64 	%fd137, %fd131, %fd132;

$L__BB1_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd137;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd137;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB1_9;

	fma.rn.f64 	%fd137, %fd137, %fd5, %fd137;

$L__BB1_9:
	st.param.f64 	[func_retval0+0], %fd137;
	ret;

}

`
const elembinopPTX = `//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_61
.address_size 64

	// .globl	add_vv_f64
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;

.visible .entry add_vv_f64(
	.param .u64 add_vv_f64_param_0,
	.param .u64 add_vv_f64_param_1,
	.param .u32 add_vv_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [add_vv_f64_param_0];
	ld.param.u64 	%rd2, [add_vv_f64_param_1];
	ld.param.u32 	%r2, [add_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	add.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB0_2:
	ret;

}
	// .globl	add_vv_f32
.visible .entry add_vv_f32(
	.param .u64 add_vv_f32_param_0,
	.param .u64 add_vv_f32_param_1,
	.param .u32 add_vv_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [add_vv_f32_param_0];
	ld.param.u64 	%rd2, [add_vv_f32_param_1];
	ld.param.u32 	%r2, [add_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	add.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB1_2:
	ret;

}
	// .globl	sub_vv_f64
.visible .entry sub_vv_f64(
	.param .u64 sub_vv_f64_param_0,
	.param .u64 sub_vv_f64_param_1,
	.param .u32 sub_vv_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [sub_vv_f64_param_0];
	ld.param.u64 	%rd2, [sub_vv_f64_param_1];
	ld.param.u32 	%r2, [sub_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	sub.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB2_2:
	ret;

}
	// .globl	sub_vv_f32
.visible .entry sub_vv_f32(
	.param .u64 sub_vv_f32_param_0,
	.param .u64 sub_vv_f32_param_1,
	.param .u32 sub_vv_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [sub_vv_f32_param_0];
	ld.param.u64 	%rd2, [sub_vv_f32_param_1];
	ld.param.u32 	%r2, [sub_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	sub.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB3_2:
	ret;

}
	// .globl	mul_vv_f64
.visible .entry mul_vv_f64(
	.param .u64 mul_vv_f64_param_0,
	.param .u64 mul_vv_f64_param_1,
	.param .u32 mul_vv_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [mul_vv_f64_param_0];
	ld.param.u64 	%rd2, [mul_vv_f64_param_1];
	ld.param.u32 	%r2, [mul_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB4_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	mul.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB4_2:
	ret;

}
	// .globl	mul_vv_f32
.visible .entry mul_vv_f32(
	.param .u64 mul_vv_f32_param_0,
	.param .u64 mul_vv_f32_param_1,
	.param .u32 mul_vv_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [mul_vv_f32_param_0];
	ld.param.u64 	%rd2, [mul_vv_f32_param_1];
	ld.param.u32 	%r2, [mul_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	mul.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB5_2:
	ret;

}
	// .globl	div_vv_f64
.visible .entry div_vv_f64(
	.param .u64 div_vv_f64_param_0,
	.param .u64 div_vv_f64_param_1,
	.param .u32 div_vv_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [div_vv_f64_param_0];
	ld.param.u64 	%rd2, [div_vv_f64_param_1];
	ld.param.u32 	%r2, [div_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB6_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	div.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB6_2:
	ret;

}
	// .globl	div_vv_f32
.visible .entry div_vv_f32(
	.param .u64 div_vv_f32_param_0,
	.param .u64 div_vv_f32_param_1,
	.param .u32 div_vv_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [div_vv_f32_param_0];
	ld.param.u64 	%rd2, [div_vv_f32_param_1];
	ld.param.u32 	%r2, [div_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	div.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB7_2:
	ret;

}
	// .globl	gt_vv_f64
.visible .entry gt_vv_f64(
	.param .u64 gt_vv_f64_param_0,
	.param .u64 gt_vv_f64_param_1,
	.param .u32 gt_vv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [gt_vv_f64_param_0];
	ld.param.u64 	%rd2, [gt_vv_f64_param_1];
	ld.param.u32 	%r2, [gt_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB8_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	setp.gt.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB8_2:
	ret;

}
	// .globl	gt_vv_f32
.visible .entry gt_vv_f32(
	.param .u64 gt_vv_f32_param_0,
	.param .u64 gt_vv_f32_param_1,
	.param .u32 gt_vv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [gt_vv_f32_param_0];
	ld.param.u64 	%rd2, [gt_vv_f32_param_1];
	ld.param.u32 	%r2, [gt_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB9_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	setp.gt.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB9_2:
	ret;

}
	// .globl	gte_vv_f64
.visible .entry gte_vv_f64(
	.param .u64 gte_vv_f64_param_0,
	.param .u64 gte_vv_f64_param_1,
	.param .u32 gte_vv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [gte_vv_f64_param_0];
	ld.param.u64 	%rd2, [gte_vv_f64_param_1];
	ld.param.u32 	%r2, [gte_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB10_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	setp.ge.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB10_2:
	ret;

}
	// .globl	gte_vv_f32
.visible .entry gte_vv_f32(
	.param .u64 gte_vv_f32_param_0,
	.param .u64 gte_vv_f32_param_1,
	.param .u32 gte_vv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [gte_vv_f32_param_0];
	ld.param.u64 	%rd2, [gte_vv_f32_param_1];
	ld.param.u32 	%r2, [gte_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB11_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	setp.ge.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB11_2:
	ret;

}
	// .globl	lt_vv_f64
.visible .entry lt_vv_f64(
	.param .u64 lt_vv_f64_param_0,
	.param .u64 lt_vv_f64_param_1,
	.param .u32 lt_vv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [lt_vv_f64_param_0];
	ld.param.u64 	%rd2, [lt_vv_f64_param_1];
	ld.param.u32 	%r2, [lt_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB12_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	setp.lt.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB12_2:
	ret;

}
	// .globl	lt_vv_f32
.visible .entry lt_vv_f32(
	.param .u64 lt_vv_f32_param_0,
	.param .u64 lt_vv_f32_param_1,
	.param .u32 lt_vv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [lt_vv_f32_param_0];
	ld.param.u64 	%rd2, [lt_vv_f32_param_1];
	ld.param.u32 	%r2, [lt_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB13_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	setp.lt.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB13_2:
	ret;

}
	// .globl	lte_vv_f64
.visible .entry lte_vv_f64(
	.param .u64 lte_vv_f64_param_0,
	.param .u64 lte_vv_f64_param_1,
	.param .u32 lte_vv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [lte_vv_f64_param_0];
	ld.param.u64 	%rd2, [lte_vv_f64_param_1];
	ld.param.u32 	%r2, [lte_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB14_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	setp.le.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB14_2:
	ret;

}
	// .globl	lte_vv_f32
.visible .entry lte_vv_f32(
	.param .u64 lte_vv_f32_param_0,
	.param .u64 lte_vv_f32_param_1,
	.param .u32 lte_vv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [lte_vv_f32_param_0];
	ld.param.u64 	%rd2, [lte_vv_f32_param_1];
	ld.param.u32 	%r2, [lte_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB15_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	setp.le.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB15_2:
	ret;

}
	// .globl	eq_vv_f64
.visible .entry eq_vv_f64(
	.param .u64 eq_vv_f64_param_0,
	.param .u64 eq_vv_f64_param_1,
	.param .u32 eq_vv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [eq_vv_f64_param_0];
	ld.param.u64 	%rd2, [eq_vv_f64_param_1];
	ld.param.u32 	%r2, [eq_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB16_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	setp.eq.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB16_2:
	ret;

}
	// .globl	eq_vv_f32
.visible .entry eq_vv_f32(
	.param .u64 eq_vv_f32_param_0,
	.param .u64 eq_vv_f32_param_1,
	.param .u32 eq_vv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [eq_vv_f32_param_0];
	ld.param.u64 	%rd2, [eq_vv_f32_param_1];
	ld.param.u32 	%r2, [eq_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB17_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	setp.eq.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB17_2:
	ret;

}
	// .globl	ne_vv_f64
.visible .entry ne_vv_f64(
	.param .u64 ne_vv_f64_param_0,
	.param .u64 ne_vv_f64_param_1,
	.param .u32 ne_vv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [ne_vv_f64_param_0];
	ld.param.u64 	%rd2, [ne_vv_f64_param_1];
	ld.param.u32 	%r2, [ne_vv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB18_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	setp.neu.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB18_2:
	ret;

}
	// .globl	ne_vv_f32
.visible .entry ne_vv_f32(
	.param .u64 ne_vv_f32_param_0,
	.param .u64 ne_vv_f32_param_1,
	.param .u32 ne_vv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [ne_vv_f32_param_0];
	ld.param.u64 	%rd2, [ne_vv_f32_param_1];
	ld.param.u32 	%r2, [ne_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB19_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	setp.neu.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB19_2:
	ret;

}
	// .globl	add_vs_f64
.visible .entry add_vs_f64(
	.param .u64 add_vs_f64_param_0,
	.param .u64 add_vs_f64_param_1,
	.param .u32 add_vs_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [add_vs_f64_param_0];
	ld.param.u64 	%rd2, [add_vs_f64_param_1];
	ld.param.u32 	%r2, [add_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB20_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	add.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB20_2:
	ret;

}
	// .globl	add_vs_f32
.visible .entry add_vs_f32(
	.param .u64 add_vs_f32_param_0,
	.param .u64 add_vs_f32_param_1,
	.param .u32 add_vs_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [add_vs_f32_param_0];
	ld.param.u64 	%rd2, [add_vs_f32_param_1];
	ld.param.u32 	%r2, [add_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB21_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	add.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB21_2:
	ret;

}
	// .globl	sub_vs_f64
.visible .entry sub_vs_f64(
	.param .u64 sub_vs_f64_param_0,
	.param .u64 sub_vs_f64_param_1,
	.param .u32 sub_vs_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [sub_vs_f64_param_0];
	ld.param.u64 	%rd2, [sub_vs_f64_param_1];
	ld.param.u32 	%r2, [sub_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB22_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	sub.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB22_2:
	ret;

}
	// .globl	sub_vs_f32
.visible .entry sub_vs_f32(
	.param .u64 sub_vs_f32_param_0,
	.param .u64 sub_vs_f32_param_1,
	.param .u32 sub_vs_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [sub_vs_f32_param_0];
	ld.param.u64 	%rd2, [sub_vs_f32_param_1];
	ld.param.u32 	%r2, [sub_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB23_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	sub.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB23_2:
	ret;

}
	// .globl	mul_vs_f64
.visible .entry mul_vs_f64(
	.param .u64 mul_vs_f64_param_0,
	.param .u64 mul_vs_f64_param_1,
	.param .u32 mul_vs_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [mul_vs_f64_param_0];
	ld.param.u64 	%rd2, [mul_vs_f64_param_1];
	ld.param.u32 	%r2, [mul_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB24_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	mul.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB24_2:
	ret;

}
	// .globl	mul_vs_f32
.visible .entry mul_vs_f32(
	.param .u64 mul_vs_f32_param_0,
	.param .u64 mul_vs_f32_param_1,
	.param .u32 mul_vs_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [mul_vs_f32_param_0];
	ld.param.u64 	%rd2, [mul_vs_f32_param_1];
	ld.param.u32 	%r2, [mul_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB25_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	mul.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB25_2:
	ret;

}
	// .globl	div_vs_f64
.visible .entry div_vs_f64(
	.param .u64 div_vs_f64_param_0,
	.param .u64 div_vs_f64_param_1,
	.param .u32 div_vs_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [div_vs_f64_param_0];
	ld.param.u64 	%rd2, [div_vs_f64_param_1];
	ld.param.u32 	%r2, [div_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB26_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	div.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB26_2:
	ret;

}
	// .globl	div_vs_f32
.visible .entry div_vs_f32(
	.param .u64 div_vs_f32_param_0,
	.param .u64 div_vs_f32_param_1,
	.param .u32 div_vs_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [div_vs_f32_param_0];
	ld.param.u64 	%rd2, [div_vs_f32_param_1];
	ld.param.u32 	%r2, [div_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB27_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	div.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB27_2:
	ret;

}
	// .globl	gt_vs_f64
.visible .entry gt_vs_f64(
	.param .u64 gt_vs_f64_param_0,
	.param .u64 gt_vs_f64_param_1,
	.param .u32 gt_vs_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [gt_vs_f64_param_0];
	ld.param.u64 	%rd2, [gt_vs_f64_param_1];
	ld.param.u32 	%r2, [gt_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB28_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	setp.gt.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB28_2:
	ret;

}
	// .globl	gt_vs_f32
.visible .entry gt_vs_f32(
	.param .u64 gt_vs_f32_param_0,
	.param .u64 gt_vs_f32_param_1,
	.param .u32 gt_vs_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [gt_vs_f32_param_0];
	ld.param.u64 	%rd2, [gt_vs_f32_param_1];
	ld.param.u32 	%r2, [gt_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB29_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	setp.gt.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB29_2:
	ret;

}
	// .globl	gte_vs_f64
.visible .entry gte_vs_f64(
	.param .u64 gte_vs_f64_param_0,
	.param .u64 gte_vs_f64_param_1,
	.param .u32 gte_vs_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [gte_vs_f64_param_0];
	ld.param.u64 	%rd2, [gte_vs_f64_param_1];
	ld.param.u32 	%r2, [gte_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB30_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	setp.ge.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB30_2:
	ret;

}
	// .globl	gte_vs_f32
.visible .entry gte_vs_f32(
	.param .u64 gte_vs_f32_param_0,
	.param .u64 gte_vs_f32_param_1,
	.param .u32 gte_vs_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [gte_vs_f32_param_0];
	ld.param.u64 	%rd2, [gte_vs_f32_param_1];
	ld.param.u32 	%r2, [gte_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB31_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	setp.ge.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB31_2:
	ret;

}
	// .globl	lt_vs_f64
.visible .entry lt_vs_f64(
	.param .u64 lt_vs_f64_param_0,
	.param .u64 lt_vs_f64_param_1,
	.param .u32 lt_vs_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [lt_vs_f64_param_0];
	ld.param.u64 	%rd2, [lt_vs_f64_param_1];
	ld.param.u32 	%r2, [lt_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB32_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	setp.lt.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB32_2:
	ret;

}
	// .globl	lt_vs_f32
.visible .entry lt_vs_f32(
	.param .u64 lt_vs_f32_param_0,
	.param .u64 lt_vs_f32_param_1,
	.param .u32 lt_vs_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [lt_vs_f32_param_0];
	ld.param.u64 	%rd2, [lt_vs_f32_param_1];
	ld.param.u32 	%r2, [lt_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB33_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	setp.lt.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB33_2:
	ret;

}
	// .globl	lte_vs_f64
.visible .entry lte_vs_f64(
	.param .u64 lte_vs_f64_param_0,
	.param .u64 lte_vs_f64_param_1,
	.param .u32 lte_vs_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [lte_vs_f64_param_0];
	ld.param.u64 	%rd2, [lte_vs_f64_param_1];
	ld.param.u32 	%r2, [lte_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB34_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	setp.le.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB34_2:
	ret;

}
	// .globl	lte_vs_f32
.visible .entry lte_vs_f32(
	.param .u64 lte_vs_f32_param_0,
	.param .u64 lte_vs_f32_param_1,
	.param .u32 lte_vs_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [lte_vs_f32_param_0];
	ld.param.u64 	%rd2, [lte_vs_f32_param_1];
	ld.param.u32 	%r2, [lte_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB35_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	setp.le.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB35_2:
	ret;

}
	// .globl	eq_vs_f64
.visible .entry eq_vs_f64(
	.param .u64 eq_vs_f64_param_0,
	.param .u64 eq_vs_f64_param_1,
	.param .u32 eq_vs_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [eq_vs_f64_param_0];
	ld.param.u64 	%rd2, [eq_vs_f64_param_1];
	ld.param.u32 	%r2, [eq_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB36_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	setp.eq.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB36_2:
	ret;

}
	// .globl	eq_vs_f32
.visible .entry eq_vs_f32(
	.param .u64 eq_vs_f32_param_0,
	.param .u64 eq_vs_f32_param_1,
	.param .u32 eq_vs_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [eq_vs_f32_param_0];
	ld.param.u64 	%rd2, [eq_vs_f32_param_1];
	ld.param.u32 	%r2, [eq_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB37_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	setp.eq.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB37_2:
	ret;

}
	// .globl	ne_vs_f64
.visible .entry ne_vs_f64(
	.param .u64 ne_vs_f64_param_0,
	.param .u64 ne_vs_f64_param_1,
	.param .u32 ne_vs_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [ne_vs_f64_param_0];
	ld.param.u64 	%rd2, [ne_vs_f64_param_1];
	ld.param.u32 	%r2, [ne_vs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB38_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f64 	%fd1, [%rd6];
	ld.global.f64 	%fd2, [%rd5];
	setp.neu.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB38_2:
	ret;

}
	// .globl	ne_vs_f32
.visible .entry ne_vs_f32(
	.param .u64 ne_vs_f32_param_0,
	.param .u64 ne_vs_f32_param_1,
	.param .u32 ne_vs_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [ne_vs_f32_param_0];
	ld.param.u64 	%rd2, [ne_vs_f32_param_1];
	ld.param.u32 	%r2, [ne_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB39_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	setp.neu.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB39_2:
	ret;

}
	// .globl	add_sv_f64
.visible .entry add_sv_f64(
	.param .u64 add_sv_f64_param_0,
	.param .u64 add_sv_f64_param_1,
	.param .u32 add_sv_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [add_sv_f64_param_0];
	ld.param.u64 	%rd2, [add_sv_f64_param_1];
	ld.param.u32 	%r2, [add_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB40_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	add.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB40_2:
	ret;

}
	// .globl	add_sv_f32
.visible .entry add_sv_f32(
	.param .u64 add_sv_f32_param_0,
	.param .u64 add_sv_f32_param_1,
	.param .u32 add_sv_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [add_sv_f32_param_0];
	ld.param.u64 	%rd2, [add_sv_f32_param_1];
	ld.param.u32 	%r2, [add_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB41_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	add.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB41_2:
	ret;

}
	// .globl	sub_sv_f64
.visible .entry sub_sv_f64(
	.param .u64 sub_sv_f64_param_0,
	.param .u64 sub_sv_f64_param_1,
	.param .u32 sub_sv_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [sub_sv_f64_param_0];
	ld.param.u64 	%rd2, [sub_sv_f64_param_1];
	ld.param.u32 	%r2, [sub_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB42_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	sub.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB42_2:
	ret;

}
	// .globl	sub_sv_f32
.visible .entry sub_sv_f32(
	.param .u64 sub_sv_f32_param_0,
	.param .u64 sub_sv_f32_param_1,
	.param .u32 sub_sv_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [sub_sv_f32_param_0];
	ld.param.u64 	%rd2, [sub_sv_f32_param_1];
	ld.param.u32 	%r2, [sub_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB43_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	sub.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB43_2:
	ret;

}
	// .globl	mul_sv_f64
.visible .entry mul_sv_f64(
	.param .u64 mul_sv_f64_param_0,
	.param .u64 mul_sv_f64_param_1,
	.param .u32 mul_sv_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [mul_sv_f64_param_0];
	ld.param.u64 	%rd2, [mul_sv_f64_param_1];
	ld.param.u32 	%r2, [mul_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB44_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	mul.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB44_2:
	ret;

}
	// .globl	mul_sv_f32
.visible .entry mul_sv_f32(
	.param .u64 mul_sv_f32_param_0,
	.param .u64 mul_sv_f32_param_1,
	.param .u32 mul_sv_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [mul_sv_f32_param_0];
	ld.param.u64 	%rd2, [mul_sv_f32_param_1];
	ld.param.u32 	%r2, [mul_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB45_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	mul.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB45_2:
	ret;

}
	// .globl	div_sv_f64
.visible .entry div_sv_f64(
	.param .u64 div_sv_f64_param_0,
	.param .u64 div_sv_f64_param_1,
	.param .u32 div_sv_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [div_sv_f64_param_0];
	ld.param.u64 	%rd2, [div_sv_f64_param_1];
	ld.param.u32 	%r2, [div_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB46_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	div.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd5], %fd3;

$L__BB46_2:
	ret;

}
	// .globl	div_sv_f32
.visible .entry div_sv_f32(
	.param .u64 div_sv_f32_param_0,
	.param .u64 div_sv_f32_param_1,
	.param .u32 div_sv_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [div_sv_f32_param_0];
	ld.param.u64 	%rd2, [div_sv_f32_param_1];
	ld.param.u32 	%r2, [div_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB47_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	div.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd5], %f3;

$L__BB47_2:
	ret;

}
	// .globl	gt_sv_f64
.visible .entry gt_sv_f64(
	.param .u64 gt_sv_f64_param_0,
	.param .u64 gt_sv_f64_param_1,
	.param .u32 gt_sv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [gt_sv_f64_param_0];
	ld.param.u64 	%rd2, [gt_sv_f64_param_1];
	ld.param.u32 	%r2, [gt_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB48_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	setp.gt.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB48_2:
	ret;

}
	// .globl	gt_sv_f32
.visible .entry gt_sv_f32(
	.param .u64 gt_sv_f32_param_0,
	.param .u64 gt_sv_f32_param_1,
	.param .u32 gt_sv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [gt_sv_f32_param_0];
	ld.param.u64 	%rd2, [gt_sv_f32_param_1];
	ld.param.u32 	%r2, [gt_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB49_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	setp.gt.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB49_2:
	ret;

}
	// .globl	gte_sv_f64
.visible .entry gte_sv_f64(
	.param .u64 gte_sv_f64_param_0,
	.param .u64 gte_sv_f64_param_1,
	.param .u32 gte_sv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [gte_sv_f64_param_0];
	ld.param.u64 	%rd2, [gte_sv_f64_param_1];
	ld.param.u32 	%r2, [gte_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB50_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	setp.ge.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB50_2:
	ret;

}
	// .globl	gte_sv_f32
.visible .entry gte_sv_f32(
	.param .u64 gte_sv_f32_param_0,
	.param .u64 gte_sv_f32_param_1,
	.param .u32 gte_sv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [gte_sv_f32_param_0];
	ld.param.u64 	%rd2, [gte_sv_f32_param_1];
	ld.param.u32 	%r2, [gte_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB51_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	setp.ge.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB51_2:
	ret;

}
	// .globl	lt_sv_f64
.visible .entry lt_sv_f64(
	.param .u64 lt_sv_f64_param_0,
	.param .u64 lt_sv_f64_param_1,
	.param .u32 lt_sv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [lt_sv_f64_param_0];
	ld.param.u64 	%rd2, [lt_sv_f64_param_1];
	ld.param.u32 	%r2, [lt_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB52_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	setp.lt.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB52_2:
	ret;

}
	// .globl	lt_sv_f32
.visible .entry lt_sv_f32(
	.param .u64 lt_sv_f32_param_0,
	.param .u64 lt_sv_f32_param_1,
	.param .u32 lt_sv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [lt_sv_f32_param_0];
	ld.param.u64 	%rd2, [lt_sv_f32_param_1];
	ld.param.u32 	%r2, [lt_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB53_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	setp.lt.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB53_2:
	ret;

}
	// .globl	lte_sv_f64
.visible .entry lte_sv_f64(
	.param .u64 lte_sv_f64_param_0,
	.param .u64 lte_sv_f64_param_1,
	.param .u32 lte_sv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [lte_sv_f64_param_0];
	ld.param.u64 	%rd2, [lte_sv_f64_param_1];
	ld.param.u32 	%r2, [lte_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB54_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	setp.le.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB54_2:
	ret;

}
	// .globl	lte_sv_f32
.visible .entry lte_sv_f32(
	.param .u64 lte_sv_f32_param_0,
	.param .u64 lte_sv_f32_param_1,
	.param .u32 lte_sv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [lte_sv_f32_param_0];
	ld.param.u64 	%rd2, [lte_sv_f32_param_1];
	ld.param.u32 	%r2, [lte_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB55_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	setp.le.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB55_2:
	ret;

}
	// .globl	eq_sv_f64
.visible .entry eq_sv_f64(
	.param .u64 eq_sv_f64_param_0,
	.param .u64 eq_sv_f64_param_1,
	.param .u32 eq_sv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [eq_sv_f64_param_0];
	ld.param.u64 	%rd2, [eq_sv_f64_param_1];
	ld.param.u32 	%r2, [eq_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB56_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	setp.eq.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB56_2:
	ret;

}
	// .globl	eq_sv_f32
.visible .entry eq_sv_f32(
	.param .u64 eq_sv_f32_param_0,
	.param .u64 eq_sv_f32_param_1,
	.param .u32 eq_sv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [eq_sv_f32_param_0];
	ld.param.u64 	%rd2, [eq_sv_f32_param_1];
	ld.param.u32 	%r2, [eq_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB57_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	setp.eq.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB57_2:
	ret;

}
	// .globl	ne_sv_f64
.visible .entry ne_sv_f64(
	.param .u64 ne_sv_f64_param_0,
	.param .u64 ne_sv_f64_param_1,
	.param .u32 ne_sv_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [ne_sv_f64_param_0];
	ld.param.u64 	%rd2, [ne_sv_f64_param_1];
	ld.param.u32 	%r2, [ne_sv_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB58_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f64 	%fd2, [%rd6];
	setp.neu.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd5], %fd3;

$L__BB58_2:
	ret;

}
	// .globl	ne_sv_f32
.visible .entry ne_sv_f32(
	.param .u64 ne_sv_f32_param_0,
	.param .u64 ne_sv_f32_param_1,
	.param .u32 ne_sv_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [ne_sv_f32_param_0];
	ld.param.u64 	%rd2, [ne_sv_f32_param_1];
	ld.param.u32 	%r2, [ne_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB59_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.f32 	%f2, [%rd6];
	setp.neu.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd5], %f3;

$L__BB59_2:
	ret;

}
	// .globl	add_ss_f64
.visible .entry add_ss_f64(
	.param .u64 add_ss_f64_param_0,
	.param .u64 add_ss_f64_param_1,
	.param .u32 add_ss_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [add_ss_f64_param_0];
	ld.param.u64 	%rd2, [add_ss_f64_param_1];
	ld.param.u32 	%r1, [add_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB60_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	add.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd3], %fd3;

$L__BB60_2:
	ret;

}
	// .globl	add_ss_f32
.visible .entry add_ss_f32(
	.param .u64 add_ss_f32_param_0,
	.param .u64 add_ss_f32_param_1,
	.param .u32 add_ss_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [add_ss_f32_param_0];
	ld.param.u64 	%rd2, [add_ss_f32_param_1];
	ld.param.u32 	%r1, [add_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB61_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	add.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd3], %f3;

$L__BB61_2:
	ret;

}
	// .globl	sub_ss_f64
.visible .entry sub_ss_f64(
	.param .u64 sub_ss_f64_param_0,
	.param .u64 sub_ss_f64_param_1,
	.param .u32 sub_ss_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [sub_ss_f64_param_0];
	ld.param.u64 	%rd2, [sub_ss_f64_param_1];
	ld.param.u32 	%r1, [sub_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB62_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	sub.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd3], %fd3;

$L__BB62_2:
	ret;

}
	// .globl	sub_ss_f32
.visible .entry sub_ss_f32(
	.param .u64 sub_ss_f32_param_0,
	.param .u64 sub_ss_f32_param_1,
	.param .u32 sub_ss_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [sub_ss_f32_param_0];
	ld.param.u64 	%rd2, [sub_ss_f32_param_1];
	ld.param.u32 	%r1, [sub_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB63_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	sub.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd3], %f3;

$L__BB63_2:
	ret;

}
	// .globl	mul_ss_f64
.visible .entry mul_ss_f64(
	.param .u64 mul_ss_f64_param_0,
	.param .u64 mul_ss_f64_param_1,
	.param .u32 mul_ss_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [mul_ss_f64_param_0];
	ld.param.u64 	%rd2, [mul_ss_f64_param_1];
	ld.param.u32 	%r1, [mul_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB64_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	mul.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd3], %fd3;

$L__BB64_2:
	ret;

}
	// .globl	mul_ss_f32
.visible .entry mul_ss_f32(
	.param .u64 mul_ss_f32_param_0,
	.param .u64 mul_ss_f32_param_1,
	.param .u32 mul_ss_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [mul_ss_f32_param_0];
	ld.param.u64 	%rd2, [mul_ss_f32_param_1];
	ld.param.u32 	%r1, [mul_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB65_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	mul.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd3], %f3;

$L__BB65_2:
	ret;

}
	// .globl	div_ss_f64
.visible .entry div_ss_f64(
	.param .u64 div_ss_f64_param_0,
	.param .u64 div_ss_f64_param_1,
	.param .u32 div_ss_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [div_ss_f64_param_0];
	ld.param.u64 	%rd2, [div_ss_f64_param_1];
	ld.param.u32 	%r1, [div_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB66_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	div.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd3], %fd3;

$L__BB66_2:
	ret;

}
	// .globl	div_ss_f32
.visible .entry div_ss_f32(
	.param .u64 div_ss_f32_param_0,
	.param .u64 div_ss_f32_param_1,
	.param .u32 div_ss_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [div_ss_f32_param_0];
	ld.param.u64 	%rd2, [div_ss_f32_param_1];
	ld.param.u32 	%r1, [div_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB67_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	div.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd3], %f3;

$L__BB67_2:
	ret;

}
	// .globl	gt_ss_f64
.visible .entry gt_ss_f64(
	.param .u64 gt_ss_f64_param_0,
	.param .u64 gt_ss_f64_param_1,
	.param .u32 gt_ss_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [gt_ss_f64_param_0];
	ld.param.u64 	%rd2, [gt_ss_f64_param_1];
	ld.param.u32 	%r1, [gt_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB68_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	setp.gt.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd3], %fd3;

$L__BB68_2:
	ret;

}
	// .globl	gt_ss_f32
.visible .entry gt_ss_f32(
	.param .u64 gt_ss_f32_param_0,
	.param .u64 gt_ss_f32_param_1,
	.param .u32 gt_ss_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [gt_ss_f32_param_0];
	ld.param.u64 	%rd2, [gt_ss_f32_param_1];
	ld.param.u32 	%r1, [gt_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB69_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	setp.gt.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd3], %f3;

$L__BB69_2:
	ret;

}
	// .globl	gte_ss_f64
.visible .entry gte_ss_f64(
	.param .u64 gte_ss_f64_param_0,
	.param .u64 gte_ss_f64_param_1,
	.param .u32 gte_ss_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [gte_ss_f64_param_0];
	ld.param.u64 	%rd2, [gte_ss_f64_param_1];
	ld.param.u32 	%r1, [gte_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB70_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	setp.ge.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd3], %fd3;

$L__BB70_2:
	ret;

}
	// .globl	gte_ss_f32
.visible .entry gte_ss_f32(
	.param .u64 gte_ss_f32_param_0,
	.param .u64 gte_ss_f32_param_1,
	.param .u32 gte_ss_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [gte_ss_f32_param_0];
	ld.param.u64 	%rd2, [gte_ss_f32_param_1];
	ld.param.u32 	%r1, [gte_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB71_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	setp.ge.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd3], %f3;

$L__BB71_2:
	ret;

}
	// .globl	lt_ss_f64
.visible .entry lt_ss_f64(
	.param .u64 lt_ss_f64_param_0,
	.param .u64 lt_ss_f64_param_1,
	.param .u32 lt_ss_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [lt_ss_f64_param_0];
	ld.param.u64 	%rd2, [lt_ss_f64_param_1];
	ld.param.u32 	%r1, [lt_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB72_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	setp.lt.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd3], %fd3;

$L__BB72_2:
	ret;

}
	// .globl	lt_ss_f32
.visible .entry lt_ss_f32(
	.param .u64 lt_ss_f32_param_0,
	.param .u64 lt_ss_f32_param_1,
	.param .u32 lt_ss_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [lt_ss_f32_param_0];
	ld.param.u64 	%rd2, [lt_ss_f32_param_1];
	ld.param.u32 	%r1, [lt_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB73_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	setp.lt.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd3], %f3;

$L__BB73_2:
	ret;

}
	// .globl	lte_ss_f64
.visible .entry lte_ss_f64(
	.param .u64 lte_ss_f64_param_0,
	.param .u64 lte_ss_f64_param_1,
	.param .u32 lte_ss_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [lte_ss_f64_param_0];
	ld.param.u64 	%rd2, [lte_ss_f64_param_1];
	ld.param.u32 	%r1, [lte_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB74_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	setp.le.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd3], %fd3;

$L__BB74_2:
	ret;

}
	// .globl	lte_ss_f32
.visible .entry lte_ss_f32(
	.param .u64 lte_ss_f32_param_0,
	.param .u64 lte_ss_f32_param_1,
	.param .u32 lte_ss_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [lte_ss_f32_param_0];
	ld.param.u64 	%rd2, [lte_ss_f32_param_1];
	ld.param.u32 	%r1, [lte_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB75_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	setp.le.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd3], %f3;

$L__BB75_2:
	ret;

}
	// .globl	eq_ss_f64
.visible .entry eq_ss_f64(
	.param .u64 eq_ss_f64_param_0,
	.param .u64 eq_ss_f64_param_1,
	.param .u32 eq_ss_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [eq_ss_f64_param_0];
	ld.param.u64 	%rd2, [eq_ss_f64_param_1];
	ld.param.u32 	%r1, [eq_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB76_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	setp.eq.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd3], %fd3;

$L__BB76_2:
	ret;

}
	// .globl	eq_ss_f32
.visible .entry eq_ss_f32(
	.param .u64 eq_ss_f32_param_0,
	.param .u64 eq_ss_f32_param_1,
	.param .u32 eq_ss_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [eq_ss_f32_param_0];
	ld.param.u64 	%rd2, [eq_ss_f32_param_1];
	ld.param.u32 	%r1, [eq_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB77_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	setp.eq.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd3], %f3;

$L__BB77_2:
	ret;

}
	// .globl	ne_ss_f64
.visible .entry ne_ss_f64(
	.param .u64 ne_ss_f64_param_0,
	.param .u64 ne_ss_f64_param_1,
	.param .u32 ne_ss_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [ne_ss_f64_param_0];
	ld.param.u64 	%rd2, [ne_ss_f64_param_1];
	ld.param.u32 	%r1, [ne_ss_f64_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB78_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f64 	%fd1, [%rd4];
	ld.global.f64 	%fd2, [%rd3];
	setp.neu.f64 	%p2, %fd2, %fd1;
	selp.f64 	%fd3, 0d3FF0000000000000, 0d0000000000000000, %p2;
	st.global.f64 	[%rd3], %fd3;

$L__BB78_2:
	ret;

}
	// .globl	ne_ss_f32
.visible .entry ne_ss_f32(
	.param .u64 ne_ss_f32_param_0,
	.param .u64 ne_ss_f32_param_1,
	.param .u32 ne_ss_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [ne_ss_f32_param_0];
	ld.param.u64 	%rd2, [ne_ss_f32_param_1];
	ld.param.u32 	%r1, [ne_ss_f32_param_2];
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r17, %r1;
	@%p1 bra 	$L__BB79_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	ld.global.f32 	%f2, [%rd3];
	setp.neu.f32 	%p2, %f2, %f1;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p2;
	st.global.f32 	[%rd3], %f3;

$L__BB79_2:
	ret;

}
	// .globl	pow_vv_f64
.visible .entry pow_vv_f64(
	.param .u64 pow_vv_f64_param_0,
	.param .u64 pow_vv_f64_param_1,
	.param .u32 pow_vv_f64_param_2
)
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<50>;
	.reg .f64 	%fd<21>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd2, [pow_vv_f64_param_0];
	ld.param.u64 	%rd3, [pow_vv_f64_param_1];
	ld.param.u32 	%r8, [pow_vv_f64_param_2];
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %ctaid.z;
	mov.u32 	%r11, %nctaid.y;
	mov.u32 	%r12, %ctaid.y;
	mad.lo.s32 	%r13, %r10, %r11, %r12;
	mov.u32 	%r14, %nctaid.x;
	mad.lo.s32 	%r15, %r13, %r14, %r9;
	mov.u32 	%r16, %ntid.z;
	mov.u32 	%r17, %tid.z;
	mad.lo.s32 	%r18, %r15, %r16, %r17;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r21, %r18, %r19, %r20;
	mov.u32 	%r22, %ntid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r21, %r22, %r23;
	setp.ge.s32 	%p2, %r1, %r8;
	@%p2 bra 	$L__BB80_16;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd1, %rd4, %rd5;
	cvta.to.global.u64 	%rd6, %rd3;
	add.s64 	%rd7, %rd6, %rd5;
	ld.global.f64 	%fd1, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	ld.global.f64 	%fd2, [%rd7];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd2;
	}
	bfe.u32 	%r24, %r3, 20, 11;
	add.s32 	%r25, %r24, -1012;
	mov.b64 	%rd8, %fd2;
	shl.b64 	%rd9, %rd8, %r25;
	setp.eq.s64 	%p1, %rd9, -9223372036854775808;
	setp.ne.s64 	%p3, %rd9, -9223372036854775808;
	abs.f64 	%fd3, %fd1;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd3;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd19, [retval0+0];
	} // callseq 0
	setp.gt.s32 	%p4, %r2, -1;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB80_3;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd19;
	}
	xor.b32  	%r27, %r26, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd19;
	}
	mov.b64 	%fd19, {%r28, %r27};

$L__BB80_3:
	setp.eq.f64 	%p6, %fd1, 0d0000000000000000;
	@%p6 bra 	$L__BB80_7;
	bra.uni 	$L__BB80_4;

$L__BB80_7:
	abs.f64 	%fd15, %fd2;
	setp.neu.f64 	%p10, %fd15, 0d3FE0000000000000;
	and.pred  	%p11, %p1, %p10;
	selp.u32 	%r49, 1, 0, %p11;
	selp.b32 	%r31, %r2, 0, %p11;
	mov.u32 	%r32, 0;
	or.b32  	%r33, %r31, 2146435072;
	setp.lt.s32 	%p12, %r3, 0;
	selp.b32 	%r34, %r33, %r31, %p12;
	mov.b64 	%fd19, {%r32, %r34};
	bra.uni 	$L__BB80_8;

$L__BB80_4:
	selp.u32 	%r49, 1, 0, %p1;
	@%p4 bra 	$L__BB80_8;

	cvt.rzi.f64.f64 	%fd13, %fd2;
	setp.eq.f64 	%p8, %fd13, %fd2;
	@%p8 bra 	$L__BB80_8;

	mov.f64 	%fd19, 0dFFF8000000000000;

$L__BB80_8:
	add.rn.f64 	%fd9, %fd1, %fd2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd9;
	}
	and.b32  	%r36, %r35, 2146435072;
	setp.ne.s32 	%p13, %r36, 2146435072;
	mov.f64 	%fd20, %fd19;
	@%p13 bra 	$L__BB80_15;

	setp.gtu.f64 	%p14, %fd3, 0d7FF0000000000000;
	mov.f64 	%fd20, %fd9;
	@%p14 bra 	$L__BB80_15;

	abs.f64 	%fd16, %fd2;
	setp.gtu.f64 	%p15, %fd16, 0d7FF0000000000000;
	mov.f64 	%fd20, %fd9;
	@%p15 bra 	$L__BB80_15;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r37, %temp}, %fd2;
	}
	and.b32  	%r7, %r3, 2147483647;
	setp.eq.s32 	%p16, %r7, 2146435072;
	setp.eq.s32 	%p17, %r37, 0;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB80_14;
	bra.uni 	$L__BB80_12;

$L__BB80_14:
	setp.gt.f64 	%p28, %fd3, 0d3FF0000000000000;
	selp.b32 	%r44, 2146435072, 0, %p28;
	mov.u32 	%r45, 0;
	xor.b32  	%r46, %r44, 2146435072;
	setp.lt.s32 	%p29, %r3, 0;
	selp.b32 	%r47, %r46, %r44, %p29;
	setp.eq.f64 	%p30, %fd1, 0dBFF0000000000000;
	selp.b32 	%r48, 1072693248, %r47, %p30;
	mov.b64 	%fd20, {%r45, %r48};
	bra.uni 	$L__BB80_15;

$L__BB80_12:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r38, %temp}, %fd1;
	}
	and.b32  	%r39, %r2, 2147483647;
	setp.ne.s32 	%p19, %r39, 2146435072;
	setp.ne.s32 	%p20, %r38, 0;
	or.pred  	%p21, %p19, %p20;
	mov.f64 	%fd20, %fd19;
	@%p21 bra 	$L__BB80_15;

	setp.lt.s32 	%p22, %r2, 0;
	mov.u32 	%r40, 0;
	setp.gt.s32 	%p23, %r3, -1;
	selp.b32 	%r41, 2146435072, 0, %p23;
	setp.ne.s32 	%p24, %r49, 0;
	and.pred  	%p25, %p22, %p24;
	setp.ne.s32 	%p26, %r7, 1071644672;
	and.pred  	%p27, %p26, %p25;
	or.b32  	%r42, %r41, -2147483648;
	selp.b32 	%r43, %r42, %r41, %p27;
	mov.b64 	%fd20, {%r40, %r43};

$L__BB80_15:
	setp.eq.f64 	%p31, %fd2, 0d0000000000000000;
	setp.eq.f64 	%p32, %fd1, 0d3FF0000000000000;
	or.pred  	%p33, %p32, %p31;
	selp.f64 	%fd17, 0d3FF0000000000000, %fd20, %p33;
	st.global.f64 	[%rd1], %fd17;

$L__BB80_16:
	ret;

}
	// .globl	pow_vv_f32
.visible .entry pow_vv_f32(
	.param .u64 pow_vv_f32_param_0,
	.param .u64 pow_vv_f32_param_1,
	.param .u32 pow_vv_f32_param_2
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<108>;
	.reg .b32 	%r<58>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd2, [pow_vv_f32_param_0];
	ld.param.u64 	%rd3, [pow_vv_f32_param_1];
	ld.param.u32 	%r2, [pow_vv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB81_16;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd1, %rd4, %rd5;
	cvta.to.global.u64 	%rd6, %rd3;
	add.s64 	%rd7, %rd6, %rd5;
	ld.global.f32 	%f1, [%rd7];
	mul.rn.f32 	%f18, %f1, 0f3F000000;
	cvt.rzi.f32.f32 	%f19, %f18;
	add.rn.f32 	%f20, %f19, %f19;
	sub.rn.f32 	%f21, %f1, %f20;
	abs.f32 	%f2, %f21;
	ld.global.f32 	%f3, [%rd1];
	abs.f32 	%f4, %f3;
	setp.lt.f32 	%p3, %f4, 0f00800000;
	mul.rn.f32 	%f22, %f4, 0f4B800000;
	selp.f32 	%f23, %f22, %f4, %p3;
	selp.f32 	%f24, 0fC3170000, 0fC2FE0000, %p3;
	mov.b32 	%r18, %f23;
	and.b32  	%r19, %r18, 8388607;
	or.b32  	%r20, %r19, 1065353216;
	mov.b32 	%f25, %r20;
	shr.u32 	%r21, %r18, 23;
	cvt.rn.f32.u32 	%f26, %r21;
	add.rn.f32 	%f27, %f24, %f26;
	setp.gt.f32 	%p4, %f25, 0f3FB504F3;
	mul.rn.f32 	%f28, %f25, 0f3F000000;
	add.rn.f32 	%f29, %f27, 0f3F800000;
	selp.f32 	%f30, %f29, %f27, %p4;
	selp.f32 	%f31, %f28, %f25, %p4;
	add.rn.f32 	%f32, %f31, 0fBF800000;
	add.rn.f32 	%f33, %f31, 0f3F800000;
	rcp.approx.ftz.f32 	%f34, %f33;
	add.rn.f32 	%f35, %f32, %f32;
	mul.rn.f32 	%f36, %f35, %f34;
	mul.rn.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3C4CAF63;
	mov.f32 	%f39, 0f3B18F0FE;
	fma.rn.f32 	%f40, %f39, %f37, %f38;
	mov.f32 	%f41, 0f3DAAAABD;
	fma.rn.f32 	%f42, %f40, %f37, %f41;
	mul.rn.f32 	%f43, %f42, %f37;
	mul.rn.f32 	%f44, %f43, %f36;
	sub.rn.f32 	%f45, %f32, %f36;
	add.rn.f32 	%f46, %f45, %f45;
	neg.f32 	%f47, %f36;
	fma.rn.f32 	%f48, %f47, %f32, %f46;
	mul.rn.f32 	%f49, %f34, %f48;
	add.rn.f32 	%f50, %f44, %f36;
	sub.rn.f32 	%f51, %f36, %f50;
	add.rn.f32 	%f52, %f44, %f51;
	add.rn.f32 	%f53, %f49, %f52;
	add.rn.f32 	%f54, %f50, %f53;
	sub.rn.f32 	%f55, %f50, %f54;
	add.rn.f32 	%f56, %f53, %f55;
	mov.f32 	%f57, 0f3F317200;
	mul.rn.f32 	%f58, %f30, %f57;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f30, %f59;
	add.rn.f32 	%f61, %f58, %f54;
	sub.rn.f32 	%f62, %f58, %f61;
	add.rn.f32 	%f63, %f54, %f62;
	add.rn.f32 	%f64, %f56, %f63;
	add.rn.f32 	%f65, %f60, %f64;
	add.rn.f32 	%f66, %f61, %f65;
	sub.rn.f32 	%f67, %f61, %f66;
	add.rn.f32 	%f68, %f65, %f67;
	abs.f32 	%f5, %f1;
	setp.gt.f32 	%p5, %f5, 0f77F684DF;
	mul.rn.f32 	%f69, %f1, 0f39000000;
	selp.f32 	%f70, %f69, %f1, %p5;
	mul.rn.f32 	%f71, %f70, %f66;
	neg.f32 	%f72, %f71;
	fma.rn.f32 	%f73, %f70, %f66, %f72;
	fma.rn.f32 	%f74, %f70, %f68, %f73;
	mov.f32 	%f75, 0f00000000;
	fma.rn.f32 	%f76, %f75, %f66, %f74;
	add.rn.f32 	%f77, %f71, %f76;
	neg.f32 	%f78, %f77;
	add.rn.f32 	%f79, %f71, %f78;
	add.rn.f32 	%f80, %f79, %f76;
	mov.b32 	%r22, %f77;
	setp.eq.s32 	%p6, %r22, 1118925336;
	add.s32 	%r23, %r22, -1;
	mov.b32 	%f81, %r23;
	add.rn.f32 	%f82, %f80, 0f37000000;
	selp.f32 	%f6, %f82, %f80, %p6;
	selp.f32 	%f83, %f81, %f77, %p6;
	mov.f32 	%f84, 0f3FB8AA3B;
	mul.rn.f32 	%f85, %f83, %f84;
	cvt.rzi.f32.f32 	%f86, %f85;
	abs.f32 	%f87, %f86;
	setp.gt.f32 	%p7, %f87, 0f42FC0000;
	mov.b32 	%r24, %f86;
	and.b32  	%r25, %r24, -2147483648;
	or.b32  	%r26, %r25, 1123811328;
	mov.b32 	%f88, %r26;
	selp.f32 	%f89, %f88, %f86, %p7;
	mov.f32 	%f90, 0fBF317218;
	fma.rn.f32 	%f91, %f89, %f90, %f83;
	mov.f32 	%f92, 0f3102E308;
	fma.rn.f32 	%f93, %f89, %f92, %f91;
	mul.rn.f32 	%f94, %f93, 0f3FB8AA3B;
	add.rn.f32 	%f95, %f89, 0f4B40007F;
	mov.b32 	%r27, %f95;
	shl.b32 	%r28, %r27, 23;
	mov.b32 	%f96, %r28;
	ex2.approx.ftz.f32 	%f97, %f94;
	mul.rn.f32 	%f7, %f97, %f96;
	setp.eq.f32 	%p8, %f7, 0f7F800000;
	mov.f32 	%f105, 0f7F800000;
	@%p8 bra 	$L__BB81_3;

	fma.rn.f32 	%f105, %f7, %f6, %f7;

$L__BB81_3:
	setp.lt.f32 	%p9, %f3, 0f00000000;
	setp.eq.f32 	%p10, %f2, 0f3F800000;
	and.pred  	%p1, %p9, %p10;
	setp.eq.f32 	%p11, %f3, 0f00000000;
	@%p11 bra 	$L__BB81_7;
	bra.uni 	$L__BB81_4;

$L__BB81_7:
	add.rn.f32 	%f101, %f3, %f3;
	mov.b32 	%r31, %f101;
	selp.b32 	%r32, %r31, 0, %p10;
	or.b32  	%r33, %r32, 2139095040;
	setp.lt.f32 	%p15, %f1, 0f00000000;
	selp.b32 	%r34, %r33, %r32, %p15;
	mov.b32 	%f107, %r34;
	bra.uni 	$L__BB81_8;

$L__BB81_4:
	mov.b32 	%r29, %f105;
	xor.b32  	%r30, %r29, -2147483648;
	mov.b32 	%f98, %r30;
	selp.f32 	%f107, %f98, %f105, %p1;
	setp.geu.f32 	%p12, %f3, 0f00000000;
	@%p12 bra 	$L__BB81_8;

	cvt.rzi.f32.f32 	%f99, %f1;
	setp.eq.f32 	%p13, %f99, %f1;
	@%p13 bra 	$L__BB81_8;

	mov.f32 	%f107, 0f7FFFFFFF;

$L__BB81_8:
	add.rn.f32 	%f102, %f4, %f5;
	mov.b32 	%r35, %f102;
	setp.lt.s32 	%p16, %r35, 2139095040;
	@%p16 bra 	$L__BB81_15;

	setp.gtu.f32 	%p17, %f4, 0f7F800000;
	setp.gtu.f32 	%p18, %f5, 0f7F800000;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB81_14;
	bra.uni 	$L__BB81_10;

$L__BB81_14:
	add.rn.f32 	%f107, %f3, %f1;
	bra.uni 	$L__BB81_15;

$L__BB81_10:
	setp.eq.f32 	%p20, %f5, 0f7F800000;
	@%p20 bra 	$L__BB81_13;
	bra.uni 	$L__BB81_11;

$L__BB81_13:
	setp.gt.f32 	%p23, %f4, 0f3F800000;
	selp.b32 	%r39, 2139095040, 0, %p23;
	xor.b32  	%r40, %r39, 2139095040;
	setp.lt.f32 	%p24, %f1, 0f00000000;
	selp.b32 	%r41, %r40, %r39, %p24;
	mov.b32 	%f103, %r41;
	setp.eq.f32 	%p25, %f3, 0fBF800000;
	selp.f32 	%f107, 0f3F800000, %f103, %p25;
	bra.uni 	$L__BB81_15;

$L__BB81_11:
	setp.neu.f32 	%p21, %f4, 0f7F800000;
	@%p21 bra 	$L__BB81_15;

	setp.ge.f32 	%p22, %f1, 0f00000000;
	selp.b32 	%r36, 2139095040, 0, %p22;
	or.b32  	%r37, %r36, -2147483648;
	selp.b32 	%r38, %r37, %r36, %p1;
	mov.b32 	%f107, %r38;

$L__BB81_15:
	ld.param.u64 	%rd11, [pow_vv_f32_param_0];
	mov.u32 	%r57, %ctaid.y;
	mov.u32 	%r56, %nctaid.y;
	mov.u32 	%r55, %ctaid.z;
	mov.u32 	%r54, %ctaid.x;
	mov.u32 	%r53, %nctaid.x;
	mad.lo.s32 	%r52, %r55, %r56, %r57;
	mov.u32 	%r51, %tid.z;
	mov.u32 	%r50, %ntid.z;
	mad.lo.s32 	%r49, %r52, %r53, %r54;
	mov.u32 	%r48, %tid.y;
	mov.u32 	%r47, %ntid.y;
	mad.lo.s32 	%r46, %r49, %r50, %r51;
	mov.u32 	%r45, %tid.x;
	mov.u32 	%r44, %ntid.x;
	mad.lo.s32 	%r43, %r46, %r47, %r48;
	mad.lo.s32 	%r42, %r43, %r44, %r45;
	mul.wide.s32 	%rd10, %r42, 4;
	cvta.to.global.u64 	%rd9, %rd11;
	add.s64 	%rd8, %rd9, %rd10;
	setp.eq.f32 	%p26, %f1, 0f00000000;
	setp.eq.f32 	%p27, %f3, 0f3F800000;
	or.pred  	%p28, %p27, %p26;
	selp.f32 	%f104, 0f3F800000, %f107, %p28;
	st.global.f32 	[%rd8], %f104;

$L__BB81_16:
	ret;

}
	// .globl	pow_vs_f64
.visible .entry pow_vs_f64(
	.param .u64 pow_vs_f64_param_0,
	.param .u64 pow_vs_f64_param_1,
	.param .u32 pow_vs_f64_param_2
)
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<48>;
	.reg .f64 	%fd<21>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd3, [pow_vs_f64_param_0];
	ld.param.u64 	%rd4, [pow_vs_f64_param_1];
	ld.param.u32 	%r8, [pow_vs_f64_param_2];
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %ctaid.z;
	mov.u32 	%r11, %nctaid.y;
	mov.u32 	%r12, %ctaid.y;
	mad.lo.s32 	%r13, %r10, %r11, %r12;
	mov.u32 	%r14, %nctaid.x;
	mad.lo.s32 	%r15, %r13, %r14, %r9;
	mov.u32 	%r16, %ntid.z;
	mov.u32 	%r17, %tid.z;
	mad.lo.s32 	%r18, %r15, %r16, %r17;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r21, %r18, %r19, %r20;
	mov.u32 	%r22, %ntid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r21, %r22, %r23;
	setp.ge.s32 	%p2, %r1, %r8;
	@%p2 bra 	$L__BB82_16;

	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd1, %rd5, %rd6;
	ld.global.f64 	%fd1, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	cvta.to.global.u64 	%rd7, %rd4;
	ld.global.f64 	%fd2, [%rd7];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd2;
	}
	bfe.u32 	%r24, %r3, 20, 11;
	add.s32 	%r25, %r24, -1012;
	mov.b64 	%rd8, %fd2;
	shl.b64 	%rd2, %rd8, %r25;
	setp.eq.s64 	%p1, %rd2, -9223372036854775808;
	setp.ne.s64 	%p3, %rd2, -9223372036854775808;
	abs.f64 	%fd3, %fd1;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd3;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd19, [retval0+0];
	} // callseq 1
	setp.gt.s32 	%p4, %r2, -1;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB82_3;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd19;
	}
	xor.b32  	%r27, %r26, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd19;
	}
	mov.b64 	%fd19, {%r28, %r27};

$L__BB82_3:
	setp.eq.f64 	%p6, %fd1, 0d0000000000000000;
	@%p6 bra 	$L__BB82_7;
	bra.uni 	$L__BB82_4;

$L__BB82_7:
	abs.f64 	%fd15, %fd2;
	setp.neu.f64 	%p10, %fd15, 0d3FE0000000000000;
	and.pred  	%p11, %p1, %p10;
	selp.u32 	%r47, 1, 0, %p11;
	selp.b32 	%r29, %r2, 0, %p11;
	mov.u32 	%r30, 0;
	or.b32  	%r31, %r29, 2146435072;
	setp.lt.s32 	%p12, %r3, 0;
	selp.b32 	%r32, %r31, %r29, %p12;
	mov.b64 	%fd19, {%r30, %r32};
	bra.uni 	$L__BB82_8;

$L__BB82_4:
	selp.u32 	%r47, 1, 0, %p1;
	@%p4 bra 	$L__BB82_8;

	cvt.rzi.f64.f64 	%fd13, %fd2;
	setp.eq.f64 	%p8, %fd13, %fd2;
	@%p8 bra 	$L__BB82_8;

	mov.f64 	%fd19, 0dFFF8000000000000;

$L__BB82_8:
	add.rn.f64 	%fd9, %fd1, %fd2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r33}, %fd9;
	}
	and.b32  	%r34, %r33, 2146435072;
	setp.ne.s32 	%p13, %r34, 2146435072;
	mov.f64 	%fd20, %fd19;
	@%p13 bra 	$L__BB82_15;

	setp.gtu.f64 	%p14, %fd3, 0d7FF0000000000000;
	mov.f64 	%fd20, %fd9;
	@%p14 bra 	$L__BB82_15;

	abs.f64 	%fd16, %fd2;
	setp.gtu.f64 	%p15, %fd16, 0d7FF0000000000000;
	mov.f64 	%fd20, %fd9;
	@%p15 bra 	$L__BB82_15;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r35, %temp}, %fd2;
	}
	and.b32  	%r7, %r3, 2147483647;
	setp.eq.s32 	%p16, %r7, 2146435072;
	setp.eq.s32 	%p17, %r35, 0;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB82_14;
	bra.uni 	$L__BB82_12;

$L__BB82_14:
	setp.gt.f64 	%p28, %fd3, 0d3FF0000000000000;
	selp.b32 	%r42, 2146435072, 0, %p28;
	mov.u32 	%r43, 0;
	xor.b32  	%r44, %r42, 2146435072;
	setp.lt.s32 	%p29, %r3, 0;
	selp.b32 	%r45, %r44, %r42, %p29;
	setp.eq.f64 	%p30, %fd1, 0dBFF0000000000000;
	selp.b32 	%r46, 1072693248, %r45, %p30;
	mov.b64 	%fd20, {%r43, %r46};
	bra.uni 	$L__BB82_15;

$L__BB82_12:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r36, %temp}, %fd1;
	}
	and.b32  	%r37, %r2, 2147483647;
	setp.ne.s32 	%p19, %r37, 2146435072;
	setp.ne.s32 	%p20, %r36, 0;
	or.pred  	%p21, %p19, %p20;
	mov.f64 	%fd20, %fd19;
	@%p21 bra 	$L__BB82_15;

	setp.lt.s32 	%p22, %r2, 0;
	mov.u32 	%r38, 0;
	setp.gt.s32 	%p23, %r3, -1;
	selp.b32 	%r39, 2146435072, 0, %p23;
	setp.ne.s32 	%p24, %r47, 0;
	and.pred  	%p25, %p22, %p24;
	setp.ne.s32 	%p26, %r7, 1071644672;
	and.pred  	%p27, %p26, %p25;
	or.b32  	%r40, %r39, -2147483648;
	selp.b32 	%r41, %r40, %r39, %p27;
	mov.b64 	%fd20, {%r38, %r41};

$L__BB82_15:
	setp.eq.f64 	%p31, %fd2, 0d0000000000000000;
	setp.eq.f64 	%p32, %fd1, 0d3FF0000000000000;
	or.pred  	%p33, %p32, %p31;
	selp.f64 	%fd17, 0d3FF0000000000000, %fd20, %p33;
	st.global.f64 	[%rd1], %fd17;

$L__BB82_16:
	ret;

}
	// .globl	pow_vs_f32
.visible .entry pow_vs_f32(
	.param .u64 pow_vs_f32_param_0,
	.param .u64 pow_vs_f32_param_1,
	.param .u32 pow_vs_f32_param_2
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<108>;
	.reg .b32 	%r<42>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [pow_vs_f32_param_0];
	ld.param.u64 	%rd3, [pow_vs_f32_param_1];
	ld.param.u32 	%r2, [pow_vs_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB83_16;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd1, %rd4, %rd5;
	cvta.to.global.u64 	%rd6, %rd3;
	ld.global.f32 	%f1, [%rd6];
	mul.rn.f32 	%f18, %f1, 0f3F000000;
	cvt.rzi.f32.f32 	%f19, %f18;
	add.rn.f32 	%f20, %f19, %f19;
	sub.rn.f32 	%f21, %f1, %f20;
	abs.f32 	%f2, %f21;
	ld.global.f32 	%f3, [%rd1];
	abs.f32 	%f4, %f3;
	setp.lt.f32 	%p3, %f4, 0f00800000;
	mul.rn.f32 	%f22, %f4, 0f4B800000;
	selp.f32 	%f23, %f22, %f4, %p3;
	selp.f32 	%f24, 0fC3170000, 0fC2FE0000, %p3;
	mov.b32 	%r18, %f23;
	and.b32  	%r19, %r18, 8388607;
	or.b32  	%r20, %r19, 1065353216;
	mov.b32 	%f25, %r20;
	shr.u32 	%r21, %r18, 23;
	cvt.rn.f32.u32 	%f26, %r21;
	add.rn.f32 	%f27, %f24, %f26;
	setp.gt.f32 	%p4, %f25, 0f3FB504F3;
	mul.rn.f32 	%f28, %f25, 0f3F000000;
	add.rn.f32 	%f29, %f27, 0f3F800000;
	selp.f32 	%f30, %f29, %f27, %p4;
	selp.f32 	%f31, %f28, %f25, %p4;
	add.rn.f32 	%f32, %f31, 0fBF800000;
	add.rn.f32 	%f33, %f31, 0f3F800000;
	rcp.approx.ftz.f32 	%f34, %f33;
	add.rn.f32 	%f35, %f32, %f32;
	mul.rn.f32 	%f36, %f35, %f34;
	mul.rn.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3C4CAF63;
	mov.f32 	%f39, 0f3B18F0FE;
	fma.rn.f32 	%f40, %f39, %f37, %f38;
	mov.f32 	%f41, 0f3DAAAABD;
	fma.rn.f32 	%f42, %f40, %f37, %f41;
	mul.rn.f32 	%f43, %f42, %f37;
	mul.rn.f32 	%f44, %f43, %f36;
	sub.rn.f32 	%f45, %f32, %f36;
	add.rn.f32 	%f46, %f45, %f45;
	neg.f32 	%f47, %f36;
	fma.rn.f32 	%f48, %f47, %f32, %f46;
	mul.rn.f32 	%f49, %f34, %f48;
	add.rn.f32 	%f50, %f44, %f36;
	sub.rn.f32 	%f51, %f36, %f50;
	add.rn.f32 	%f52, %f44, %f51;
	add.rn.f32 	%f53, %f49, %f52;
	add.rn.f32 	%f54, %f50, %f53;
	sub.rn.f32 	%f55, %f50, %f54;
	add.rn.f32 	%f56, %f53, %f55;
	mov.f32 	%f57, 0f3F317200;
	mul.rn.f32 	%f58, %f30, %f57;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f30, %f59;
	add.rn.f32 	%f61, %f58, %f54;
	sub.rn.f32 	%f62, %f58, %f61;
	add.rn.f32 	%f63, %f54, %f62;
	add.rn.f32 	%f64, %f56, %f63;
	add.rn.f32 	%f65, %f60, %f64;
	add.rn.f32 	%f66, %f61, %f65;
	sub.rn.f32 	%f67, %f61, %f66;
	add.rn.f32 	%f68, %f65, %f67;
	abs.f32 	%f5, %f1;
	setp.gt.f32 	%p5, %f5, 0f77F684DF;
	mul.rn.f32 	%f69, %f1, 0f39000000;
	selp.f32 	%f70, %f69, %f1, %p5;
	mul.rn.f32 	%f71, %f70, %f66;
	neg.f32 	%f72, %f71;
	fma.rn.f32 	%f73, %f70, %f66, %f72;
	fma.rn.f32 	%f74, %f70, %f68, %f73;
	mov.f32 	%f75, 0f00000000;
	fma.rn.f32 	%f76, %f75, %f66, %f74;
	add.rn.f32 	%f77, %f71, %f76;
	neg.f32 	%f78, %f77;
	add.rn.f32 	%f79, %f71, %f78;
	add.rn.f32 	%f80, %f79, %f76;
	mov.b32 	%r22, %f77;
	setp.eq.s32 	%p6, %r22, 1118925336;
	add.s32 	%r23, %r22, -1;
	mov.b32 	%f81, %r23;
	add.rn.f32 	%f82, %f80, 0f37000000;
	selp.f32 	%f6, %f82, %f80, %p6;
	selp.f32 	%f83, %f81, %f77, %p6;
	mov.f32 	%f84, 0f3FB8AA3B;
	mul.rn.f32 	%f85, %f83, %f84;
	cvt.rzi.f32.f32 	%f86, %f85;
	abs.f32 	%f87, %f86;
	setp.gt.f32 	%p7, %f87, 0f42FC0000;
	mov.b32 	%r24, %f86;
	and.b32  	%r25, %r24, -2147483648;
	or.b32  	%r26, %r25, 1123811328;
	mov.b32 	%f88, %r26;
	selp.f32 	%f89, %f88, %f86, %p7;
	mov.f32 	%f90, 0fBF317218;
	fma.rn.f32 	%f91, %f89, %f90, %f83;
	mov.f32 	%f92, 0f3102E308;
	fma.rn.f32 	%f93, %f89, %f92, %f91;
	mul.rn.f32 	%f94, %f93, 0f3FB8AA3B;
	add.rn.f32 	%f95, %f89, 0f4B40007F;
	mov.b32 	%r27, %f95;
	shl.b32 	%r28, %r27, 23;
	mov.b32 	%f96, %r28;
	ex2.approx.ftz.f32 	%f97, %f94;
	mul.rn.f32 	%f7, %f97, %f96;
	setp.eq.f32 	%p8, %f7, 0f7F800000;
	mov.f32 	%f105, 0f7F800000;
	@%p8 bra 	$L__BB83_3;

	fma.rn.f32 	%f105, %f7, %f6, %f7;

$L__BB83_3:
	setp.lt.f32 	%p9, %f3, 0f00000000;
	setp.eq.f32 	%p10, %f2, 0f3F800000;
	and.pred  	%p1, %p9, %p10;
	setp.eq.f32 	%p11, %f3, 0f00000000;
	@%p11 bra 	$L__BB83_7;
	bra.uni 	$L__BB83_4;

$L__BB83_7:
	add.rn.f32 	%f101, %f3, %f3;
	mov.b32 	%r31, %f101;
	selp.b32 	%r32, %r31, 0, %p10;
	or.b32  	%r33, %r32, 2139095040;
	setp.lt.f32 	%p15, %f1, 0f00000000;
	selp.b32 	%r34, %r33, %r32, %p15;
	mov.b32 	%f107, %r34;
	bra.uni 	$L__BB83_8;

$L__BB83_4:
	mov.b32 	%r29, %f105;
	xor.b32  	%r30, %r29, -2147483648;
	mov.b32 	%f98, %r30;
	selp.f32 	%f107, %f98, %f105, %p1;
	setp.geu.f32 	%p12, %f3, 0f00000000;
	@%p12 bra 	$L__BB83_8;

	cvt.rzi.f32.f32 	%f99, %f1;
	setp.eq.f32 	%p13, %f99, %f1;
	@%p13 bra 	$L__BB83_8;

	mov.f32 	%f107, 0f7FFFFFFF;

$L__BB83_8:
	add.rn.f32 	%f102, %f4, %f5;
	mov.b32 	%r35, %f102;
	setp.lt.s32 	%p16, %r35, 2139095040;
	@%p16 bra 	$L__BB83_15;

	setp.gtu.f32 	%p17, %f4, 0f7F800000;
	setp.gtu.f32 	%p18, %f5, 0f7F800000;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB83_14;
	bra.uni 	$L__BB83_10;

$L__BB83_14:
	add.rn.f32 	%f107, %f3, %f1;
	bra.uni 	$L__BB83_15;

$L__BB83_10:
	setp.eq.f32 	%p20, %f5, 0f7F800000;
	@%p20 bra 	$L__BB83_13;
	bra.uni 	$L__BB83_11;

$L__BB83_13:
	setp.gt.f32 	%p23, %f4, 0f3F800000;
	selp.b32 	%r39, 2139095040, 0, %p23;
	xor.b32  	%r40, %r39, 2139095040;
	setp.lt.f32 	%p24, %f1, 0f00000000;
	selp.b32 	%r41, %r40, %r39, %p24;
	mov.b32 	%f103, %r41;
	setp.eq.f32 	%p25, %f3, 0fBF800000;
	selp.f32 	%f107, 0f3F800000, %f103, %p25;
	bra.uni 	$L__BB83_15;

$L__BB83_11:
	setp.neu.f32 	%p21, %f4, 0f7F800000;
	@%p21 bra 	$L__BB83_15;

	setp.ge.f32 	%p22, %f1, 0f00000000;
	selp.b32 	%r36, 2139095040, 0, %p22;
	or.b32  	%r37, %r36, -2147483648;
	selp.b32 	%r38, %r37, %r36, %p1;
	mov.b32 	%f107, %r38;

$L__BB83_15:
	setp.eq.f32 	%p26, %f1, 0f00000000;
	setp.eq.f32 	%p27, %f3, 0f3F800000;
	or.pred  	%p28, %p27, %p26;
	selp.f32 	%f104, 0f3F800000, %f107, %p28;
	st.global.f32 	[%rd1], %f104;

$L__BB83_16:
	ret;

}
	// .globl	pow_sv_f64
.visible .entry pow_sv_f64(
	.param .u64 pow_sv_f64_param_0,
	.param .u64 pow_sv_f64_param_1,
	.param .u32 pow_sv_f64_param_2
)
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<48>;
	.reg .f64 	%fd<21>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd3, [pow_sv_f64_param_0];
	ld.param.u64 	%rd4, [pow_sv_f64_param_1];
	ld.param.u32 	%r8, [pow_sv_f64_param_2];
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %ctaid.z;
	mov.u32 	%r11, %nctaid.y;
	mov.u32 	%r12, %ctaid.y;
	mad.lo.s32 	%r13, %r10, %r11, %r12;
	mov.u32 	%r14, %nctaid.x;
	mad.lo.s32 	%r15, %r13, %r14, %r9;
	mov.u32 	%r16, %ntid.z;
	mov.u32 	%r17, %tid.z;
	mad.lo.s32 	%r18, %r15, %r16, %r17;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r21, %r18, %r19, %r20;
	mov.u32 	%r22, %ntid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r21, %r22, %r23;
	setp.ge.s32 	%p2, %r1, %r8;
	@%p2 bra 	$L__BB84_16;

	cvta.to.global.u64 	%rd5, %rd4;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd1, %rd5, %rd6;
	cvta.to.global.u64 	%rd7, %rd3;
	ld.global.f64 	%fd1, [%rd7];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	ld.global.f64 	%fd2, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd2;
	}
	bfe.u32 	%r24, %r3, 20, 11;
	add.s32 	%r25, %r24, -1012;
	mov.b64 	%rd8, %fd2;
	shl.b64 	%rd2, %rd8, %r25;
	setp.eq.s64 	%p1, %rd2, -9223372036854775808;
	setp.ne.s64 	%p3, %rd2, -9223372036854775808;
	abs.f64 	%fd3, %fd1;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd3;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd19, [retval0+0];
	} // callseq 2
	setp.gt.s32 	%p4, %r2, -1;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB84_3;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd19;
	}
	xor.b32  	%r27, %r26, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd19;
	}
	mov.b64 	%fd19, {%r28, %r27};

$L__BB84_3:
	setp.eq.f64 	%p6, %fd1, 0d0000000000000000;
	@%p6 bra 	$L__BB84_7;
	bra.uni 	$L__BB84_4;

$L__BB84_7:
	abs.f64 	%fd15, %fd2;
	setp.neu.f64 	%p10, %fd15, 0d3FE0000000000000;
	and.pred  	%p11, %p1, %p10;
	selp.u32 	%r47, 1, 0, %p11;
	selp.b32 	%r29, %r2, 0, %p11;
	mov.u32 	%r30, 0;
	or.b32  	%r31, %r29, 2146435072;
	setp.lt.s32 	%p12, %r3, 0;
	selp.b32 	%r32, %r31, %r29, %p12;
	mov.b64 	%fd19, {%r30, %r32};
	bra.uni 	$L__BB84_8;

$L__BB84_4:
	selp.u32 	%r47, 1, 0, %p1;
	@%p4 bra 	$L__BB84_8;

	cvt.rzi.f64.f64 	%fd13, %fd2;
	setp.eq.f64 	%p8, %fd13, %fd2;
	@%p8 bra 	$L__BB84_8;

	mov.f64 	%fd19, 0dFFF8000000000000;

$L__BB84_8:
	add.rn.f64 	%fd9, %fd1, %fd2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r33}, %fd9;
	}
	and.b32  	%r34, %r33, 2146435072;
	setp.ne.s32 	%p13, %r34, 2146435072;
	mov.f64 	%fd20, %fd19;
	@%p13 bra 	$L__BB84_15;

	setp.gtu.f64 	%p14, %fd3, 0d7FF0000000000000;
	mov.f64 	%fd20, %fd9;
	@%p14 bra 	$L__BB84_15;

	abs.f64 	%fd16, %fd2;
	setp.gtu.f64 	%p15, %fd16, 0d7FF0000000000000;
	mov.f64 	%fd20, %fd9;
	@%p15 bra 	$L__BB84_15;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r35, %temp}, %fd2;
	}
	and.b32  	%r7, %r3, 2147483647;
	setp.eq.s32 	%p16, %r7, 2146435072;
	setp.eq.s32 	%p17, %r35, 0;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB84_14;
	bra.uni 	$L__BB84_12;

$L__BB84_14:
	setp.gt.f64 	%p28, %fd3, 0d3FF0000000000000;
	selp.b32 	%r42, 2146435072, 0, %p28;
	mov.u32 	%r43, 0;
	xor.b32  	%r44, %r42, 2146435072;
	setp.lt.s32 	%p29, %r3, 0;
	selp.b32 	%r45, %r44, %r42, %p29;
	setp.eq.f64 	%p30, %fd1, 0dBFF0000000000000;
	selp.b32 	%r46, 1072693248, %r45, %p30;
	mov.b64 	%fd20, {%r43, %r46};
	bra.uni 	$L__BB84_15;

$L__BB84_12:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r36, %temp}, %fd1;
	}
	and.b32  	%r37, %r2, 2147483647;
	setp.ne.s32 	%p19, %r37, 2146435072;
	setp.ne.s32 	%p20, %r36, 0;
	or.pred  	%p21, %p19, %p20;
	mov.f64 	%fd20, %fd19;
	@%p21 bra 	$L__BB84_15;

	setp.lt.s32 	%p22, %r2, 0;
	mov.u32 	%r38, 0;
	setp.gt.s32 	%p23, %r3, -1;
	selp.b32 	%r39, 2146435072, 0, %p23;
	setp.ne.s32 	%p24, %r47, 0;
	and.pred  	%p25, %p22, %p24;
	setp.ne.s32 	%p26, %r7, 1071644672;
	and.pred  	%p27, %p26, %p25;
	or.b32  	%r40, %r39, -2147483648;
	selp.b32 	%r41, %r40, %r39, %p27;
	mov.b64 	%fd20, {%r38, %r41};

$L__BB84_15:
	setp.eq.f64 	%p31, %fd2, 0d0000000000000000;
	setp.eq.f64 	%p32, %fd1, 0d3FF0000000000000;
	or.pred  	%p33, %p32, %p31;
	selp.f64 	%fd17, 0d3FF0000000000000, %fd20, %p33;
	st.global.f64 	[%rd1], %fd17;

$L__BB84_16:
	ret;

}
	// .globl	pow_sv_f32
.visible .entry pow_sv_f32(
	.param .u64 pow_sv_f32_param_0,
	.param .u64 pow_sv_f32_param_1,
	.param .u32 pow_sv_f32_param_2
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<108>;
	.reg .b32 	%r<42>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [pow_sv_f32_param_0];
	ld.param.u64 	%rd3, [pow_sv_f32_param_1];
	ld.param.u32 	%r2, [pow_sv_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB85_16;

	cvta.to.global.u64 	%rd4, %rd3;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd1, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd1];
	mul.rn.f32 	%f18, %f1, 0f3F000000;
	cvt.rzi.f32.f32 	%f19, %f18;
	add.rn.f32 	%f20, %f19, %f19;
	sub.rn.f32 	%f21, %f1, %f20;
	abs.f32 	%f2, %f21;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f3, [%rd6];
	abs.f32 	%f4, %f3;
	setp.lt.f32 	%p3, %f4, 0f00800000;
	mul.rn.f32 	%f22, %f4, 0f4B800000;
	selp.f32 	%f23, %f22, %f4, %p3;
	selp.f32 	%f24, 0fC3170000, 0fC2FE0000, %p3;
	mov.b32 	%r18, %f23;
	and.b32  	%r19, %r18, 8388607;
	or.b32  	%r20, %r19, 1065353216;
	mov.b32 	%f25, %r20;
	shr.u32 	%r21, %r18, 23;
	cvt.rn.f32.u32 	%f26, %r21;
	add.rn.f32 	%f27, %f24, %f26;
	setp.gt.f32 	%p4, %f25, 0f3FB504F3;
	mul.rn.f32 	%f28, %f25, 0f3F000000;
	add.rn.f32 	%f29, %f27, 0f3F800000;
	selp.f32 	%f30, %f29, %f27, %p4;
	selp.f32 	%f31, %f28, %f25, %p4;
	add.rn.f32 	%f32, %f31, 0fBF800000;
	add.rn.f32 	%f33, %f31, 0f3F800000;
	rcp.approx.ftz.f32 	%f34, %f33;
	add.rn.f32 	%f35, %f32, %f32;
	mul.rn.f32 	%f36, %f35, %f34;
	mul.rn.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3C4CAF63;
	mov.f32 	%f39, 0f3B18F0FE;
	fma.rn.f32 	%f40, %f39, %f37, %f38;
	mov.f32 	%f41, 0f3DAAAABD;
	fma.rn.f32 	%f42, %f40, %f37, %f41;
	mul.rn.f32 	%f43, %f42, %f37;
	mul.rn.f32 	%f44, %f43, %f36;
	sub.rn.f32 	%f45, %f32, %f36;
	add.rn.f32 	%f46, %f45, %f45;
	neg.f32 	%f47, %f36;
	fma.rn.f32 	%f48, %f47, %f32, %f46;
	mul.rn.f32 	%f49, %f34, %f48;
	add.rn.f32 	%f50, %f44, %f36;
	sub.rn.f32 	%f51, %f36, %f50;
	add.rn.f32 	%f52, %f44, %f51;
	add.rn.f32 	%f53, %f49, %f52;
	add.rn.f32 	%f54, %f50, %f53;
	sub.rn.f32 	%f55, %f50, %f54;
	add.rn.f32 	%f56, %f53, %f55;
	mov.f32 	%f57, 0f3F317200;
	mul.rn.f32 	%f58, %f30, %f57;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f30, %f59;
	add.rn.f32 	%f61, %f58, %f54;
	sub.rn.f32 	%f62, %f58, %f61;
	add.rn.f32 	%f63, %f54, %f62;
	add.rn.f32 	%f64, %f56, %f63;
	add.rn.f32 	%f65, %f60, %f64;
	add.rn.f32 	%f66, %f61, %f65;
	sub.rn.f32 	%f67, %f61, %f66;
	add.rn.f32 	%f68, %f65, %f67;
	abs.f32 	%f5, %f1;
	setp.gt.f32 	%p5, %f5, 0f77F684DF;
	mul.rn.f32 	%f69, %f1, 0f39000000;
	selp.f32 	%f70, %f69, %f1, %p5;
	mul.rn.f32 	%f71, %f70, %f66;
	neg.f32 	%f72, %f71;
	fma.rn.f32 	%f73, %f70, %f66, %f72;
	fma.rn.f32 	%f74, %f70, %f68, %f73;
	mov.f32 	%f75, 0f00000000;
	fma.rn.f32 	%f76, %f75, %f66, %f74;
	add.rn.f32 	%f77, %f71, %f76;
	neg.f32 	%f78, %f77;
	add.rn.f32 	%f79, %f71, %f78;
	add.rn.f32 	%f80, %f79, %f76;
	mov.b32 	%r22, %f77;
	setp.eq.s32 	%p6, %r22, 1118925336;
	add.s32 	%r23, %r22, -1;
	mov.b32 	%f81, %r23;
	add.rn.f32 	%f82, %f80, 0f37000000;
	selp.f32 	%f6, %f82, %f80, %p6;
	selp.f32 	%f83, %f81, %f77, %p6;
	mov.f32 	%f84, 0f3FB8AA3B;
	mul.rn.f32 	%f85, %f83, %f84;
	cvt.rzi.f32.f32 	%f86, %f85;
	abs.f32 	%f87, %f86;
	setp.gt.f32 	%p7, %f87, 0f42FC0000;
	mov.b32 	%r24, %f86;
	and.b32  	%r25, %r24, -2147483648;
	or.b32  	%r26, %r25, 1123811328;
	mov.b32 	%f88, %r26;
	selp.f32 	%f89, %f88, %f86, %p7;
	mov.f32 	%f90, 0fBF317218;
	fma.rn.f32 	%f91, %f89, %f90, %f83;
	mov.f32 	%f92, 0f3102E308;
	fma.rn.f32 	%f93, %f89, %f92, %f91;
	mul.rn.f32 	%f94, %f93, 0f3FB8AA3B;
	add.rn.f32 	%f95, %f89, 0f4B40007F;
	mov.b32 	%r27, %f95;
	shl.b32 	%r28, %r27, 23;
	mov.b32 	%f96, %r28;
	ex2.approx.ftz.f32 	%f97, %f94;
	mul.rn.f32 	%f7, %f97, %f96;
	setp.eq.f32 	%p8, %f7, 0f7F800000;
	mov.f32 	%f105, 0f7F800000;
	@%p8 bra 	$L__BB85_3;

	fma.rn.f32 	%f105, %f7, %f6, %f7;

$L__BB85_3:
	setp.lt.f32 	%p9, %f3, 0f00000000;
	setp.eq.f32 	%p10, %f2, 0f3F800000;
	and.pred  	%p1, %p9, %p10;
	setp.eq.f32 	%p11, %f3, 0f00000000;
	@%p11 bra 	$L__BB85_7;
	bra.uni 	$L__BB85_4;

$L__BB85_7:
	add.rn.f32 	%f101, %f3, %f3;
	mov.b32 	%r31, %f101;
	selp.b32 	%r32, %r31, 0, %p10;
	or.b32  	%r33, %r32, 2139095040;
	setp.lt.f32 	%p15, %f1, 0f00000000;
	selp.b32 	%r34, %r33, %r32, %p15;
	mov.b32 	%f107, %r34;
	bra.uni 	$L__BB85_8;

$L__BB85_4:
	mov.b32 	%r29, %f105;
	xor.b32  	%r30, %r29, -2147483648;
	mov.b32 	%f98, %r30;
	selp.f32 	%f107, %f98, %f105, %p1;
	setp.geu.f32 	%p12, %f3, 0f00000000;
	@%p12 bra 	$L__BB85_8;

	cvt.rzi.f32.f32 	%f99, %f1;
	setp.eq.f32 	%p13, %f99, %f1;
	@%p13 bra 	$L__BB85_8;

	mov.f32 	%f107, 0f7FFFFFFF;

$L__BB85_8:
	add.rn.f32 	%f102, %f4, %f5;
	mov.b32 	%r35, %f102;
	setp.lt.s32 	%p16, %r35, 2139095040;
	@%p16 bra 	$L__BB85_15;

	setp.gtu.f32 	%p17, %f4, 0f7F800000;
	setp.gtu.f32 	%p18, %f5, 0f7F800000;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB85_14;
	bra.uni 	$L__BB85_10;

$L__BB85_14:
	add.rn.f32 	%f107, %f3, %f1;
	bra.uni 	$L__BB85_15;

$L__BB85_10:
	setp.eq.f32 	%p20, %f5, 0f7F800000;
	@%p20 bra 	$L__BB85_13;
	bra.uni 	$L__BB85_11;

$L__BB85_13:
	setp.gt.f32 	%p23, %f4, 0f3F800000;
	selp.b32 	%r39, 2139095040, 0, %p23;
	xor.b32  	%r40, %r39, 2139095040;
	setp.lt.f32 	%p24, %f1, 0f00000000;
	selp.b32 	%r41, %r40, %r39, %p24;
	mov.b32 	%f103, %r41;
	setp.eq.f32 	%p25, %f3, 0fBF800000;
	selp.f32 	%f107, 0f3F800000, %f103, %p25;
	bra.uni 	$L__BB85_15;

$L__BB85_11:
	setp.neu.f32 	%p21, %f4, 0f7F800000;
	@%p21 bra 	$L__BB85_15;

	setp.ge.f32 	%p22, %f1, 0f00000000;
	selp.b32 	%r36, 2139095040, 0, %p22;
	or.b32  	%r37, %r36, -2147483648;
	selp.b32 	%r38, %r37, %r36, %p1;
	mov.b32 	%f107, %r38;

$L__BB85_15:
	setp.eq.f32 	%p26, %f1, 0f00000000;
	setp.eq.f32 	%p27, %f3, 0f3F800000;
	or.pred  	%p28, %p27, %p26;
	selp.f32 	%f104, 0f3F800000, %f107, %p28;
	st.global.f32 	[%rd1], %f104;

$L__BB85_16:
	ret;

}
	// .globl	pow_ss_f64
.visible .entry pow_ss_f64(
	.param .u64 pow_ss_f64_param_0,
	.param .u64 pow_ss_f64_param_1,
	.param .u32 pow_ss_f64_param_2
)
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<48>;
	.reg .f64 	%fd<21>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd4, [pow_ss_f64_param_0];
	ld.param.u64 	%rd3, [pow_ss_f64_param_1];
	ld.param.u32 	%r7, [pow_ss_f64_param_2];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r8, %ctaid.z;
	mov.u32 	%r9, %nctaid.y;
	mov.u32 	%r10, %ctaid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %nctaid.x;
	mov.u32 	%r13, %ctaid.x;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.z;
	mov.u32 	%r16, %tid.z;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	mov.u32 	%r18, %ntid.y;
	mov.u32 	%r19, %tid.y;
	mad.lo.s32 	%r20, %r17, %r18, %r19;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r23, %r20, %r21, %r22;
	setp.ge.s32 	%p2, %r23, %r7;
	@%p2 bra 	$L__BB86_16;

	cvta.to.global.u64 	%rd5, %rd3;
	ld.global.f64 	%fd1, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd1;
	}
	ld.global.f64 	%fd2, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd2;
	}
	bfe.u32 	%r24, %r2, 20, 11;
	add.s32 	%r25, %r24, -1012;
	mov.b64 	%rd6, %fd2;
	shl.b64 	%rd2, %rd6, %r25;
	setp.eq.s64 	%p1, %rd2, -9223372036854775808;
	setp.ne.s64 	%p3, %rd2, -9223372036854775808;
	abs.f64 	%fd3, %fd1;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd3;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd19, [retval0+0];
	} // callseq 3
	setp.gt.s32 	%p4, %r1, -1;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB86_3;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd19;
	}
	xor.b32  	%r27, %r26, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd19;
	}
	mov.b64 	%fd19, {%r28, %r27};

$L__BB86_3:
	setp.eq.f64 	%p6, %fd1, 0d0000000000000000;
	@%p6 bra 	$L__BB86_7;
	bra.uni 	$L__BB86_4;

$L__BB86_7:
	abs.f64 	%fd15, %fd2;
	setp.neu.f64 	%p10, %fd15, 0d3FE0000000000000;
	and.pred  	%p11, %p1, %p10;
	selp.u32 	%r47, 1, 0, %p11;
	selp.b32 	%r29, %r1, 0, %p11;
	mov.u32 	%r30, 0;
	or.b32  	%r31, %r29, 2146435072;
	setp.lt.s32 	%p12, %r2, 0;
	selp.b32 	%r32, %r31, %r29, %p12;
	mov.b64 	%fd19, {%r30, %r32};
	bra.uni 	$L__BB86_8;

$L__BB86_4:
	selp.u32 	%r47, 1, 0, %p1;
	@%p4 bra 	$L__BB86_8;

	cvt.rzi.f64.f64 	%fd13, %fd2;
	setp.eq.f64 	%p8, %fd13, %fd2;
	@%p8 bra 	$L__BB86_8;

	mov.f64 	%fd19, 0dFFF8000000000000;

$L__BB86_8:
	add.rn.f64 	%fd9, %fd1, %fd2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r33}, %fd9;
	}
	and.b32  	%r34, %r33, 2146435072;
	setp.ne.s32 	%p13, %r34, 2146435072;
	mov.f64 	%fd20, %fd19;
	@%p13 bra 	$L__BB86_15;

	setp.gtu.f64 	%p14, %fd3, 0d7FF0000000000000;
	mov.f64 	%fd20, %fd9;
	@%p14 bra 	$L__BB86_15;

	abs.f64 	%fd16, %fd2;
	setp.gtu.f64 	%p15, %fd16, 0d7FF0000000000000;
	mov.f64 	%fd20, %fd9;
	@%p15 bra 	$L__BB86_15;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r35, %temp}, %fd2;
	}
	and.b32  	%r6, %r2, 2147483647;
	setp.eq.s32 	%p16, %r6, 2146435072;
	setp.eq.s32 	%p17, %r35, 0;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB86_14;
	bra.uni 	$L__BB86_12;

$L__BB86_14:
	setp.gt.f64 	%p28, %fd3, 0d3FF0000000000000;
	selp.b32 	%r42, 2146435072, 0, %p28;
	mov.u32 	%r43, 0;
	xor.b32  	%r44, %r42, 2146435072;
	setp.lt.s32 	%p29, %r2, 0;
	selp.b32 	%r45, %r44, %r42, %p29;
	setp.eq.f64 	%p30, %fd1, 0dBFF0000000000000;
	selp.b32 	%r46, 1072693248, %r45, %p30;
	mov.b64 	%fd20, {%r43, %r46};
	bra.uni 	$L__BB86_15;

$L__BB86_12:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r36, %temp}, %fd1;
	}
	and.b32  	%r37, %r1, 2147483647;
	setp.ne.s32 	%p19, %r37, 2146435072;
	setp.ne.s32 	%p20, %r36, 0;
	or.pred  	%p21, %p19, %p20;
	mov.f64 	%fd20, %fd19;
	@%p21 bra 	$L__BB86_15;

	setp.lt.s32 	%p22, %r1, 0;
	mov.u32 	%r38, 0;
	setp.gt.s32 	%p23, %r2, -1;
	selp.b32 	%r39, 2146435072, 0, %p23;
	setp.ne.s32 	%p24, %r47, 0;
	and.pred  	%p25, %p22, %p24;
	setp.ne.s32 	%p26, %r6, 1071644672;
	and.pred  	%p27, %p26, %p25;
	or.b32  	%r40, %r39, -2147483648;
	selp.b32 	%r41, %r40, %r39, %p27;
	mov.b64 	%fd20, {%r38, %r41};

$L__BB86_15:
	setp.eq.f64 	%p31, %fd2, 0d0000000000000000;
	setp.eq.f64 	%p32, %fd1, 0d3FF0000000000000;
	or.pred  	%p33, %p32, %p31;
	selp.f64 	%fd17, 0d3FF0000000000000, %fd20, %p33;
	st.global.f64 	[%rd1], %fd17;

$L__BB86_16:
	ret;

}
	// .globl	pow_ss_f32
.visible .entry pow_ss_f32(
	.param .u64 pow_ss_f32_param_0,
	.param .u64 pow_ss_f32_param_1,
	.param .u32 pow_ss_f32_param_2
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<108>;
	.reg .b32 	%r<42>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd3, [pow_ss_f32_param_0];
	ld.param.u64 	%rd2, [pow_ss_f32_param_1];
	ld.param.u32 	%r1, [pow_ss_f32_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r2, %ctaid.z;
	mov.u32 	%r3, %nctaid.y;
	mov.u32 	%r4, %ctaid.y;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ntid.z;
	mov.u32 	%r10, %tid.z;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.ge.s32 	%p2, %r17, %r1;
	@%p2 bra 	$L__BB87_16;

	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	mul.rn.f32 	%f18, %f1, 0f3F000000;
	cvt.rzi.f32.f32 	%f19, %f18;
	add.rn.f32 	%f20, %f19, %f19;
	sub.rn.f32 	%f21, %f1, %f20;
	abs.f32 	%f2, %f21;
	ld.global.f32 	%f3, [%rd1];
	abs.f32 	%f4, %f3;
	setp.lt.f32 	%p3, %f4, 0f00800000;
	mul.rn.f32 	%f22, %f4, 0f4B800000;
	selp.f32 	%f23, %f22, %f4, %p3;
	selp.f32 	%f24, 0fC3170000, 0fC2FE0000, %p3;
	mov.b32 	%r18, %f23;
	and.b32  	%r19, %r18, 8388607;
	or.b32  	%r20, %r19, 1065353216;
	mov.b32 	%f25, %r20;
	shr.u32 	%r21, %r18, 23;
	cvt.rn.f32.u32 	%f26, %r21;
	add.rn.f32 	%f27, %f24, %f26;
	setp.gt.f32 	%p4, %f25, 0f3FB504F3;
	mul.rn.f32 	%f28, %f25, 0f3F000000;
	add.rn.f32 	%f29, %f27, 0f3F800000;
	selp.f32 	%f30, %f29, %f27, %p4;
	selp.f32 	%f31, %f28, %f25, %p4;
	add.rn.f32 	%f32, %f31, 0fBF800000;
	add.rn.f32 	%f33, %f31, 0f3F800000;
	rcp.approx.ftz.f32 	%f34, %f33;
	add.rn.f32 	%f35, %f32, %f32;
	mul.rn.f32 	%f36, %f35, %f34;
	mul.rn.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3C4CAF63;
	mov.f32 	%f39, 0f3B18F0FE;
	fma.rn.f32 	%f40, %f39, %f37, %f38;
	mov.f32 	%f41, 0f3DAAAABD;
	fma.rn.f32 	%f42, %f40, %f37, %f41;
	mul.rn.f32 	%f43, %f42, %f37;
	mul.rn.f32 	%f44, %f43, %f36;
	sub.rn.f32 	%f45, %f32, %f36;
	add.rn.f32 	%f46, %f45, %f45;
	neg.f32 	%f47, %f36;
	fma.rn.f32 	%f48, %f47, %f32, %f46;
	mul.rn.f32 	%f49, %f34, %f48;
	add.rn.f32 	%f50, %f44, %f36;
	sub.rn.f32 	%f51, %f36, %f50;
	add.rn.f32 	%f52, %f44, %f51;
	add.rn.f32 	%f53, %f49, %f52;
	add.rn.f32 	%f54, %f50, %f53;
	sub.rn.f32 	%f55, %f50, %f54;
	add.rn.f32 	%f56, %f53, %f55;
	mov.f32 	%f57, 0f3F317200;
	mul.rn.f32 	%f58, %f30, %f57;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f30, %f59;
	add.rn.f32 	%f61, %f58, %f54;
	sub.rn.f32 	%f62, %f58, %f61;
	add.rn.f32 	%f63, %f54, %f62;
	add.rn.f32 	%f64, %f56, %f63;
	add.rn.f32 	%f65, %f60, %f64;
	add.rn.f32 	%f66, %f61, %f65;
	sub.rn.f32 	%f67, %f61, %f66;
	add.rn.f32 	%f68, %f65, %f67;
	abs.f32 	%f5, %f1;
	setp.gt.f32 	%p5, %f5, 0f77F684DF;
	mul.rn.f32 	%f69, %f1, 0f39000000;
	selp.f32 	%f70, %f69, %f1, %p5;
	mul.rn.f32 	%f71, %f70, %f66;
	neg.f32 	%f72, %f71;
	fma.rn.f32 	%f73, %f70, %f66, %f72;
	fma.rn.f32 	%f74, %f70, %f68, %f73;
	mov.f32 	%f75, 0f00000000;
	fma.rn.f32 	%f76, %f75, %f66, %f74;
	add.rn.f32 	%f77, %f71, %f76;
	neg.f32 	%f78, %f77;
	add.rn.f32 	%f79, %f71, %f78;
	add.rn.f32 	%f80, %f79, %f76;
	mov.b32 	%r22, %f77;
	setp.eq.s32 	%p6, %r22, 1118925336;
	add.s32 	%r23, %r22, -1;
	mov.b32 	%f81, %r23;
	add.rn.f32 	%f82, %f80, 0f37000000;
	selp.f32 	%f6, %f82, %f80, %p6;
	selp.f32 	%f83, %f81, %f77, %p6;
	mov.f32 	%f84, 0f3FB8AA3B;
	mul.rn.f32 	%f85, %f83, %f84;
	cvt.rzi.f32.f32 	%f86, %f85;
	abs.f32 	%f87, %f86;
	setp.gt.f32 	%p7, %f87, 0f42FC0000;
	mov.b32 	%r24, %f86;
	and.b32  	%r25, %r24, -2147483648;
	or.b32  	%r26, %r25, 1123811328;
	mov.b32 	%f88, %r26;
	selp.f32 	%f89, %f88, %f86, %p7;
	mov.f32 	%f90, 0fBF317218;
	fma.rn.f32 	%f91, %f89, %f90, %f83;
	mov.f32 	%f92, 0f3102E308;
	fma.rn.f32 	%f93, %f89, %f92, %f91;
	mul.rn.f32 	%f94, %f93, 0f3FB8AA3B;
	add.rn.f32 	%f95, %f89, 0f4B40007F;
	mov.b32 	%r27, %f95;
	shl.b32 	%r28, %r27, 23;
	mov.b32 	%f96, %r28;
	ex2.approx.ftz.f32 	%f97, %f94;
	mul.rn.f32 	%f7, %f97, %f96;
	setp.eq.f32 	%p8, %f7, 0f7F800000;
	mov.f32 	%f105, 0f7F800000;
	@%p8 bra 	$L__BB87_3;

	fma.rn.f32 	%f105, %f7, %f6, %f7;

$L__BB87_3:
	setp.lt.f32 	%p9, %f3, 0f00000000;
	setp.eq.f32 	%p10, %f2, 0f3F800000;
	and.pred  	%p1, %p9, %p10;
	setp.eq.f32 	%p11, %f3, 0f00000000;
	@%p11 bra 	$L__BB87_7;
	bra.uni 	$L__BB87_4;

$L__BB87_7:
	add.rn.f32 	%f101, %f3, %f3;
	mov.b32 	%r31, %f101;
	selp.b32 	%r32, %r31, 0, %p10;
	or.b32  	%r33, %r32, 2139095040;
	setp.lt.f32 	%p15, %f1, 0f00000000;
	selp.b32 	%r34, %r33, %r32, %p15;
	mov.b32 	%f107, %r34;
	bra.uni 	$L__BB87_8;

$L__BB87_4:
	mov.b32 	%r29, %f105;
	xor.b32  	%r30, %r29, -2147483648;
	mov.b32 	%f98, %r30;
	selp.f32 	%f107, %f98, %f105, %p1;
	setp.geu.f32 	%p12, %f3, 0f00000000;
	@%p12 bra 	$L__BB87_8;

	cvt.rzi.f32.f32 	%f99, %f1;
	setp.eq.f32 	%p13, %f99, %f1;
	@%p13 bra 	$L__BB87_8;

	mov.f32 	%f107, 0f7FFFFFFF;

$L__BB87_8:
	add.rn.f32 	%f102, %f4, %f5;
	mov.b32 	%r35, %f102;
	setp.lt.s32 	%p16, %r35, 2139095040;
	@%p16 bra 	$L__BB87_15;

	setp.gtu.f32 	%p17, %f4, 0f7F800000;
	setp.gtu.f32 	%p18, %f5, 0f7F800000;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB87_14;
	bra.uni 	$L__BB87_10;

$L__BB87_14:
	add.rn.f32 	%f107, %f3, %f1;
	bra.uni 	$L__BB87_15;

$L__BB87_10:
	setp.eq.f32 	%p20, %f5, 0f7F800000;
	@%p20 bra 	$L__BB87_13;
	bra.uni 	$L__BB87_11;

$L__BB87_13:
	setp.gt.f32 	%p23, %f4, 0f3F800000;
	selp.b32 	%r39, 2139095040, 0, %p23;
	xor.b32  	%r40, %r39, 2139095040;
	setp.lt.f32 	%p24, %f1, 0f00000000;
	selp.b32 	%r41, %r40, %r39, %p24;
	mov.b32 	%f103, %r41;
	setp.eq.f32 	%p25, %f3, 0fBF800000;
	selp.f32 	%f107, 0f3F800000, %f103, %p25;
	bra.uni 	$L__BB87_15;

$L__BB87_11:
	setp.neu.f32 	%p21, %f4, 0f7F800000;
	@%p21 bra 	$L__BB87_15;

	setp.ge.f32 	%p22, %f1, 0f00000000;
	selp.b32 	%r36, 2139095040, 0, %p22;
	or.b32  	%r37, %r36, -2147483648;
	selp.b32 	%r38, %r37, %r36, %p1;
	mov.b32 	%f107, %r38;

$L__BB87_15:
	setp.eq.f32 	%p26, %f1, 0f00000000;
	setp.eq.f32 	%p27, %f3, 0f3F800000;
	or.pred  	%p28, %p27, %p26;
	selp.f32 	%f104, 0f3F800000, %f107, %p28;
	st.global.f32 	[%rd1], %f104;

$L__BB87_16:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<139>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB88_2;

	mul.rn.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB88_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd136, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB88_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd136;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd136;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd136, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB88_4:
	add.rn.f64 	%fd15, %fd136, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd17, %fd15;
	neg.f64 	%fd18, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd17;
	add.rn.f64 	%fd22, %fd136, 0dBFF0000000000000;
	mul.rn.f64 	%fd23, %fd22, %fd21;
	add.rn.f64 	%fd24, %fd23, %fd23;
	mul.rn.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	mul.rn.f64 	%fd39, %fd25, %fd38;
	sub.rn.f64 	%fd40, %fd22, %fd24;
	add.rn.f64 	%fd41, %fd40, %fd40;
	neg.f64 	%fd42, %fd24;
	fma.rn.f64 	%fd43, %fd42, %fd22, %fd41;
	mul.rn.f64 	%fd44, %fd21, %fd43;
	add.rn.f64 	%fd45, %fd39, 0d3FB5555555555555;
	mov.f64 	%fd46, 0d3FB5555555555555;
	sub.rn.f64 	%fd47, %fd46, %fd45;
	add.rn.f64 	%fd48, %fd39, %fd47;
	add.rn.f64 	%fd49, %fd48, 0d0000000000000000;
	add.rn.f64 	%fd50, %fd49, 0dBC46A4CB00B9E7B0;
	add.rn.f64 	%fd51, %fd45, %fd50;
	sub.rn.f64 	%fd52, %fd45, %fd51;
	add.rn.f64 	%fd53, %fd50, %fd52;
	mul.rn.f64 	%fd54, %fd24, %fd24;
	neg.f64 	%fd55, %fd54;
	fma.rn.f64 	%fd56, %fd24, %fd24, %fd55;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd44;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd44;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd57, {%r22, %r24};
	fma.rn.f64 	%fd58, %fd24, %fd57, %fd56;
	mul.rn.f64 	%fd59, %fd54, %fd24;
	neg.f64 	%fd60, %fd59;
	fma.rn.f64 	%fd61, %fd54, %fd24, %fd60;
	fma.rn.f64 	%fd62, %fd54, %fd44, %fd61;
	fma.rn.f64 	%fd63, %fd58, %fd24, %fd62;
	mul.rn.f64 	%fd64, %fd51, %fd59;
	neg.f64 	%fd65, %fd64;
	fma.rn.f64 	%fd66, %fd51, %fd59, %fd65;
	fma.rn.f64 	%fd67, %fd51, %fd63, %fd66;
	fma.rn.f64 	%fd68, %fd53, %fd59, %fd67;
	add.rn.f64 	%fd69, %fd64, %fd68;
	sub.rn.f64 	%fd70, %fd64, %fd69;
	add.rn.f64 	%fd71, %fd68, %fd70;
	add.rn.f64 	%fd72, %fd24, %fd69;
	sub.rn.f64 	%fd73, %fd24, %fd72;
	add.rn.f64 	%fd74, %fd69, %fd73;
	add.rn.f64 	%fd75, %fd71, %fd74;
	add.rn.f64 	%fd76, %fd44, %fd75;
	add.rn.f64 	%fd77, %fd72, %fd76;
	sub.rn.f64 	%fd78, %fd72, %fd77;
	add.rn.f64 	%fd79, %fd76, %fd78;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd80, {%r25, %r27};
	mov.b64 	%fd81, {%r26, %r27};
	sub.rn.f64 	%fd82, %fd80, %fd81;
	mov.f64 	%fd83, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd84, %fd82, %fd83, %fd77;
	neg.f64 	%fd85, %fd82;
	fma.rn.f64 	%fd86, %fd85, %fd83, %fd84;
	sub.rn.f64 	%fd87, %fd86, %fd77;
	sub.rn.f64 	%fd88, %fd79, %fd87;
	mov.f64 	%fd89, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd90, %fd82, %fd89, %fd88;
	add.rn.f64 	%fd91, %fd84, %fd90;
	sub.rn.f64 	%fd92, %fd84, %fd91;
	add.rn.f64 	%fd93, %fd90, %fd92;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd94, {%r32, %r31};
	mul.rn.f64 	%fd95, %fd91, %fd94;
	neg.f64 	%fd96, %fd95;
	fma.rn.f64 	%fd97, %fd91, %fd94, %fd96;
	fma.rn.f64 	%fd98, %fd93, %fd94, %fd97;
	add.rn.f64 	%fd4, %fd95, %fd98;
	sub.rn.f64 	%fd99, %fd95, %fd4;
	add.rn.f64 	%fd5, %fd98, %fd99;
	mov.f64 	%fd100, 0d4338000000000000;
	mov.f64 	%fd101, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd102, %fd4, %fd101, %fd100;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd102;
	}
	mov.f64 	%fd103, 0dC338000000000000;
	add.rn.f64 	%fd104, %fd102, %fd103;
	mov.f64 	%fd105, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd106, %fd104, %fd105, %fd4;
	mov.f64 	%fd107, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd108, %fd104, %fd107, %fd106;
	mov.f64 	%fd109, 0d3E928AF3FCA213EA;
	mov.f64 	%fd110, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd111, %fd110, %fd108, %fd109;
	mov.f64 	%fd112, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd113, %fd111, %fd108, %fd112;
	mov.f64 	%fd114, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd115, %fd113, %fd108, %fd114;
	mov.f64 	%fd116, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd117, %fd115, %fd108, %fd116;
	mov.f64 	%fd118, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd119, %fd117, %fd108, %fd118;
	mov.f64 	%fd120, 0d3F81111111122322;
	fma.rn.f64 	%fd121, %fd119, %fd108, %fd120;
	mov.f64 	%fd122, 0d3FA55555555502A1;
	fma.rn.f64 	%fd123, %fd121, %fd108, %fd122;
	mov.f64 	%fd124, 0d3FC5555555555511;
	fma.rn.f64 	%fd125, %fd123, %fd108, %fd124;
	mov.f64 	%fd126, 0d3FE000000000000B;
	fma.rn.f64 	%fd127, %fd125, %fd108, %fd126;
	fma.rn.f64 	%fd128, %fd127, %fd108, %fd16;
	fma.rn.f64 	%fd129, %fd128, %fd108, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd129;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd129;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd137, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB88_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.rn.f64 	%fd130, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd137, 0d0000000000000000, %fd130, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB88_7;

	mov.f64 	%fd135, 0d4338000000000000;
	mov.f64 	%fd134, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd133, %fd4, %fd134, %fd135;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd133;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd131, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd132, {%r44, %r43};
	mul.rn.f64 	%fd137, %fd131, %fd132;

$L__BB88_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd137;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd137;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB88_9;

	fma.rn.f64 	%fd137, %fd137, %fd5, %fd137;

$L__BB88_9:
	st.param.f64 	[func_retval0+0], %fd137;
	ret;

}

`
const elemunaryopPTX = `//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_61
.address_size 64

	// .globl	cos_f64
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.global .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};
.global .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry cos_f64(
	.param .u64 cos_f64_param_0,
	.param .u32 cos_f64_param_1
)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .b32 	%r<33>;
	.reg .f64 	%fd<43>;
	.reg .b64 	%rd<11>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [cos_f64_param_0];
	ld.param.u32 	%r7, [cos_f64_param_1];
	add.u64 	%rd4, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r8, %ctaid.z;
	mov.u32 	%r9, %nctaid.y;
	mov.u32 	%r10, %ctaid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mov.u32 	%r12, %nctaid.x;
	mov.u32 	%r13, %ctaid.x;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.z;
	mov.u32 	%r16, %tid.z;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	mov.u32 	%r18, %ntid.y;
	mov.u32 	%r19, %tid.y;
	mad.lo.s32 	%r20, %r17, %r18, %r19;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r1, %r20, %r21, %r22;
	setp.ge.s32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB0_11;

	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd2, %rd5, %rd6;
	ld.global.f64 	%fd1, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd1;
	}
	and.b32  	%r25, %r24, 2147483647;
	setp.eq.s32 	%p2, %r25, 2146435072;
	setp.eq.s32 	%p3, %r23, 0;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_2;

$L__BB0_5:
	mov.f64 	%fd23, 0d0000000000000000;
	mul.rn.f64 	%fd40, %fd1, %fd23;
	mov.u32 	%r32, 1;
	bra.uni 	$L__BB0_6;

$L__BB0_2:
	mul.rn.f64 	%fd14, %fd1, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r31, %fd14;
	st.local.u32 	[%rd1], %r31;
	cvt.rn.f64.s32 	%fd15, %r31;
	neg.f64 	%fd16, %fd15;
	mov.f64 	%fd17, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd18, %fd16, %fd17, %fd1;
	mov.f64 	%fd19, 0d3C91A62633145C00;
	fma.rn.f64 	%fd20, %fd16, %fd19, %fd18;
	mov.f64 	%fd21, 0d397B839A252049C0;
	fma.rn.f64 	%fd40, %fd16, %fd21, %fd20;
	abs.f64 	%fd22, %fd1;
	setp.ltu.f64 	%p5, %fd22, 0d41E0000000000000;
	@%p5 bra 	$L__BB0_4;

	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd40, [retval0+0];
	} // callseq 0
	ld.local.u32 	%r31, [%rd1];

$L__BB0_4:
	add.s32 	%r32, %r31, 1;

$L__BB0_6:
	and.b32  	%r27, %r32, 1;
	shl.b32 	%r28, %r32, 3;
	and.b32  	%r29, %r28, 8;
	setp.eq.s32 	%p6, %r27, 0;
	selp.f64 	%fd24, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p6;
	mul.wide.s32 	%rd8, %r29, 8;
	mov.u64 	%rd9, __cudart_sin_cos_coeffs;
	add.s64 	%rd10, %rd9, %rd8;
	ld.global.nc.f64 	%fd25, [%rd10+8];
	mul.rn.f64 	%fd7, %fd40, %fd40;
	fma.rn.f64 	%fd26, %fd24, %fd7, %fd25;
	ld.global.nc.f64 	%fd27, [%rd10+16];
	fma.rn.f64 	%fd28, %fd26, %fd7, %fd27;
	ld.global.nc.f64 	%fd29, [%rd10+24];
	fma.rn.f64 	%fd30, %fd28, %fd7, %fd29;
	ld.global.nc.f64 	%fd31, [%rd10+32];
	fma.rn.f64 	%fd32, %fd30, %fd7, %fd31;
	ld.global.nc.f64 	%fd33, [%rd10+40];
	fma.rn.f64 	%fd34, %fd32, %fd7, %fd33;
	ld.global.nc.f64 	%fd35, [%rd10+48];
	fma.rn.f64 	%fd8, %fd34, %fd7, %fd35;
	fma.rn.f64 	%fd42, %fd8, %fd40, %fd40;
	@%p6 bra 	$L__BB0_8;

	mov.f64 	%fd36, 0d3FF0000000000000;
	fma.rn.f64 	%fd42, %fd8, %fd7, %fd36;

$L__BB0_8:
	and.b32  	%r30, %r32, 2;
	setp.eq.s32 	%p7, %r30, 0;
	@%p7 bra 	$L__BB0_10;

	mov.f64 	%fd37, 0d0000000000000000;
	mov.f64 	%fd38, 0dBFF0000000000000;
	fma.rn.f64 	%fd42, %fd42, %fd38, %fd37;

$L__BB0_10:
	st.global.f64 	[%rd2], %fd42;

$L__BB0_11:
	ret;

}
	// .globl	sin_f64
.visible .entry sin_f64(
	.param .u64 sin_f64_param_0,
	.param .u32 sin_f64_param_1
)
{
	.local .align 4 .b8 	__local_depot1[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .b32 	%r<30>;
	.reg .f64 	%fd<41>;
	.reg .b64 	%rd<11>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [sin_f64_param_0];
	ld.param.u32 	%r5, [sin_f64_param_1];
	add.u64 	%rd4, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r6, %ctaid.z;
	mov.u32 	%r7, %nctaid.y;
	mov.u32 	%r8, %ctaid.y;
	mad.lo.s32 	%r9, %r6, %r7, %r8;
	mov.u32 	%r10, %nctaid.x;
	mov.u32 	%r11, %ctaid.x;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %tid.z;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r18, %r15, %r16, %r17;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r18, %r19, %r20;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB1_10;

	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd2, %rd5, %rd6;
	ld.global.f64 	%fd1, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r21, %temp}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd1;
	}
	and.b32  	%r23, %r22, 2147483647;
	setp.eq.s32 	%p2, %r23, 2146435072;
	setp.eq.s32 	%p3, %r21, 0;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	$L__BB1_4;
	bra.uni 	$L__BB1_2;

$L__BB1_4:
	mov.f64 	%fd22, 0d0000000000000000;
	mul.rn.f64 	%fd38, %fd1, %fd22;
	mov.u32 	%r29, 0;
	bra.uni 	$L__BB1_5;

$L__BB1_2:
	mul.rn.f64 	%fd13, %fd1, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r29, %fd13;
	st.local.u32 	[%rd1], %r29;
	cvt.rn.f64.s32 	%fd14, %r29;
	neg.f64 	%fd15, %fd14;
	mov.f64 	%fd16, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd17, %fd15, %fd16, %fd1;
	mov.f64 	%fd18, 0d3C91A62633145C00;
	fma.rn.f64 	%fd19, %fd15, %fd18, %fd17;
	mov.f64 	%fd20, 0d397B839A252049C0;
	fma.rn.f64 	%fd38, %fd15, %fd20, %fd19;
	abs.f64 	%fd21, %fd1;
	setp.ltu.f64 	%p5, %fd21, 0d41E0000000000000;
	@%p5 bra 	$L__BB1_5;

	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd38, [retval0+0];
	} // callseq 1
	ld.local.u32 	%r29, [%rd1];

$L__BB1_5:
	and.b32  	%r25, %r29, 1;
	shl.b32 	%r26, %r29, 3;
	and.b32  	%r27, %r26, 8;
	setp.eq.s32 	%p6, %r25, 0;
	selp.f64 	%fd23, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p6;
	mul.wide.s32 	%rd8, %r27, 8;
	mov.u64 	%rd9, __cudart_sin_cos_coeffs;
	add.s64 	%rd10, %rd9, %rd8;
	ld.global.nc.f64 	%fd24, [%rd10+8];
	mul.rn.f64 	%fd6, %fd38, %fd38;
	fma.rn.f64 	%fd25, %fd23, %fd6, %fd24;
	ld.global.nc.f64 	%fd26, [%rd10+16];
	fma.rn.f64 	%fd27, %fd25, %fd6, %fd26;
	ld.global.nc.f64 	%fd28, [%rd10+24];
	fma.rn.f64 	%fd29, %fd27, %fd6, %fd28;
	ld.global.nc.f64 	%fd30, [%rd10+32];
	fma.rn.f64 	%fd31, %fd29, %fd6, %fd30;
	ld.global.nc.f64 	%fd32, [%rd10+40];
	fma.rn.f64 	%fd33, %fd31, %fd6, %fd32;
	ld.global.nc.f64 	%fd34, [%rd10+48];
	fma.rn.f64 	%fd7, %fd33, %fd6, %fd34;
	fma.rn.f64 	%fd40, %fd7, %fd38, %fd38;
	@%p6 bra 	$L__BB1_7;

	mov.f64 	%fd35, 0d3FF0000000000000;
	fma.rn.f64 	%fd40, %fd7, %fd6, %fd35;

$L__BB1_7:
	and.b32  	%r28, %r29, 2;
	setp.eq.s32 	%p7, %r28, 0;
	@%p7 bra 	$L__BB1_9;

	mov.f64 	%fd36, 0d0000000000000000;
	mov.f64 	%fd37, 0dBFF0000000000000;
	fma.rn.f64 	%fd40, %fd40, %fd37, %fd36;

$L__BB1_9:
	st.global.f64 	[%rd2], %fd40;

$L__BB1_10:
	ret;

}
	// .globl	exp_f64
.visible .entry exp_f64(
	.param .u64 exp_f64_param_0,
	.param .u32 exp_f64_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<33>;
	.reg .f64 	%fd<41>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [exp_f64_param_0];
	ld.param.u32 	%r5, [exp_f64_param_1];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ctaid.z;
	mov.u32 	%r8, %nctaid.y;
	mov.u32 	%r9, %ctaid.y;
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	mov.u32 	%r11, %nctaid.x;
	mad.lo.s32 	%r12, %r10, %r11, %r6;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %tid.z;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r18, %r15, %r16, %r17;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r18, %r19, %r20;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB2_5;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd1];
	mov.f64 	%fd6, 0d4338000000000000;
	mov.f64 	%fd7, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd8, %fd1, %fd7, %fd6;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd8;
	}
	mov.f64 	%fd9, 0dC338000000000000;
	add.rn.f64 	%fd10, %fd8, %fd9;
	mov.f64 	%fd11, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd12, %fd10, %fd11, %fd1;
	mov.f64 	%fd13, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd14, %fd10, %fd13, %fd12;
	mov.f64 	%fd15, 0d3E928AF3FCA213EA;
	mov.f64 	%fd16, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd17, %fd16, %fd14, %fd15;
	mov.f64 	%fd18, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd19, %fd17, %fd14, %fd18;
	mov.f64 	%fd20, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd21, %fd19, %fd14, %fd20;
	mov.f64 	%fd22, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd23, %fd21, %fd14, %fd22;
	mov.f64 	%fd24, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd25, %fd23, %fd14, %fd24;
	mov.f64 	%fd26, 0d3F81111111122322;
	fma.rn.f64 	%fd27, %fd25, %fd14, %fd26;
	mov.f64 	%fd28, 0d3FA55555555502A1;
	fma.rn.f64 	%fd29, %fd27, %fd14, %fd28;
	mov.f64 	%fd30, 0d3FC5555555555511;
	fma.rn.f64 	%fd31, %fd29, %fd14, %fd30;
	mov.f64 	%fd32, 0d3FE000000000000B;
	fma.rn.f64 	%fd33, %fd31, %fd14, %fd32;
	mov.f64 	%fd34, 0d3FF0000000000000;
	fma.rn.f64 	%fd35, %fd33, %fd14, %fd34;
	fma.rn.f64 	%fd36, %fd35, %fd14, %fd34;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd36;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd36;
	}
	shl.b32 	%r21, %r2, 20;
	add.s32 	%r22, %r4, %r21;
	mov.b64 	%fd40, {%r3, %r22};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd1;
	}
	mov.b32 	%f2, %r23;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p2, %f1, 0f4086232B;
	@%p2 bra 	$L__BB2_4;

	setp.lt.f64 	%p3, %fd1, 0d0000000000000000;
	add.rn.f64 	%fd37, %fd1, 0d7FF0000000000000;
	selp.f64 	%fd40, 0d0000000000000000, %fd37, %p3;
	setp.geu.f32 	%p4, %f1, 0f40874800;
	@%p4 bra 	$L__BB2_4;

	shr.u32 	%r24, %r2, 31;
	add.s32 	%r25, %r2, %r24;
	shr.s32 	%r26, %r25, 1;
	shl.b32 	%r27, %r26, 20;
	add.s32 	%r28, %r4, %r27;
	mov.b64 	%fd38, {%r3, %r28};
	sub.s32 	%r29, %r2, %r26;
	shl.b32 	%r30, %r29, 20;
	add.s32 	%r31, %r30, 1072693248;
	mov.u32 	%r32, 0;
	mov.b64 	%fd39, {%r32, %r31};
	mul.rn.f64 	%fd40, %fd38, %fd39;

$L__BB2_4:
	st.global.f64 	[%rd1], %fd40;

$L__BB2_5:
	ret;

}
	// .globl	ln_f64
.visible .entry ln_f64(
	.param .u64 ln_f64_param_0,
	.param .u32 ln_f64_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<45>;
	.reg .f64 	%fd<59>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [ln_f64_param_0];
	ld.param.u32 	%r12, [ln_f64_param_1];
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %nctaid.y;
	mov.u32 	%r16, %ctaid.y;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	mov.u32 	%r18, %nctaid.x;
	mad.lo.s32 	%r19, %r17, %r18, %r13;
	mov.u32 	%r20, %ntid.z;
	mov.u32 	%r21, %tid.z;
	mad.lo.s32 	%r22, %r19, %r20, %r21;
	mov.u32 	%r23, %ntid.y;
	mov.u32 	%r24, %tid.y;
	mad.lo.s32 	%r25, %r22, %r23, %r24;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r1, %r25, %r26, %r27;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB3_9;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd56, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r41}, %fd56;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r42, %temp}, %fd56;
	}
	setp.gt.s32 	%p2, %r41, 1048575;
	mov.u32 	%r43, -1023;
	@%p2 bra 	$L__BB3_3;

	mul.rn.f64 	%fd56, %fd56, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r41}, %fd56;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r42, %temp}, %fd56;
	}
	mov.u32 	%r43, -1077;

$L__BB3_3:
	add.s32 	%r30, %r41, -1;
	setp.lt.u32 	%p3, %r30, 2146435071;
	@%p3 bra 	$L__BB3_5;
	bra.uni 	$L__BB3_4;

$L__BB3_5:
	shr.u32 	%r32, %r41, 20;
	add.s32 	%r44, %r43, %r32;
	and.b32  	%r33, %r41, -2146435073;
	or.b32  	%r34, %r33, 1072693248;
	mov.b64 	%fd57, {%r42, %r34};
	setp.lt.s32 	%p5, %r34, 1073127583;
	@%p5 bra 	$L__BB3_7;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r35, %temp}, %fd57;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %fd57;
	}
	add.s32 	%r37, %r36, -1048576;
	mov.b64 	%fd57, {%r35, %r37};
	add.s32 	%r44, %r44, 1;

$L__BB3_7:
	add.rn.f64 	%fd12, %fd57, 0d3FF0000000000000;
	mov.f64 	%fd13, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd14, %fd12;
	neg.f64 	%fd15, %fd12;
	fma.rn.f64 	%fd16, %fd15, %fd14, %fd13;
	fma.rn.f64 	%fd17, %fd16, %fd16, %fd16;
	fma.rn.f64 	%fd18, %fd17, %fd14, %fd14;
	add.rn.f64 	%fd19, %fd57, 0dBFF0000000000000;
	mul.rn.f64 	%fd20, %fd19, %fd18;
	add.rn.f64 	%fd21, %fd20, %fd20;
	mul.rn.f64 	%fd22, %fd21, %fd21;
	mov.f64 	%fd23, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd24, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd25, %fd24, %fd22, %fd23;
	mov.f64 	%fd26, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd27, %fd25, %fd22, %fd26;
	mov.f64 	%fd28, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd29, %fd27, %fd22, %fd28;
	mov.f64 	%fd30, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd31, %fd29, %fd22, %fd30;
	mov.f64 	%fd32, 0d3F624924923BE72D;
	fma.rn.f64 	%fd33, %fd31, %fd22, %fd32;
	mov.f64 	%fd34, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd35, %fd33, %fd22, %fd34;
	mov.f64 	%fd36, 0d3FB5555555555554;
	fma.rn.f64 	%fd37, %fd35, %fd22, %fd36;
	sub.rn.f64 	%fd38, %fd19, %fd21;
	add.rn.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd21;
	fma.rn.f64 	%fd41, %fd40, %fd19, %fd39;
	mul.rn.f64 	%fd42, %fd18, %fd41;
	mul.rn.f64 	%fd43, %fd22, %fd37;
	fma.rn.f64 	%fd44, %fd43, %fd21, %fd42;
	xor.b32  	%r38, %r44, -2147483648;
	mov.u32 	%r39, -2147483648;
	mov.u32 	%r40, 1127219200;
	mov.b64 	%fd45, {%r38, %r40};
	mov.b64 	%fd46, {%r39, %r40};
	sub.rn.f64 	%fd47, %fd45, %fd46;
	mov.f64 	%fd48, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd49, %fd47, %fd48, %fd21;
	neg.f64 	%fd50, %fd47;
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	sub.rn.f64 	%fd52, %fd51, %fd21;
	sub.rn.f64 	%fd53, %fd44, %fd52;
	mov.f64 	%fd54, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd55, %fd47, %fd54, %fd53;
	add.rn.f64 	%fd58, %fd49, %fd55;
	bra.uni 	$L__BB3_8;

$L__BB3_4:
	mov.f64 	%fd10, 0d7FF0000000000000;
	fma.rn.f64 	%fd11, %fd56, %fd10, %fd10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd56;
	}
	mov.b32 	%f1, %r31;
	setp.eq.f32 	%p4, %f1, 0f00000000;
	selp.f64 	%fd58, 0dFFF0000000000000, %fd11, %p4;

$L__BB3_8:
	st.global.f64 	[%rd1], %fd58;

$L__BB3_9:
	ret;

}
	// .globl	log2_f64
.visible .entry log2_f64(
	.param .u64 log2_f64_param_0,
	.param .u32 log2_f64_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<45>;
	.reg .f64 	%fd<62>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [log2_f64_param_0];
	ld.param.u32 	%r12, [log2_f64_param_1];
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %nctaid.y;
	mov.u32 	%r16, %ctaid.y;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	mov.u32 	%r18, %nctaid.x;
	mad.lo.s32 	%r19, %r17, %r18, %r13;
	mov.u32 	%r20, %ntid.z;
	mov.u32 	%r21, %tid.z;
	mad.lo.s32 	%r22, %r19, %r20, %r21;
	mov.u32 	%r23, %ntid.y;
	mov.u32 	%r24, %tid.y;
	mad.lo.s32 	%r25, %r22, %r23, %r24;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r1, %r25, %r26, %r27;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB4_9;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd59, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r41}, %fd59;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r42, %temp}, %fd59;
	}
	setp.gt.s32 	%p2, %r41, 1048575;
	mov.u32 	%r43, -1023;
	@%p2 bra 	$L__BB4_3;

	mul.rn.f64 	%fd59, %fd59, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r41}, %fd59;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r42, %temp}, %fd59;
	}
	mov.u32 	%r43, -1077;

$L__BB4_3:
	add.s32 	%r30, %r41, -1;
	setp.lt.u32 	%p3, %r30, 2146435071;
	@%p3 bra 	$L__BB4_5;
	bra.uni 	$L__BB4_4;

$L__BB4_5:
	shr.u32 	%r32, %r41, 20;
	add.s32 	%r44, %r43, %r32;
	and.b32  	%r33, %r41, -2146435073;
	or.b32  	%r34, %r33, 1072693248;
	mov.b64 	%fd60, {%r42, %r34};
	setp.lt.s32 	%p5, %r34, 1073127583;
	@%p5 bra 	$L__BB4_7;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r35, %temp}, %fd60;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %fd60;
	}
	add.s32 	%r37, %r36, -1048576;
	mov.b64 	%fd60, {%r35, %r37};
	add.s32 	%r44, %r44, 1;

$L__BB4_7:
	add.rn.f64 	%fd12, %fd60, 0d3FF0000000000000;
	mov.f64 	%fd13, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd14, %fd12;
	neg.f64 	%fd15, %fd12;
	fma.rn.f64 	%fd16, %fd15, %fd14, %fd13;
	fma.rn.f64 	%fd17, %fd16, %fd16, %fd16;
	fma.rn.f64 	%fd18, %fd17, %fd14, %fd14;
	add.rn.f64 	%fd19, %fd60, 0dBFF0000000000000;
	mul.rn.f64 	%fd20, %fd19, %fd18;
	add.rn.f64 	%fd21, %fd20, %fd20;
	mul.rn.f64 	%fd22, %fd21, %fd21;
	mov.f64 	%fd23, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd24, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd25, %fd24, %fd22, %fd23;
	mov.f64 	%fd26, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd27, %fd25, %fd22, %fd26;
	mov.f64 	%fd28, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd29, %fd27, %fd22, %fd28;
	mov.f64 	%fd30, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd31, %fd29, %fd22, %fd30;
	mov.f64 	%fd32, 0d3F624924923BE72D;
	fma.rn.f64 	%fd33, %fd31, %fd22, %fd32;
	mov.f64 	%fd34, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd35, %fd33, %fd22, %fd34;
	mov.f64 	%fd36, 0d3FB5555555555554;
	fma.rn.f64 	%fd37, %fd35, %fd22, %fd36;
	sub.rn.f64 	%fd38, %fd19, %fd21;
	add.rn.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd21;
	fma.rn.f64 	%fd41, %fd40, %fd19, %fd39;
	mul.rn.f64 	%fd42, %fd18, %fd41;
	mul.rn.f64 	%fd43, %fd22, %fd37;
	fma.rn.f64 	%fd44, %fd43, %fd21, %fd42;
	xor.b32  	%r38, %r44, -2147483648;
	mov.u32 	%r39, -2147483648;
	mov.u32 	%r40, 1127219200;
	mov.b64 	%fd45, {%r38, %r40};
	mov.b64 	%fd46, {%r39, %r40};
	sub.rn.f64 	%fd47, %fd45, %fd46;
	mov.f64 	%fd48, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd49, %fd47, %fd48, %fd21;
	neg.f64 	%fd50, %fd47;
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	sub.rn.f64 	%fd52, %fd51, %fd21;
	sub.rn.f64 	%fd53, %fd44, %fd52;
	mov.f64 	%fd54, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd55, %fd47, %fd54, %fd53;
	add.rn.f64 	%fd61, %fd49, %fd55;
	bra.uni 	$L__BB4_8;

$L__BB4_4:
	mov.f64 	%fd10, 0d7FF0000000000000;
	fma.rn.f64 	%fd11, %fd59, %fd10, %fd10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd59;
	}
	mov.b32 	%f1, %r31;
	setp.eq.f32 	%p4, %f1, 0f00000000;
	selp.f64 	%fd61, 0dFFF0000000000000, %fd11, %p4;

$L__BB4_8:
	mul.rn.f64 	%fd56, %fd61, 0d3C7777D0FFDA0D24;
	mov.f64 	%fd57, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd58, %fd61, %fd57, %fd56;
	st.global.f64 	[%rd1], %fd58;

$L__BB4_9:
	ret;

}
	// .globl	sqrt_f64
.visible .entry sqrt_f64(
	.param .u64 sqrt_f64_param_0,
	.param .u32 sqrt_f64_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [sqrt_f64_param_0];
	ld.param.u32 	%r2, [sqrt_f64_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	sqrt.rn.f64 	%fd2, %fd1;
	st.global.f64 	[%rd4], %fd2;

$L__BB5_2:
	ret;

}
	// .globl	tanh_f64
.visible .entry tanh_f64(
	.param .u64 tanh_f64_param_0,
	.param .u32 tanh_f64_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<25>;
	.reg .f64 	%fd<72>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [tanh_f64_param_0];
	ld.param.u32 	%r4, [tanh_f64_param_1];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ctaid.z;
	mov.u32 	%r7, %nctaid.y;
	mov.u32 	%r8, %ctaid.y;
	mad.lo.s32 	%r9, %r6, %r7, %r8;
	mov.u32 	%r10, %nctaid.x;
	mad.lo.s32 	%r11, %r9, %r10, %r5;
	mov.u32 	%r12, %ntid.z;
	mov.u32 	%r13, %tid.z;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	mov.u32 	%r15, %ntid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	mov.u32 	%r18, %ntid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r17, %r18, %r19;
	setp.ge.s32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB6_5;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	and.b32  	%r3, %r2, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r20, %temp}, %fd1;
	}
	mov.b64 	%fd2, {%r20, %r3};
	setp.ltu.f64 	%p2, %fd2, 0d3FE4F92224DD2F1A;
	@%p2 bra 	$L__BB6_3;
	bra.uni 	$L__BB6_2;

$L__BB6_3:
	mul.rn.f64 	%fd47, %fd1, %fd1;
	mov.f64 	%fd48, 0d3F14359F420AFC3D;
	mov.f64 	%fd49, 0dBEF0BC46E2F5E964;
	fma.rn.f64 	%fd50, %fd49, %fd47, %fd48;
	mov.f64 	%fd51, 0dBF2DF9F0728C5D84;
	fma.rn.f64 	%fd52, %fd50, %fd47, %fd51;
	mov.f64 	%fd53, 0d3F4337D1CEC4F033;
	fma.rn.f64 	%fd54, %fd52, %fd47, %fd53;
	mov.f64 	%fd55, 0dBF57D6E9674335B3;
	fma.rn.f64 	%fd56, %fd54, %fd47, %fd55;
	mov.f64 	%fd57, 0d3F6D6D000D7AAD3D;
	fma.rn.f64 	%fd58, %fd56, %fd47, %fd57;
	mov.f64 	%fd59, 0dBF8226E1F3CF1EF5;
	fma.rn.f64 	%fd60, %fd58, %fd47, %fd59;
	mov.f64 	%fd61, 0d3F9664F47EC0C8CF;
	fma.rn.f64 	%fd62, %fd60, %fd47, %fd61;
	mov.f64 	%fd63, 0dBFABA1BA1B80AB40;
	fma.rn.f64 	%fd64, %fd62, %fd47, %fd63;
	mov.f64 	%fd65, 0d3FC111111110FA4A;
	fma.rn.f64 	%fd66, %fd64, %fd47, %fd65;
	mov.f64 	%fd67, 0dBFD5555555555550;
	fma.rn.f64 	%fd68, %fd66, %fd47, %fd67;
	mov.f64 	%fd69, 0d0000000000000000;
	fma.rn.f64 	%fd70, %fd68, %fd47, %fd69;
	fma.rn.f64 	%fd71, %fd70, %fd1, %fd1;
	bra.uni 	$L__BB6_4;

$L__BB6_2:
	add.rn.f64 	%fd6, %fd2, %fd2;
	mov.f64 	%fd7, 0d4000000000000000;
	cvt.rn.f32.f64 	%f1, %fd6;
	mul.rn.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f3, %f2;
	cvt.f64.f32 	%fd8, %f3;
	neg.f64 	%fd9, %fd8;
	mov.f64 	%fd10, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd11, %fd9, %fd10, %fd6;
	mov.f64 	%fd12, 0d3E928A27F89B6999;
	mov.f64 	%fd13, 0d3E5AE904A4741B81;
	fma.rn.f64 	%fd14, %fd13, %fd11, %fd12;
	mov.f64 	%fd15, 0d3EC71DE715FF7E07;
	fma.rn.f64 	%fd16, %fd14, %fd11, %fd15;
	mov.f64 	%fd17, 0d3EFA019A6B0AC45A;
	fma.rn.f64 	%fd18, %fd16, %fd11, %fd17;
	mov.f64 	%fd19, 0d3F2A01A017EED94F;
	fma.rn.f64 	%fd20, %fd18, %fd11, %fd19;
	mov.f64 	%fd21, 0d3F56C16C17F2A71B;
	fma.rn.f64 	%fd22, %fd20, %fd11, %fd21;
	mov.f64 	%fd23, 0d3F811111111173C4;
	fma.rn.f64 	%fd24, %fd22, %fd11, %fd23;
	mov.f64 	%fd25, 0d3FA555555555211A;
	fma.rn.f64 	%fd26, %fd24, %fd11, %fd25;
	mov.f64 	%fd27, 0d3FC5555555555540;
	fma.rn.f64 	%fd28, %fd26, %fd11, %fd27;
	mov.f64 	%fd29, 0d3FE0000000000005;
	fma.rn.f64 	%fd30, %fd28, %fd11, %fd29;
	mul.rn.f64 	%fd31, %fd11, %fd30;
	fma.rn.f64 	%fd32, %fd31, %fd11, %fd11;
	ex2.approx.ftz.f32 	%f4, %f3;
	cvt.f64.f32 	%fd33, %f4;
	mov.f64 	%fd34, 0d3FF0000000000000;
	sub.rn.f64 	%fd35, %fd34, %fd33;
	neg.f64 	%fd36, %fd32;
	fma.rn.f64 	%fd37, %fd36, %fd33, %fd35;
	sub.rn.f64 	%fd38, %fd7, %fd37;
	rcp.approx.ftz.f64 	%fd39, %fd38;
	neg.f64 	%fd40, %fd38;
	fma.rn.f64 	%fd41, %fd40, %fd39, %fd34;
	fma.rn.f64 	%fd42, %fd41, %fd41, %fd41;
	fma.rn.f64 	%fd43, %fd42, %fd39, %fd39;
	neg.f64 	%fd44, %fd43;
	fma.rn.f64 	%fd45, %fd7, %fd44, %fd34;
	setp.gt.u32 	%p3, %r3, 1077088193;
	selp.f64 	%fd46, 0d3FF0000000000000, %fd45, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r21, %temp}, %fd46;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd46;
	}
	and.b32  	%r23, %r2, -2147483648;
	or.b32  	%r24, %r22, %r23;
	mov.b64 	%fd71, {%r21, %r24};

$L__BB6_4:
	st.global.f64 	[%rd1], %fd71;

$L__BB6_5:
	ret;

}
	// .globl	log1p_f64
.visible .entry log1p_f64(
	.param .u64 log1p_f64_param_0,
	.param .u32 log1p_f64_param_1
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<46>;
	.reg .f64 	%fd<84>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [log1p_f64_param_0];
	ld.param.u32 	%r12, [log1p_f64_param_1];
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %nctaid.y;
	mov.u32 	%r16, %ctaid.y;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	mov.u32 	%r18, %nctaid.x;
	mad.lo.s32 	%r19, %r17, %r18, %r13;
	mov.u32 	%r20, %ntid.z;
	mov.u32 	%r21, %tid.z;
	mad.lo.s32 	%r22, %r19, %r20, %r21;
	mov.u32 	%r23, %ntid.y;
	mov.u32 	%r24, %tid.y;
	mad.lo.s32 	%r25, %r22, %r23, %r24;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r1, %r25, %r26, %r27;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB7_11;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd1;
	}
	mov.b32 	%f1, %r28;
	setp.lt.f32 	%p2, %f1, 0f3FE55555;
	setp.gt.f32 	%p3, %f1, 0fBFD99999;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB7_9;
	bra.uni 	$L__BB7_2;

$L__BB7_9:
	add.rn.f64 	%fd58, %fd1, 0d4000000000000000;
	div.rn.f64 	%fd59, %fd1, %fd58;
	mul.rn.f64 	%fd60, %fd1, %fd59;
	neg.f64 	%fd61, %fd60;
	sub.rn.f64 	%fd62, %fd1, %fd60;
	mul.rn.f64 	%fd63, %fd62, %fd62;
	mov.f64 	%fd64, 0d3ED087FFCEB2DC44;
	mov.f64 	%fd65, 0d3EB372FB2FBE14B5;
	fma.rn.f64 	%fd66, %fd65, %fd63, %fd64;
	mov.f64 	%fd67, 0d3EF3B9FF890F468C;
	fma.rn.f64 	%fd68, %fd66, %fd63, %fd67;
	mov.f64 	%fd69, 0d3F17457EFD51BAF8;
	fma.rn.f64 	%fd70, %fd68, %fd63, %fd69;
	mov.f64 	%fd71, 0d3F3C71C8DE3CE825;
	fma.rn.f64 	%fd72, %fd70, %fd63, %fd71;
	mov.f64 	%fd73, 0d3F6249248FA4661F;
	fma.rn.f64 	%fd74, %fd72, %fd63, %fd73;
	mov.f64 	%fd75, 0d3F899999999D70C4;
	fma.rn.f64 	%fd76, %fd74, %fd63, %fd75;
	mov.f64 	%fd77, 0d3FB5555555555462;
	fma.rn.f64 	%fd78, %fd76, %fd63, %fd77;
	mul.rn.f64 	%fd79, %fd63, %fd78;
	fma.rn.f64 	%fd80, %fd79, %fd62, %fd61;
	add.rn.f64 	%fd83, %fd1, %fd80;
	bra.uni 	$L__BB7_10;

$L__BB7_2:
	add.rn.f64 	%fd81, %fd1, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd81;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r43, %temp}, %fd81;
	}
	setp.gt.s32 	%p5, %r42, 1048575;
	mov.u32 	%r44, -1023;
	@%p5 bra 	$L__BB7_4;

	mul.rn.f64 	%fd81, %fd81, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd81;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r43, %temp}, %fd81;
	}
	mov.u32 	%r44, -1077;

$L__BB7_4:
	add.s32 	%r31, %r42, -1;
	setp.lt.u32 	%p6, %r31, 2146435071;
	@%p6 bra 	$L__BB7_6;
	bra.uni 	$L__BB7_5;

$L__BB7_6:
	shr.u32 	%r33, %r42, 20;
	add.s32 	%r45, %r44, %r33;
	and.b32  	%r34, %r42, -2146435073;
	or.b32  	%r35, %r34, 1072693248;
	mov.b64 	%fd82, {%r43, %r35};
	setp.lt.s32 	%p8, %r35, 1073127583;
	@%p8 bra 	$L__BB7_8;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r36, %temp}, %fd82;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r37}, %fd82;
	}
	add.s32 	%r38, %r37, -1048576;
	mov.b64 	%fd82, {%r36, %r38};
	add.s32 	%r45, %r45, 1;

$L__BB7_8:
	add.rn.f64 	%fd14, %fd82, 0d3FF0000000000000;
	mov.f64 	%fd15, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd16, %fd14;
	neg.f64 	%fd17, %fd14;
	fma.rn.f64 	%fd18, %fd17, %fd16, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd16, %fd16;
	add.rn.f64 	%fd21, %fd82, 0dBFF0000000000000;
	mul.rn.f64 	%fd22, %fd21, %fd20;
	add.rn.f64 	%fd23, %fd22, %fd22;
	mul.rn.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd26, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F624924923BE72D;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	mov.f64 	%fd38, 0d3FB5555555555554;
	fma.rn.f64 	%fd39, %fd37, %fd24, %fd38;
	sub.rn.f64 	%fd40, %fd21, %fd23;
	add.rn.f64 	%fd41, %fd40, %fd40;
	neg.f64 	%fd42, %fd23;
	fma.rn.f64 	%fd43, %fd42, %fd21, %fd41;
	mul.rn.f64 	%fd44, %fd20, %fd43;
	mul.rn.f64 	%fd45, %fd24, %fd39;
	fma.rn.f64 	%fd46, %fd45, %fd23, %fd44;
	xor.b32  	%r39, %r45, -2147483648;
	mov.u32 	%r40, -2147483648;
	mov.u32 	%r41, 1127219200;
	mov.b64 	%fd47, {%r39, %r41};
	mov.b64 	%fd48, {%r40, %r41};
	sub.rn.f64 	%fd49, %fd47, %fd48;
	mov.f64 	%fd50, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd51, %fd49, %fd50, %fd23;
	neg.f64 	%fd52, %fd49;
	fma.rn.f64 	%fd53, %fd52, %fd50, %fd51;
	sub.rn.f64 	%fd54, %fd53, %fd23;
	sub.rn.f64 	%fd55, %fd46, %fd54;
	mov.f64 	%fd56, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd57, %fd49, %fd56, %fd55;
	add.rn.f64 	%fd83, %fd51, %fd57;
	bra.uni 	$L__BB7_10;

$L__BB7_5:
	mov.f64 	%fd12, 0d7FF0000000000000;
	fma.rn.f64 	%fd13, %fd81, %fd12, %fd12;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r32}, %fd81;
	}
	mov.b32 	%f2, %r32;
	setp.eq.f32 	%p7, %f2, 0f00000000;
	selp.f64 	%fd83, 0dFFF0000000000000, %fd13, %p7;

$L__BB7_10:
	st.global.f64 	[%rd1], %fd83;

$L__BB7_11:
	ret;

}
	// .globl	expm1_f64
.visible .entry expm1_f64(
	.param .u64 expm1_f64_param_0,
	.param .u32 expm1_f64_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<28>;
	.reg .f64 	%fd<48>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [expm1_f64_param_0];
	ld.param.u32 	%r3, [expm1_f64_param_1];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %nctaid.y;
	mov.u32 	%r7, %ctaid.y;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %nctaid.x;
	mad.lo.s32 	%r10, %r8, %r9, %r4;
	mov.u32 	%r11, %ntid.z;
	mov.u32 	%r12, %tid.z;
	mad.lo.s32 	%r13, %r10, %r11, %r12;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %tid.y;
	mad.lo.s32 	%r16, %r13, %r14, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB8_5;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	mov.b32 	%f1, %r2;
	setp.lt.f32 	%p2, %f1, 0f40862E43;
	setp.gt.f32 	%p3, %f1, 0fC04A8000;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB8_3;
	bra.uni 	$L__BB8_2;

$L__BB8_3:
	mov.f64 	%fd8, 0d4338000000000000;
	mov.f64 	%fd9, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd10, %fd1, %fd9, %fd8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd10;
	}
	mov.f64 	%fd11, 0dC338000000000000;
	add.rn.f64 	%fd12, %fd10, %fd11;
	mov.f64 	%fd13, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd14, %fd12, %fd13, %fd1;
	mov.f64 	%fd15, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd16, %fd12, %fd15, %fd14;
	shl.b32 	%r20, %r2, 1;
	setp.lt.u32 	%p7, %r20, 2142496327;
	selp.f64 	%fd17, %fd1, %fd16, %p7;
	selp.b32 	%r21, 0, %r19, %p7;
	mov.u32 	%r22, 0;
	mov.f64 	%fd18, 0d3E5AF86D8EBD13CD;
	mov.f64 	%fd19, 0d3E21F4076ACD15B6;
	fma.rn.f64 	%fd20, %fd19, %fd17, %fd18;
	mov.f64 	%fd21, 0d3E927E5092BA033D;
	fma.rn.f64 	%fd22, %fd20, %fd17, %fd21;
	mov.f64 	%fd23, 0d3EC71DDE6C5F9DA1;
	fma.rn.f64 	%fd24, %fd22, %fd17, %fd23;
	mov.f64 	%fd25, 0d3EFA01A018D034E6;
	fma.rn.f64 	%fd26, %fd24, %fd17, %fd25;
	mov.f64 	%fd27, 0d3F2A01A01B3B6940;
	fma.rn.f64 	%fd28, %fd26, %fd17, %fd27;
	mov.f64 	%fd29, 0d3F56C16C16C1B5DD;
	fma.rn.f64 	%fd30, %fd28, %fd17, %fd29;
	mov.f64 	%fd31, 0d3F8111111110F74D;
	fma.rn.f64 	%fd32, %fd30, %fd17, %fd31;
	mov.f64 	%fd33, 0d3FA555555555554D;
	fma.rn.f64 	%fd34, %fd32, %fd17, %fd33;
	mov.f64 	%fd35, 0d3FC5555555555557;
	fma.rn.f64 	%fd36, %fd34, %fd17, %fd35;
	mov.f64 	%fd37, 0d3FE0000000000000;
	fma.rn.f64 	%fd38, %fd36, %fd17, %fd37;
	mul.rn.f64 	%fd39, %fd17, %fd38;
	fma.rn.f64 	%fd40, %fd39, %fd17, %fd17;
	setp.eq.s32 	%p8, %r21, 1024;
	selp.b32 	%r23, -1, 0, %p8;
	add.s32 	%r24, %r21, %r23;
	shl.b32 	%r25, %r24, 20;
	add.s32 	%r26, %r25, 1072693248;
	mov.u32 	%r27, 1072693248;
	mov.b64 	%fd41, {%r22, %r26};
	mov.b64 	%fd42, {%r22, %r27};
	sub.rn.f64 	%fd43, %fd41, %fd42;
	fma.rn.f64 	%fd44, %fd40, %fd41, %fd43;
	add.rn.f64 	%fd45, %fd44, %fd44;
	setp.eq.s32 	%p9, %r20, 0;
	selp.f64 	%fd46, %fd45, %fd44, %p8;
	selp.f64 	%fd47, %fd17, %fd46, %p9;
	bra.uni 	$L__BB8_4;

$L__BB8_2:
	setp.lt.s32 	%p5, %r2, 0;
	abs.f64 	%fd5, %fd1;
	setp.gtu.f64 	%p6, %fd5, 0d7FF0000000000000;
	selp.f64 	%fd6, 0dBFF0000000000000, 0d7FF0000000000000, %p5;
	add.rn.f64 	%fd7, %fd1, %fd1;
	selp.f64 	%fd47, %fd7, %fd6, %p6;

$L__BB8_4:
	st.global.f64 	[%rd1], %fd47;

$L__BB8_5:
	ret;

}
	// .globl	abs_f64
.visible .entry abs_f64(
	.param .u64 abs_f64_param_0,
	.param .u32 abs_f64_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [abs_f64_param_0];
	ld.param.u32 	%r2, [abs_f64_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB9_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	abs.f64 	%fd2, %fd1;
	st.global.f64 	[%rd4], %fd2;

$L__BB9_2:
	ret;

}
	// .globl	ceil_f64
.visible .entry ceil_f64(
	.param .u64 ceil_f64_param_0,
	.param .u32 ceil_f64_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [ceil_f64_param_0];
	ld.param.u32 	%r2, [ceil_f64_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB10_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	cvt.rpi.f64.f64 	%fd2, %fd1;
	st.global.f64 	[%rd4], %fd2;

$L__BB10_2:
	ret;

}
	// .globl	floor_f64
.visible .entry floor_f64(
	.param .u64 floor_f64_param_0,
	.param .u32 floor_f64_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [floor_f64_param_0];
	ld.param.u32 	%r2, [floor_f64_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB11_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	cvt.rmi.f64.f64 	%fd2, %fd1;
	st.global.f64 	[%rd4], %fd2;

$L__BB11_2:
	ret;

}
	// .globl	sign_f64
.visible .entry sign_f64(
	.param .u64 sign_f64_param_0,
	.param .u32 sign_f64_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [sign_f64_param_0];
	ld.param.u32 	%r2, [sign_f64_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB12_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	setp.gt.f64 	%p2, %fd1, 0d0000000000000000;
	selp.u32 	%r18, 1, 0, %p2;
	setp.lt.f64 	%p3, %fd1, 0d0000000000000000;
	selp.u32 	%r19, 1, 0, %p3;
	sub.s32 	%r20, %r18, %r19;
	cvt.rn.f64.s32 	%fd2, %r20;
	st.global.f64 	[%rd4], %fd2;

$L__BB12_2:
	ret;

}
	// .globl	square_f64
.visible .entry square_f64(
	.param .u64 square_f64_param_0,
	.param .u32 square_f64_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [square_f64_param_0];
	ld.param.u32 	%r2, [square_f64_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB13_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	mul.rn.f64 	%fd2, %fd1, %fd1;
	st.global.f64 	[%rd4], %fd2;

$L__BB13_2:
	ret;

}
	// .globl	cube_f64
.visible .entry cube_f64(
	.param .u64 cube_f64_param_0,
	.param .u32 cube_f64_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [cube_f64_param_0];
	ld.param.u32 	%r2, [cube_f64_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB14_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	mul.rn.f64 	%fd2, %fd1, %fd1;
	mul.rn.f64 	%fd3, %fd1, %fd2;
	st.global.f64 	[%rd4], %fd3;

$L__BB14_2:
	ret;

}
	// .globl	neg_f64
.visible .entry neg_f64(
	.param .u64 neg_f64_param_0,
	.param .u32 neg_f64_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [neg_f64_param_0];
	ld.param.u32 	%r2, [neg_f64_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB15_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	neg.f64 	%fd2, %fd1;
	st.global.f64 	[%rd4], %fd2;

$L__BB15_2:
	ret;

}
	// .globl	inverse_f64
.visible .entry inverse_f64(
	.param .u64 inverse_f64_param_0,
	.param .u32 inverse_f64_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [inverse_f64_param_0];
	ld.param.u32 	%r2, [inverse_f64_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB16_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	rcp.rn.f64 	%fd2, %fd1;
	st.global.f64 	[%rd4], %fd2;

$L__BB16_2:
	ret;

}
	// .globl	softplus_f64
.visible .entry softplus_f64(
	.param .u64 softplus_f64_param_0,
	.param .u32 softplus_f64_param_1
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<61>;
	.reg .f64 	%fd<125>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd2, [softplus_f64_param_0];
	ld.param.u32 	%r15, [softplus_f64_param_1];
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %ctaid.z;
	mov.u32 	%r18, %nctaid.y;
	mov.u32 	%r19, %ctaid.y;
	mad.lo.s32 	%r20, %r17, %r18, %r19;
	mov.u32 	%r21, %nctaid.x;
	mad.lo.s32 	%r22, %r20, %r21, %r16;
	mov.u32 	%r23, %ntid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r25, %r22, %r23, %r24;
	mov.u32 	%r26, %ntid.y;
	mov.u32 	%r27, %tid.y;
	mad.lo.s32 	%r28, %r25, %r26, %r27;
	mov.u32 	%r29, %ntid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r1, %r28, %r29, %r30;
	setp.ge.s32 	%p1, %r1, %r15;
	@%p1 bra 	$L__BB17_16;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd1];
	setp.lt.f64 	%p2, %fd1, 0dC086200000000000;
	@%p2 bra 	$L__BB17_15;
	bra.uni 	$L__BB17_2;

$L__BB17_15:
	mov.u64 	%rd5, 0;
	st.global.u64 	[%rd1], %rd5;
	bra.uni 	$L__BB17_16;

$L__BB17_2:
	setp.gt.f64 	%p3, %fd1, 0d4030000000000000;
	@%p3 bra 	$L__BB17_16;

	mov.f64 	%fd16, 0d4338000000000000;
	mov.f64 	%fd17, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd18, %fd1, %fd17, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd18;
	}
	mov.f64 	%fd19, 0dC338000000000000;
	add.rn.f64 	%fd20, %fd18, %fd19;
	mov.f64 	%fd21, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd22, %fd20, %fd21, %fd1;
	mov.f64 	%fd23, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd24, %fd20, %fd23, %fd22;
	mov.f64 	%fd25, 0d3E928AF3FCA213EA;
	mov.f64 	%fd26, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F81111111122322;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	mov.f64 	%fd38, 0d3FA55555555502A1;
	fma.rn.f64 	%fd39, %fd37, %fd24, %fd38;
	mov.f64 	%fd40, 0d3FC5555555555511;
	fma.rn.f64 	%fd41, %fd39, %fd24, %fd40;
	mov.f64 	%fd42, 0d3FE000000000000B;
	fma.rn.f64 	%fd43, %fd41, %fd24, %fd42;
	mov.f64 	%fd44, 0d3FF0000000000000;
	fma.rn.f64 	%fd45, %fd43, %fd24, %fd44;
	fma.rn.f64 	%fd46, %fd45, %fd24, %fd44;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd46;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd46;
	}
	shl.b32 	%r31, %r2, 20;
	add.s32 	%r32, %r4, %r31;
	mov.b64 	%fd122, {%r3, %r32};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r33}, %fd1;
	}
	mov.b32 	%f2, %r33;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB17_6;

	setp.lt.f64 	%p5, %fd1, 0d0000000000000000;
	add.rn.f64 	%fd47, %fd1, 0d7FF0000000000000;
	selp.f64 	%fd122, 0d0000000000000000, %fd47, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB17_6;

	shr.u32 	%r34, %r2, 31;
	add.s32 	%r35, %r2, %r34;
	shr.s32 	%r36, %r35, 1;
	shl.b32 	%r37, %r36, 20;
	add.s32 	%r38, %r4, %r37;
	mov.b64 	%fd48, {%r3, %r38};
	sub.s32 	%r39, %r2, %r36;
	shl.b32 	%r40, %r39, 20;
	add.s32 	%r41, %r40, 1072693248;
	mov.u32 	%r42, 0;
	mov.b64 	%fd49, {%r42, %r41};
	mul.rn.f64 	%fd122, %fd48, %fd49;

$L__BB17_6:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r43}, %fd122;
	}
	mov.b32 	%f3, %r43;
	setp.lt.f32 	%p7, %f3, 0f3FE55555;
	setp.gt.f32 	%p8, %f3, 0fBFD99999;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB17_14;
	bra.uni 	$L__BB17_7;

$L__BB17_14:
	add.rn.f64 	%fd96, %fd122, 0d4000000000000000;
	div.rn.f64 	%fd97, %fd122, %fd96;
	mul.rn.f64 	%fd98, %fd122, %fd97;
	neg.f64 	%fd99, %fd98;
	sub.rn.f64 	%fd100, %fd122, %fd98;
	mul.rn.f64 	%fd101, %fd100, %fd100;
	mov.f64 	%fd102, 0d3ED087FFCEB2DC44;
	mov.f64 	%fd103, 0d3EB372FB2FBE14B5;
	fma.rn.f64 	%fd104, %fd103, %fd101, %fd102;
	mov.f64 	%fd105, 0d3EF3B9FF890F468C;
	fma.rn.f64 	%fd106, %fd104, %fd101, %fd105;
	mov.f64 	%fd107, 0d3F17457EFD51BAF8;
	fma.rn.f64 	%fd108, %fd106, %fd101, %fd107;
	mov.f64 	%fd109, 0d3F3C71C8DE3CE825;
	fma.rn.f64 	%fd110, %fd108, %fd101, %fd109;
	mov.f64 	%fd111, 0d3F6249248FA4661F;
	fma.rn.f64 	%fd112, %fd110, %fd101, %fd111;
	mov.f64 	%fd113, 0d3F899999999D70C4;
	fma.rn.f64 	%fd114, %fd112, %fd101, %fd113;
	mov.f64 	%fd115, 0d3FB5555555555462;
	fma.rn.f64 	%fd116, %fd114, %fd101, %fd115;
	mul.rn.f64 	%fd117, %fd101, %fd116;
	fma.rn.f64 	%fd118, %fd117, %fd100, %fd99;
	add.rn.f64 	%fd14, %fd122, %fd118;
	st.global.f64 	[%rd1], %fd14;
	bra.uni 	$L__BB17_16;

$L__BB17_7:
	add.rn.f64 	%fd123, %fd122, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r57}, %fd123;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r58, %temp}, %fd123;
	}
	setp.gt.s32 	%p10, %r57, 1048575;
	mov.u32 	%r59, -1023;
	@%p10 bra 	$L__BB17_9;

	mul.rn.f64 	%fd123, %fd123, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r57}, %fd123;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r58, %temp}, %fd123;
	}
	mov.u32 	%r59, -1077;

$L__BB17_9:
	add.s32 	%r46, %r57, -1;
	setp.lt.u32 	%p11, %r46, 2146435071;
	@%p11 bra 	$L__BB17_11;
	bra.uni 	$L__BB17_10;

$L__BB17_11:
	shr.u32 	%r48, %r57, 20;
	add.s32 	%r60, %r59, %r48;
	and.b32  	%r49, %r57, -2146435073;
	or.b32  	%r50, %r49, 1072693248;
	mov.b64 	%fd124, {%r58, %r50};
	setp.lt.s32 	%p13, %r50, 1073127583;
	@%p13 bra 	$L__BB17_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r51, %temp}, %fd124;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r52}, %fd124;
	}
	add.s32 	%r53, %r52, -1048576;
	mov.b64 	%fd124, {%r51, %r53};
	add.s32 	%r60, %r60, 1;

$L__BB17_13:
	add.rn.f64 	%fd52, %fd124, 0d3FF0000000000000;
	mov.f64 	%fd53, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd54, %fd52;
	neg.f64 	%fd55, %fd52;
	fma.rn.f64 	%fd56, %fd55, %fd54, %fd53;
	fma.rn.f64 	%fd57, %fd56, %fd56, %fd56;
	fma.rn.f64 	%fd58, %fd57, %fd54, %fd54;
	add.rn.f64 	%fd59, %fd124, 0dBFF0000000000000;
	mul.rn.f64 	%fd60, %fd59, %fd58;
	add.rn.f64 	%fd61, %fd60, %fd60;
	mul.rn.f64 	%fd62, %fd61, %fd61;
	mov.f64 	%fd63, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd64, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd65, %fd64, %fd62, %fd63;
	mov.f64 	%fd66, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd67, %fd65, %fd62, %fd66;
	mov.f64 	%fd68, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd69, %fd67, %fd62, %fd68;
	mov.f64 	%fd70, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd71, %fd69, %fd62, %fd70;
	mov.f64 	%fd72, 0d3F624924923BE72D;
	fma.rn.f64 	%fd73, %fd71, %fd62, %fd72;
	mov.f64 	%fd74, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd75, %fd73, %fd62, %fd74;
	mov.f64 	%fd76, 0d3FB5555555555554;
	fma.rn.f64 	%fd77, %fd75, %fd62, %fd76;
	sub.rn.f64 	%fd78, %fd59, %fd61;
	add.rn.f64 	%fd79, %fd78, %fd78;
	neg.f64 	%fd80, %fd61;
	fma.rn.f64 	%fd81, %fd80, %fd59, %fd79;
	mul.rn.f64 	%fd82, %fd58, %fd81;
	mul.rn.f64 	%fd83, %fd62, %fd77;
	fma.rn.f64 	%fd84, %fd83, %fd61, %fd82;
	xor.b32  	%r54, %r60, -2147483648;
	mov.u32 	%r55, -2147483648;
	mov.u32 	%r56, 1127219200;
	mov.b64 	%fd85, {%r54, %r56};
	mov.b64 	%fd86, {%r55, %r56};
	sub.rn.f64 	%fd87, %fd85, %fd86;
	mov.f64 	%fd88, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd89, %fd87, %fd88, %fd61;
	neg.f64 	%fd90, %fd87;
	fma.rn.f64 	%fd91, %fd90, %fd88, %fd89;
	sub.rn.f64 	%fd92, %fd91, %fd61;
	sub.rn.f64 	%fd93, %fd84, %fd92;
	mov.f64 	%fd94, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd95, %fd87, %fd94, %fd93;
	add.rn.f64 	%fd13, %fd89, %fd95;
	st.global.f64 	[%rd1], %fd13;
	bra.uni 	$L__BB17_16;

$L__BB17_10:
	mov.f64 	%fd50, 0d7FF0000000000000;
	fma.rn.f64 	%fd51, %fd123, %fd50, %fd50;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd123;
	}
	mov.b32 	%f4, %r47;
	setp.eq.f32 	%p12, %f4, 0f00000000;
	selp.f64 	%fd9, 0dFFF0000000000000, %fd51, %p12;
	st.global.f64 	[%rd1], %fd9;

$L__BB17_16:
	ret;

}
	// .globl	sigmoid_f64
.visible .entry sigmoid_f64(
	.param .u64 sigmoid_f64_param_0,
	.param .u32 sigmoid_f64_param_1
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<33>;
	.reg .f64 	%fd<45>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [sigmoid_f64_param_0];
	ld.param.u32 	%r5, [sigmoid_f64_param_1];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ctaid.z;
	mov.u32 	%r8, %nctaid.y;
	mov.u32 	%r9, %ctaid.y;
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	mov.u32 	%r11, %nctaid.x;
	mad.lo.s32 	%r12, %r10, %r11, %r6;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %tid.z;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r18, %r15, %r16, %r17;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r18, %r19, %r20;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB18_9;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd1];
	setp.lt.f64 	%p2, %fd1, 0dC086280000000000;
	@%p2 bra 	$L__BB18_8;
	bra.uni 	$L__BB18_2;

$L__BB18_8:
	mov.u64 	%rd6, 0;
	st.global.u64 	[%rd1], %rd6;
	bra.uni 	$L__BB18_9;

$L__BB18_2:
	setp.gt.f64 	%p3, %fd1, 0d4033000000000000;
	@%p3 bra 	$L__BB18_7;
	bra.uni 	$L__BB18_3;

$L__BB18_7:
	mov.u64 	%rd5, 4607182418800017408;
	st.global.u64 	[%rd1], %rd5;
	bra.uni 	$L__BB18_9;

$L__BB18_3:
	neg.f64 	%fd6, %fd1;
	mov.f64 	%fd7, 0d4338000000000000;
	mov.f64 	%fd8, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd9, %fd6, %fd8, %fd7;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd9;
	}
	mov.f64 	%fd10, 0dC338000000000000;
	add.rn.f64 	%fd11, %fd9, %fd10;
	mov.f64 	%fd12, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd13, %fd11, %fd12, %fd6;
	mov.f64 	%fd14, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd15, %fd11, %fd14, %fd13;
	mov.f64 	%fd16, 0d3E928AF3FCA213EA;
	mov.f64 	%fd17, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd18, %fd17, %fd15, %fd16;
	mov.f64 	%fd19, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd20, %fd18, %fd15, %fd19;
	mov.f64 	%fd21, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd22, %fd20, %fd15, %fd21;
	mov.f64 	%fd23, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd24, %fd22, %fd15, %fd23;
	mov.f64 	%fd25, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd26, %fd24, %fd15, %fd25;
	mov.f64 	%fd27, 0d3F81111111122322;
	fma.rn.f64 	%fd28, %fd26, %fd15, %fd27;
	mov.f64 	%fd29, 0d3FA55555555502A1;
	fma.rn.f64 	%fd30, %fd28, %fd15, %fd29;
	mov.f64 	%fd31, 0d3FC5555555555511;
	fma.rn.f64 	%fd32, %fd30, %fd15, %fd31;
	mov.f64 	%fd33, 0d3FE000000000000B;
	fma.rn.f64 	%fd34, %fd32, %fd15, %fd33;
	mov.f64 	%fd35, 0d3FF0000000000000;
	fma.rn.f64 	%fd36, %fd34, %fd15, %fd35;
	fma.rn.f64 	%fd37, %fd36, %fd15, %fd35;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd37;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd37;
	}
	shl.b32 	%r21, %r2, 20;
	add.s32 	%r22, %r4, %r21;
	mov.b64 	%fd44, {%r3, %r22};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd6;
	}
	mov.b32 	%f2, %r23;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB18_6;

	setp.gt.f64 	%p5, %fd1, 0d8000000000000000;
	mov.f64 	%fd38, 0d7FF0000000000000;
	sub.rn.f64 	%fd39, %fd38, %fd1;
	selp.f64 	%fd44, 0d0000000000000000, %fd39, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB18_6;

	shr.u32 	%r24, %r2, 31;
	add.s32 	%r25, %r2, %r24;
	shr.s32 	%r26, %r25, 1;
	shl.b32 	%r27, %r26, 20;
	add.s32 	%r28, %r4, %r27;
	mov.b64 	%fd40, {%r3, %r28};
	sub.s32 	%r29, %r2, %r26;
	shl.b32 	%r30, %r29, 20;
	add.s32 	%r31, %r30, 1072693248;
	mov.u32 	%r32, 0;
	mov.b64 	%fd41, {%r32, %r31};
	mul.rn.f64 	%fd44, %fd40, %fd41;

$L__BB18_6:
	add.rn.f64 	%fd42, %fd44, 0d3FF0000000000000;
	rcp.rn.f64 	%fd43, %fd42;
	st.global.f64 	[%rd1], %fd43;

$L__BB18_9:
	ret;

}
	// .globl	cos_f32
.visible .entry cos_f32(
	.param .u64 cos_f32_param_0,
	.param .u32 cos_f32_param_1
)
{
	.local .align 4 .b8 	__local_depot19[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .f32 	%f<38>;
	.reg .b32 	%r<71>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<26>;


	mov.u64 	%SPL, __local_depot19;
	ld.param.u64 	%rd9, [cos_f32_param_0];
	ld.param.u32 	%r21, [cos_f32_param_1];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r22, %ctaid.z;
	mov.u32 	%r23, %nctaid.y;
	mov.u32 	%r24, %ctaid.y;
	mad.lo.s32 	%r25, %r22, %r23, %r24;
	mov.u32 	%r26, %nctaid.x;
	mov.u32 	%r27, %ctaid.x;
	mad.lo.s32 	%r28, %r25, %r26, %r27;
	mov.u32 	%r29, %ntid.z;
	mov.u32 	%r30, %tid.z;
	mad.lo.s32 	%r31, %r28, %r29, %r30;
	mov.u32 	%r32, %ntid.y;
	mov.u32 	%r33, %tid.y;
	mad.lo.s32 	%r34, %r31, %r32, %r33;
	mov.u32 	%r35, %ntid.x;
	mov.u32 	%r36, %tid.x;
	mad.lo.s32 	%r1, %r34, %r35, %r36;
	setp.ge.s32 	%p1, %r1, %r21;
	@%p1 bra 	$L__BB19_14;

	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	ld.global.f32 	%f1, [%rd2];
	mul.rn.f32 	%f14, %f1, 0f3F22F983;
	cvt.rni.s32.f32 	%r70, %f14;
	cvt.rn.f32.s32 	%f15, %r70;
	mov.f32 	%f16, 0fBFC90FDA;
	fma.rn.f32 	%f17, %f15, %f16, %f1;
	mov.f32 	%f18, 0fB3A22168;
	fma.rn.f32 	%f19, %f15, %f18, %f17;
	mov.f32 	%f20, 0fA7C234C5;
	fma.rn.f32 	%f35, %f15, %f20, %f19;
	abs.f32 	%f3, %f1;
	setp.ltu.f32 	%p2, %f3, 0f47CE4780;
	@%p2 bra 	$L__BB19_9;

	setp.eq.f32 	%p3, %f3, 0f7F800000;
	@%p3 bra 	$L__BB19_8;
	bra.uni 	$L__BB19_3;

$L__BB19_8:
	mov.f32 	%f23, 0f00000000;
	mul.rn.f32 	%f35, %f1, %f23;
	mov.u32 	%r70, 0;
	bra.uni 	$L__BB19_9;

$L__BB19_3:
	mov.b32 	%r3, %f1;
	bfe.u32 	%r38, %r3, 23, 8;
	add.s32 	%r4, %r38, -128;
	shl.b32 	%r39, %r3, 8;
	or.b32  	%r5, %r39, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd25, 0;
	mov.u32 	%r67, 0;
	mov.u64 	%rd23, __cudart_i2opi_f;
	mov.u64 	%rd24, %rd1;

$L__BB19_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r40, [%rd23];
	mad.wide.u32 	%rd15, %r40, %r5, %rd25;
	shr.u64 	%rd25, %rd15, 32;
	st.local.u32 	[%rd24], %rd15;
	add.s64 	%rd24, %rd24, 4;
	add.s64 	%rd23, %rd23, 4;
	add.s32 	%r67, %r67, 1;
	setp.ne.s32 	%p4, %r67, 6;
	@%p4 bra 	$L__BB19_4;

	st.local.u32 	[%rd1+24], %rd25;
	mov.u32 	%r41, 4;
	sub.s32 	%r9, %r41, %r6;
	mov.u32 	%r42, 6;
	sub.s32 	%r43, %r42, %r6;
	mul.wide.s32 	%rd16, %r43, 4;
	add.s64 	%rd17, %rd1, %rd16;
	ld.local.u32 	%r68, [%rd17];
	ld.local.u32 	%r69, [%rd17+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB19_7;

	mov.u32 	%r44, 32;
	sub.s32 	%r45, %r44, %r12;
	shr.u32 	%r46, %r69, %r45;
	shl.b32 	%r47, %r68, %r12;
	add.s32 	%r68, %r46, %r47;
	mul.wide.s32 	%rd18, %r9, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.local.u32 	%r48, [%rd19];
	shr.u32 	%r49, %r48, %r45;
	shl.b32 	%r50, %r69, %r12;
	add.s32 	%r69, %r49, %r50;

$L__BB19_7:
	and.b32  	%r51, %r3, -2147483648;
	shr.u32 	%r52, %r69, 30;
	shl.b32 	%r53, %r68, 2;
	or.b32  	%r54, %r52, %r53;
	shr.u32 	%r55, %r54, 31;
	shr.u32 	%r56, %r68, 30;
	add.s32 	%r57, %r55, %r56;
	neg.s32 	%r58, %r57;
	setp.eq.s32 	%p6, %r51, 0;
	selp.b32 	%r70, %r57, %r58, %p6;
	setp.ne.s32 	%p7, %r55, 0;
	xor.b32  	%r59, %r51, -2147483648;
	selp.b32 	%r60, %r59, %r51, %p7;
	selp.b32 	%r61, -1, 0, %p7;
	xor.b32  	%r62, %r54, %r61;
	shl.b32 	%r63, %r69, 2;
	xor.b32  	%r64, %r63, %r61;
	cvt.u64.u32 	%rd20, %r62;
	cvt.u64.u32 	%rd21, %r64;
	bfi.b64 	%rd22, %rd20, %rd21, 32, 32;
	cvt.rn.f64.s64 	%fd1, %rd22;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f21, %fd2;
	setp.eq.s32 	%p8, %r60, 0;
	neg.f32 	%f22, %f21;
	selp.f32 	%f35, %f21, %f22, %p8;

$L__BB19_9:
	add.s32 	%r19, %r70, 1;
	and.b32  	%r20, %r19, 1;
	setp.eq.s32 	%p9, %r20, 0;
	selp.f32 	%f7, %f35, 0f3F800000, %p9;
	mul.rn.f32 	%f8, %f35, %f35;
	mov.f32 	%f36, 0fB94D4153;
	@%p9 bra 	$L__BB19_11;

	mov.f32 	%f25, 0fBAB607ED;
	mov.f32 	%f26, 0f37CBAC00;
	fma.rn.f32 	%f36, %f26, %f8, %f25;

$L__BB19_11:
	selp.f32 	%f27, 0f3C0885E4, 0f3D2AAABB, %p9;
	fma.rn.f32 	%f28, %f36, %f8, %f27;
	selp.f32 	%f29, 0fBE2AAAA8, 0fBEFFFFFF, %p9;
	fma.rn.f32 	%f30, %f28, %f8, %f29;
	mov.f32 	%f31, 0f00000000;
	fma.rn.f32 	%f32, %f8, %f7, %f31;
	fma.rn.f32 	%f37, %f30, %f32, %f7;
	and.b32  	%r66, %r19, 2;
	setp.eq.s32 	%p11, %r66, 0;
	@%p11 bra 	$L__BB19_13;

	mov.f32 	%f34, 0fBF800000;
	fma.rn.f32 	%f37, %f37, %f34, %f31;

$L__BB19_13:
	st.global.f32 	[%rd2], %f37;

$L__BB19_14:
	ret;

}
	// .globl	sin_f32
.visible .entry sin_f32(
	.param .u64 sin_f32_param_0,
	.param .u32 sin_f32_param_1
)
{
	.local .align 4 .b8 	__local_depot20[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .f32 	%f<38>;
	.reg .b32 	%r<70>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<26>;


	mov.u64 	%SPL, __local_depot20;
	ld.param.u64 	%rd9, [sin_f32_param_0];
	ld.param.u32 	%r20, [sin_f32_param_1];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r21, %ctaid.z;
	mov.u32 	%r22, %nctaid.y;
	mov.u32 	%r23, %ctaid.y;
	mad.lo.s32 	%r24, %r21, %r22, %r23;
	mov.u32 	%r25, %nctaid.x;
	mov.u32 	%r26, %ctaid.x;
	mad.lo.s32 	%r27, %r24, %r25, %r26;
	mov.u32 	%r28, %ntid.z;
	mov.u32 	%r29, %tid.z;
	mad.lo.s32 	%r30, %r27, %r28, %r29;
	mov.u32 	%r31, %ntid.y;
	mov.u32 	%r32, %tid.y;
	mad.lo.s32 	%r33, %r30, %r31, %r32;
	mov.u32 	%r34, %ntid.x;
	mov.u32 	%r35, %tid.x;
	mad.lo.s32 	%r1, %r33, %r34, %r35;
	setp.ge.s32 	%p1, %r1, %r20;
	@%p1 bra 	$L__BB20_14;

	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	ld.global.f32 	%f1, [%rd2];
	mul.rn.f32 	%f14, %f1, 0f3F22F983;
	cvt.rni.s32.f32 	%r69, %f14;
	cvt.rn.f32.s32 	%f15, %r69;
	mov.f32 	%f16, 0fBFC90FDA;
	fma.rn.f32 	%f17, %f15, %f16, %f1;
	mov.f32 	%f18, 0fB3A22168;
	fma.rn.f32 	%f19, %f15, %f18, %f17;
	mov.f32 	%f20, 0fA7C234C5;
	fma.rn.f32 	%f35, %f15, %f20, %f19;
	abs.f32 	%f3, %f1;
	setp.ltu.f32 	%p2, %f3, 0f47CE4780;
	@%p2 bra 	$L__BB20_9;

	setp.eq.f32 	%p3, %f3, 0f7F800000;
	@%p3 bra 	$L__BB20_8;
	bra.uni 	$L__BB20_3;

$L__BB20_8:
	mov.f32 	%f23, 0f00000000;
	mul.rn.f32 	%f35, %f1, %f23;
	mov.u32 	%r69, 0;
	bra.uni 	$L__BB20_9;

$L__BB20_3:
	mov.b32 	%r3, %f1;
	bfe.u32 	%r37, %r3, 23, 8;
	add.s32 	%r4, %r37, -128;
	shl.b32 	%r38, %r3, 8;
	or.b32  	%r5, %r38, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd25, 0;
	mov.u32 	%r66, 0;
	mov.u64 	%rd23, __cudart_i2opi_f;
	mov.u64 	%rd24, %rd1;

$L__BB20_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r39, [%rd23];
	mad.wide.u32 	%rd15, %r39, %r5, %rd25;
	shr.u64 	%rd25, %rd15, 32;
	st.local.u32 	[%rd24], %rd15;
	add.s64 	%rd24, %rd24, 4;
	add.s64 	%rd23, %rd23, 4;
	add.s32 	%r66, %r66, 1;
	setp.ne.s32 	%p4, %r66, 6;
	@%p4 bra 	$L__BB20_4;

	st.local.u32 	[%rd1+24], %rd25;
	mov.u32 	%r40, 4;
	sub.s32 	%r9, %r40, %r6;
	mov.u32 	%r41, 6;
	sub.s32 	%r42, %r41, %r6;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd1, %rd16;
	ld.local.u32 	%r67, [%rd17];
	ld.local.u32 	%r68, [%rd17+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB20_7;

	mov.u32 	%r43, 32;
	sub.s32 	%r44, %r43, %r12;
	shr.u32 	%r45, %r68, %r44;
	shl.b32 	%r46, %r67, %r12;
	add.s32 	%r67, %r45, %r46;
	mul.wide.s32 	%rd18, %r9, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.local.u32 	%r47, [%rd19];
	shr.u32 	%r48, %r47, %r44;
	shl.b32 	%r49, %r68, %r12;
	add.s32 	%r68, %r48, %r49;

$L__BB20_7:
	and.b32  	%r50, %r3, -2147483648;
	shr.u32 	%r51, %r68, 30;
	shl.b32 	%r52, %r67, 2;
	or.b32  	%r53, %r51, %r52;
	shr.u32 	%r54, %r53, 31;
	shr.u32 	%r55, %r67, 30;
	add.s32 	%r56, %r54, %r55;
	neg.s32 	%r57, %r56;
	setp.eq.s32 	%p6, %r50, 0;
	selp.b32 	%r69, %r56, %r57, %p6;
	setp.ne.s32 	%p7, %r54, 0;
	xor.b32  	%r58, %r50, -2147483648;
	selp.b32 	%r59, %r58, %r50, %p7;
	selp.b32 	%r60, -1, 0, %p7;
	xor.b32  	%r61, %r53, %r60;
	shl.b32 	%r62, %r68, 2;
	xor.b32  	%r63, %r62, %r60;
	cvt.u64.u32 	%rd20, %r61;
	cvt.u64.u32 	%rd21, %r63;
	bfi.b64 	%rd22, %rd20, %rd21, 32, 32;
	cvt.rn.f64.s64 	%fd1, %rd22;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f21, %fd2;
	setp.eq.s32 	%p8, %r59, 0;
	neg.f32 	%f22, %f21;
	selp.f32 	%f35, %f21, %f22, %p8;

$L__BB20_9:
	and.b32  	%r19, %r69, 1;
	setp.eq.s32 	%p9, %r19, 0;
	selp.f32 	%f7, %f35, 0f3F800000, %p9;
	mul.rn.f32 	%f8, %f35, %f35;
	mov.f32 	%f36, 0fB94D4153;
	@%p9 bra 	$L__BB20_11;

	mov.f32 	%f25, 0fBAB607ED;
	mov.f32 	%f26, 0f37CBAC00;
	fma.rn.f32 	%f36, %f26, %f8, %f25;

$L__BB20_11:
	selp.f32 	%f27, 0f3C0885E4, 0f3D2AAABB, %p9;
	fma.rn.f32 	%f28, %f36, %f8, %f27;
	selp.f32 	%f29, 0fBE2AAAA8, 0fBEFFFFFF, %p9;
	fma.rn.f32 	%f30, %f28, %f8, %f29;
	mov.f32 	%f31, 0f00000000;
	fma.rn.f32 	%f32, %f8, %f7, %f31;
	fma.rn.f32 	%f37, %f30, %f32, %f7;
	and.b32  	%r65, %r69, 2;
	setp.eq.s32 	%p11, %r65, 0;
	@%p11 bra 	$L__BB20_13;

	mov.f32 	%f34, 0fBF800000;
	fma.rn.f32 	%f37, %f37, %f34, %f31;

$L__BB20_13:
	st.global.f32 	[%rd2], %f37;

$L__BB20_14:
	ret;

}
	// .globl	exp_f32
.visible .entry exp_f32(
	.param .u64 exp_f32_param_0,
	.param .u32 exp_f32_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [exp_f32_param_0];
	ld.param.u32 	%r2, [exp_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB21_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.rn.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r18, %f9;
	shl.b32 	%r19, %r18, 23;
	mov.b32 	%f15, %r19;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.rn.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd4], %f17;

$L__BB21_2:
	ret;

}
	// .globl	ln_f32
.visible .entry ln_f32(
	.param .u64 ln_f32_param_0,
	.param .u32 ln_f32_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [ln_f32_param_0];
	ld.param.u32 	%r2, [ln_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB22_4;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f32 	%f5, [%rd1];
	setp.lt.f32 	%p2, %f5, 0f00800000;
	mul.rn.f32 	%f6, %f5, 0f4B000000;
	selp.f32 	%f1, %f6, %f5, %p2;
	selp.f32 	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	%r18, %f1;
	add.s32 	%r19, %r18, -1059760811;
	and.b32  	%r20, %r19, -8388608;
	sub.s32 	%r21, %r18, %r20;
	mov.b32 	%f8, %r21;
	cvt.rn.f32.s32 	%f9, %r20;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.rn.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0f3E1039F6;
	mov.f32 	%f14, 0fBE055027;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0fBDF8CDCC;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0f3E0F2955;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0fBE2AD8B9;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0f3E4CED0B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0fBE7FFF22;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0f3EAAAA78;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0fBF000000;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mul.rn.f32 	%f30, %f12, %f29;
	fma.rn.f32 	%f31, %f30, %f12, %f12;
	mov.f32 	%f32, 0f3F317218;
	fma.rn.f32 	%f35, %f11, %f32, %f31;
	setp.lt.u32 	%p3, %r18, 2139095040;
	@%p3 bra 	$L__BB22_3;

	mov.f32 	%f33, 0f7F800000;
	fma.rn.f32 	%f35, %f1, %f33, %f33;

$L__BB22_3:
	setp.eq.f32 	%p4, %f1, 0f00000000;
	selp.f32 	%f34, 0fFF800000, %f35, %p4;
	st.global.f32 	[%rd1], %f34;

$L__BB22_4:
	ret;

}
	// .globl	log2_f32
.visible .entry log2_f32(
	.param .u64 log2_f32_param_0,
	.param .u32 log2_f32_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<39>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [log2_f32_param_0];
	ld.param.u32 	%r2, [log2_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB23_4;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f32 	%f5, [%rd1];
	setp.lt.f32 	%p2, %f5, 0f00800000;
	mul.rn.f32 	%f6, %f5, 0f4B000000;
	selp.f32 	%f1, %f6, %f5, %p2;
	selp.f32 	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	%r18, %f1;
	add.s32 	%r19, %r18, -1060439283;
	and.b32  	%r20, %r19, -8388608;
	sub.s32 	%r21, %r18, %r20;
	mov.b32 	%f8, %r21;
	cvt.rn.f32.s32 	%f9, %r20;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.rn.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0fBE2C7F30;
	mov.f32 	%f14, 0f3DC6B27F;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0f3E2FCF2A;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0fBE374E43;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0f3E520BF4;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0fBE763C8B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0f3E93BF99;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0fBEB8AA49;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0f3EF6384A;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mov.f32 	%f30, 0fBF38AA3B;
	fma.rn.f32 	%f31, %f29, %f12, %f30;
	mul.rn.f32 	%f32, %f12, %f31;
	mul.rn.f32 	%f33, %f12, %f32;
	mov.f32 	%f34, 0f3FB8AA3B;
	fma.rn.f32 	%f35, %f12, %f34, %f33;
	add.rn.f32 	%f38, %f11, %f35;
	setp.lt.u32 	%p3, %r18, 2139095040;
	@%p3 bra 	$L__BB23_3;

	mov.f32 	%f36, 0f7F800000;
	fma.rn.f32 	%f38, %f1, %f36, %f36;

$L__BB23_3:
	setp.eq.f32 	%p4, %f1, 0f00000000;
	selp.f32 	%f37, 0fFF800000, %f38, %p4;
	st.global.f32 	[%rd1], %f37;

$L__BB23_4:
	ret;

}
	// .globl	sqrt_f32
.visible .entry sqrt_f32(
	.param .u64 sqrt_f32_param_0,
	.param .u32 sqrt_f32_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [sqrt_f32_param_0];
	ld.param.u32 	%r2, [sqrt_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB24_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	sqrt.rn.f32 	%f2, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB24_2:
	ret;

}
	// .globl	tanh_f32
.visible .entry tanh_f32(
	.param .u64 tanh_f32_param_0,
	.param .u32 tanh_f32_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [tanh_f32_param_0];
	ld.param.u32 	%r2, [tanh_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB25_5;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd1];
	abs.f32 	%f2, %f1;
	setp.ltu.f32 	%p2, %f2, 0f3F19999A;
	@%p2 bra 	$L__BB25_3;
	bra.uni 	$L__BB25_2;

$L__BB25_3:
	mul.rn.f32 	%f14, %f1, %f1;
	mov.f32 	%f15, 0fBD563CAE;
	mov.f32 	%f16, 0f3C80F082;
	fma.rn.f32 	%f17, %f16, %f14, %f15;
	mov.f32 	%f18, 0f3E085941;
	fma.rn.f32 	%f19, %f17, %f14, %f18;
	mov.f32 	%f20, 0fBEAAA9ED;
	fma.rn.f32 	%f21, %f19, %f14, %f20;
	mov.f32 	%f22, 0f00000000;
	fma.rn.f32 	%f23, %f21, %f14, %f22;
	fma.rn.f32 	%f24, %f23, %f1, %f1;
	bra.uni 	$L__BB25_4;

$L__BB25_2:
	mul.rn.f32 	%f6, %f2, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f7, %f6;
	add.rn.f32 	%f8, %f7, 0f3F800000;
	mov.f32 	%f9, 0f3F800000;
	rcp.approx.ftz.f32 	%f10, %f8;
	mov.f32 	%f11, 0fC0000000;
	fma.rn.f32 	%f12, %f10, %f11, %f9;
	setp.ge.f32 	%p3, %f2, 0f41102CB4;
	selp.f32 	%f13, 0f3F800000, %f12, %p3;
	mov.b32 	%r18, %f13;
	mov.b32 	%r19, %f1;
	and.b32  	%r20, %r19, -2147483648;
	or.b32  	%r21, %r20, %r18;
	mov.b32 	%f24, %r21;

$L__BB25_4:
	st.global.f32 	[%rd1], %f24;

$L__BB25_5:
	ret;

}
	// .globl	log1p_f32
.visible .entry log1p_f32(
	.param .u64 log1p_f32_param_0,
	.param .u32 log1p_f32_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [log1p_f32_param_0];
	ld.param.u32 	%r3, [log1p_f32_param_1];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %nctaid.y;
	mov.u32 	%r7, %ctaid.y;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %nctaid.x;
	mad.lo.s32 	%r10, %r8, %r9, %r4;
	mov.u32 	%r11, %ntid.z;
	mov.u32 	%r12, %tid.z;
	mad.lo.s32 	%r13, %r10, %r11, %r12;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %tid.y;
	mad.lo.s32 	%r16, %r13, %r14, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB26_6;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd1];
	mov.f32 	%f7, 0f3F800000;
	add.rz.f32 	%f8, %f1, %f7;
	mov.b32 	%r19, %f8;
	add.s32 	%r20, %r19, -1061158912;
	and.b32  	%r21, %r20, -8388608;
	mov.b32 	%r2, %f1;
	sub.s32 	%r22, %r2, %r21;
	mov.b32 	%f9, %r22;
	mov.u32 	%r23, 1082130432;
	sub.s32 	%r24, %r23, %r21;
	mov.b32 	%f10, %r24;
	mov.f32 	%f11, 0fBF800000;
	mov.f32 	%f12, 0f3E800000;
	fma.rn.f32 	%f13, %f12, %f10, %f11;
	add.rn.f32 	%f14, %f13, %f9;
	cvt.rn.f32.s32 	%f15, %r21;
	mul.rn.f32 	%f16, %f15, 0f34000000;
	mov.f32 	%f17, 0f3DD80012;
	mov.f32 	%f18, 0fBD39BF78;
	fma.rn.f32 	%f19, %f18, %f14, %f17;
	mov.f32 	%f20, 0fBE0778E0;
	fma.rn.f32 	%f21, %f19, %f14, %f20;
	mov.f32 	%f22, 0f3E146475;
	fma.rn.f32 	%f23, %f21, %f14, %f22;
	mov.f32 	%f24, 0fBE2A68DD;
	fma.rn.f32 	%f25, %f23, %f14, %f24;
	mov.f32 	%f26, 0f3E4CAF9E;
	fma.rn.f32 	%f27, %f25, %f14, %f26;
	mov.f32 	%f28, 0fBE800042;
	fma.rn.f32 	%f29, %f27, %f14, %f28;
	mov.f32 	%f30, 0f3EAAAAE6;
	fma.rn.f32 	%f31, %f29, %f14, %f30;
	mov.f32 	%f32, 0fBF000000;
	fma.rn.f32 	%f33, %f31, %f14, %f32;
	mul.rn.f32 	%f34, %f14, %f33;
	fma.rn.f32 	%f35, %f34, %f14, %f14;
	mov.f32 	%f36, 0f3F317218;
	fma.rn.f32 	%f38, %f16, %f36, %f35;
	setp.lt.u32 	%p2, %r2, 2139095040;
	@%p2 bra 	$L__BB26_5;

	setp.lt.s32 	%p3, %r2, -1082130431;
	@%p3 bra 	$L__BB26_4;

	mov.f32 	%f37, 0f7F800000;
	fma.rn.f32 	%f38, %f1, %f37, %f37;

$L__BB26_4:
	setp.eq.f32 	%p4, %f1, 0f00000000;
	selp.f32 	%f38, 0f80000000, %f38, %p4;

$L__BB26_5:
	st.global.f32 	[%rd1], %f38;

$L__BB26_6:
	ret;

}
	// .globl	expm1_f32
.visible .entry expm1_f32(
	.param .u64 expm1_f32_param_0,
	.param .u32 expm1_f32_param_1
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [expm1_f32_param_0];
	ld.param.u32 	%r2, [expm1_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB27_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mul.rn.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f3, %f2;
	abs.f32 	%f4, %f1;
	setp.lt.f32 	%p2, %f4, 0f3ED1EB85;
	selp.f32 	%f5, 0f00000000, %f3, %p2;
	neg.f32 	%f6, %f5;
	mov.f32 	%f7, 0f3F317200;
	fma.rn.f32 	%f8, %f6, %f7, %f1;
	mov.f32 	%f9, 0f35BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	setp.eq.f32 	%p3, %f5, 0f43000000;
	add.rn.f32 	%f11, %f5, 0fBF800000;
	selp.f32 	%f12, %f11, %f5, %p3;
	mov.f32 	%f13, 0f3C095663;
	mov.f32 	%f14, 0f3AB5EBE6;
	fma.rn.f32 	%f15, %f14, %f10, %f13;
	mov.f32 	%f16, 0f3D2AABE3;
	fma.rn.f32 	%f17, %f15, %f10, %f16;
	mov.f32 	%f18, 0f3E2AA9F6;
	fma.rn.f32 	%f19, %f17, %f10, %f18;
	mov.f32 	%f20, 0f3EFFFFFE;
	fma.rn.f32 	%f21, %f19, %f10, %f20;
	mul.rn.f32 	%f22, %f10, %f21;
	fma.rn.f32 	%f23, %f22, %f10, %f10;
	ex2.approx.f32 	%f24, %f12;
	add.rn.f32 	%f25, %f24, 0fBF800000;
	fma.rn.f32 	%f26, %f23, %f24, %f25;
	add.rn.f32 	%f27, %f26, %f26;
	selp.f32 	%f28, %f27, %f26, %p3;
	setp.gt.f32 	%p4, %f12, 0f43000000;
	selp.f32 	%f29, 0f7F800000, %f28, %p4;
	setp.lt.f32 	%p5, %f12, 0fC1C80000;
	selp.f32 	%f30, 0fBF800000, %f29, %p5;
	setp.eq.f32 	%p6, %f1, 0f00000000;
	add.rn.f32 	%f31, %f1, %f1;
	selp.f32 	%f32, %f31, %f30, %p6;
	st.global.f32 	[%rd4], %f32;

$L__BB27_2:
	ret;

}
	// .globl	abs_f32
.visible .entry abs_f32(
	.param .u64 abs_f32_param_0,
	.param .u32 abs_f32_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [abs_f32_param_0];
	ld.param.u32 	%r2, [abs_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB28_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	abs.f32 	%f2, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB28_2:
	ret;

}
	// .globl	ceil_f32
.visible .entry ceil_f32(
	.param .u64 ceil_f32_param_0,
	.param .u32 ceil_f32_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [ceil_f32_param_0];
	ld.param.u32 	%r2, [ceil_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB29_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	cvt.rpi.f32.f32 	%f2, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB29_2:
	ret;

}
	// .globl	floor_f32
.visible .entry floor_f32(
	.param .u64 floor_f32_param_0,
	.param .u32 floor_f32_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [floor_f32_param_0];
	ld.param.u32 	%r2, [floor_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB30_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	cvt.rmi.f32.f32 	%f2, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB30_2:
	ret;

}
	// .globl	sign_f32
.visible .entry sign_f32(
	.param .u64 sign_f32_param_0,
	.param .u32 sign_f32_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [sign_f32_param_0];
	ld.param.u32 	%r2, [sign_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB31_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	setp.gt.f32 	%p2, %f1, 0f00000000;
	selp.u32 	%r18, 1, 0, %p2;
	setp.lt.f32 	%p3, %f1, 0f00000000;
	selp.u32 	%r19, 1, 0, %p3;
	sub.s32 	%r20, %r18, %r19;
	cvt.rn.f32.s32 	%f2, %r20;
	st.global.f32 	[%rd4], %f2;

$L__BB31_2:
	ret;

}
	// .globl	square_f32
.visible .entry square_f32(
	.param .u64 square_f32_param_0,
	.param .u32 square_f32_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [square_f32_param_0];
	ld.param.u32 	%r2, [square_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB32_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mul.rn.f32 	%f2, %f1, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB32_2:
	ret;

}
	// .globl	cube_f32
.visible .entry cube_f32(
	.param .u64 cube_f32_param_0,
	.param .u32 cube_f32_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [cube_f32_param_0];
	ld.param.u32 	%r2, [cube_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB33_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mul.rn.f32 	%f2, %f1, %f1;
	mul.rn.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd4], %f3;

$L__BB33_2:
	ret;

}
	// .globl	neg_f32
.visible .entry neg_f32(
	.param .u64 neg_f32_param_0,
	.param .u32 neg_f32_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [neg_f32_param_0];
	ld.param.u32 	%r2, [neg_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB34_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	neg.f32 	%f2, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB34_2:
	ret;

}
	// .globl	inverse_f32
.visible .entry inverse_f32(
	.param .u64 inverse_f32_param_0,
	.param .u32 inverse_f32_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [inverse_f32_param_0];
	ld.param.u32 	%r2, [inverse_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB35_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	rcp.rn.f32 	%f2, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB35_2:
	ret;

}
	// .globl	softplus_f32
.visible .entry softplus_f32(
	.param .u64 softplus_f32_param_0,
	.param .u32 softplus_f32_param_1
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<56>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [softplus_f32_param_0];
	ld.param.u32 	%r3, [softplus_f32_param_1];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %nctaid.y;
	mov.u32 	%r7, %ctaid.y;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %nctaid.x;
	mad.lo.s32 	%r10, %r8, %r9, %r4;
	mov.u32 	%r11, %ntid.z;
	mov.u32 	%r12, %tid.z;
	mad.lo.s32 	%r13, %r10, %r11, %r12;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %tid.y;
	mad.lo.s32 	%r16, %r13, %r14, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB36_9;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd1];
	setp.lt.f32 	%p2, %f1, 0fC2CE0000;
	@%p2 bra 	$L__BB36_8;
	bra.uni 	$L__BB36_2;

$L__BB36_8:
	mov.u32 	%r27, 0;
	st.global.u32 	[%rd1], %r27;
	bra.uni 	$L__BB36_9;

$L__BB36_2:
	setp.gt.f32 	%p3, %f1, 0f41600000;
	@%p3 bra 	$L__BB36_9;

	mov.f32 	%f8, 0f3F000000;
	mov.f32 	%f9, 0f3BBB989D;
	fma.rn.f32 	%f10, %f1, %f9, %f8;
	mov.f32 	%f11, 0f3FB8AA3B;
	mov.f32 	%f12, 0f437C0000;
	cvt.sat.f32.f32 	%f13, %f10;
	mov.f32 	%f14, 0f4B400001;
	fma.rm.f32 	%f15, %f13, %f12, %f14;
	add.rn.f32 	%f16, %f15, 0fCB40007F;
	neg.f32 	%f17, %f16;
	fma.rn.f32 	%f18, %f1, %f11, %f17;
	mov.f32 	%f19, 0f32A57060;
	fma.rn.f32 	%f20, %f1, %f19, %f18;
	mov.b32 	%r19, %f15;
	shl.b32 	%r20, %r19, 23;
	mov.b32 	%f21, %r20;
	ex2.approx.ftz.f32 	%f22, %f20;
	mul.rn.f32 	%f2, %f22, %f21;
	mov.f32 	%f23, 0f3F800000;
	add.rz.f32 	%f24, %f2, %f23;
	mov.b32 	%r21, %f24;
	add.s32 	%r22, %r21, -1061158912;
	and.b32  	%r23, %r22, -8388608;
	mov.b32 	%r2, %f2;
	sub.s32 	%r24, %r2, %r23;
	mov.b32 	%f25, %r24;
	mov.u32 	%r25, 1082130432;
	sub.s32 	%r26, %r25, %r23;
	mov.b32 	%f26, %r26;
	mov.f32 	%f27, 0fBF800000;
	mov.f32 	%f28, 0f3E800000;
	fma.rn.f32 	%f29, %f28, %f26, %f27;
	add.rn.f32 	%f30, %f29, %f25;
	cvt.rn.f32.s32 	%f31, %r23;
	mul.rn.f32 	%f32, %f31, 0f34000000;
	mov.f32 	%f33, 0f3DD80012;
	mov.f32 	%f34, 0fBD39BF78;
	fma.rn.f32 	%f35, %f34, %f30, %f33;
	mov.f32 	%f36, 0fBE0778E0;
	fma.rn.f32 	%f37, %f35, %f30, %f36;
	mov.f32 	%f38, 0f3E146475;
	fma.rn.f32 	%f39, %f37, %f30, %f38;
	mov.f32 	%f40, 0fBE2A68DD;
	fma.rn.f32 	%f41, %f39, %f30, %f40;
	mov.f32 	%f42, 0f3E4CAF9E;
	fma.rn.f32 	%f43, %f41, %f30, %f42;
	mov.f32 	%f44, 0fBE800042;
	fma.rn.f32 	%f45, %f43, %f30, %f44;
	mov.f32 	%f46, 0f3EAAAAE6;
	fma.rn.f32 	%f47, %f45, %f30, %f46;
	mov.f32 	%f48, 0fBF000000;
	fma.rn.f32 	%f49, %f47, %f30, %f48;
	mul.rn.f32 	%f50, %f30, %f49;
	fma.rn.f32 	%f51, %f50, %f30, %f30;
	mov.f32 	%f52, 0f3F317218;
	fma.rn.f32 	%f54, %f32, %f52, %f51;
	setp.lt.u32 	%p4, %r2, 2139095040;
	@%p4 bra 	$L__BB36_7;

	setp.lt.s32 	%p5, %r2, -1082130431;
	@%p5 bra 	$L__BB36_6;

	mov.f32 	%f53, 0f7F800000;
	fma.rn.f32 	%f54, %f2, %f53, %f53;

$L__BB36_6:
	setp.eq.f32 	%p6, %f2, 0f00000000;
	selp.f32 	%f54, 0f80000000, %f54, %p6;

$L__BB36_7:
	st.global.f32 	[%rd1], %f54;

$L__BB36_9:
	ret;

}
	// .globl	sigmoid_f32
.visible .entry sigmoid_f32(
	.param .u64 sigmoid_f32_param_0,
	.param .u32 sigmoid_f32_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [sigmoid_f32_param_0];
	ld.param.u32 	%r2, [sigmoid_f32_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ctaid.z;
	mov.u32 	%r5, %nctaid.y;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r8, %nctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r3;
	mov.u32 	%r10, %ntid.z;
	mov.u32 	%r11, %tid.z;
	mad.lo.s32 	%r12, %r9, %r10, %r11;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB37_6;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd1];
	setp.lt.f32 	%p2, %f1, 0fC2B00000;
	@%p2 bra 	$L__BB37_5;
	bra.uni 	$L__BB37_2;

$L__BB37_5:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	$L__BB37_6;

$L__BB37_2:
	setp.gt.f32 	%p3, %f1, 0f41700000;
	@%p3 bra 	$L__BB37_4;
	bra.uni 	$L__BB37_3;

$L__BB37_4:
	mov.u32 	%r20, 1065353216;
	st.global.u32 	[%rd1], %r20;
	bra.uni 	$L__BB37_6;

$L__BB37_3:
	neg.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F000000;
	mov.f32 	%f4, 0f3BBB989D;
	fma.rn.f32 	%f5, %f2, %f4, %f3;
	mov.f32 	%f6, 0f3FB8AA3B;
	mov.f32 	%f7, 0f437C0000;
	cvt.sat.f32.f32 	%f8, %f5;
	mov.f32 	%f9, 0f4B400001;
	fma.rm.f32 	%f10, %f8, %f7, %f9;
	add.rn.f32 	%f11, %f10, 0fCB40007F;
	neg.f32 	%f12, %f11;
	fma.rn.f32 	%f13, %f2, %f6, %f12;
	mov.f32 	%f14, 0f32A57060;
	fma.rn.f32 	%f15, %f2, %f14, %f13;
	mov.b32 	%r18, %f10;
	shl.b32 	%r19, %r18, 23;
	mov.b32 	%f16, %r19;
	ex2.approx.ftz.f32 	%f17, %f15;
	mul.rn.f32 	%f18, %f17, %f16;
	add.rn.f32 	%f19, %f18, 0f3F800000;
	rcp.rn.f32 	%f20, %f19;
	st.global.f32 	[%rd1], %f20;

$L__BB37_6:
	ret;

}
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot38[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<29>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<79>;


	mov.u64 	%SPL, __local_depot38;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd18, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd1, %SPL, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	bfe.u32 	%r2, %r1, 20, 11;
	setp.eq.s32 	%p1, %r2, 2047;
	@%p1 bra 	$L__BB38_7;

	add.s32 	%r3, %r2, -1024;
	shr.u32 	%r10, %r3, 6;
	mov.u32 	%r11, 16;
	sub.s32 	%r4, %r11, %r10;
	mov.u32 	%r12, 19;
	sub.s32 	%r13, %r12, %r10;
	setp.gt.s32 	%p2, %r4, 14;
	selp.b32 	%r5, 18, %r13, %p2;
	setp.gt.s32 	%p3, %r4, %r5;
	mov.u64 	%rd75, 0;
	mov.u64 	%rd76, %rd1;
	@%p3 bra 	$L__BB38_4;

	add.s32 	%r6, %r4, -1;
	mov.b64 	%rd22, %fd4;
	shl.b64 	%rd23, %rd22, 11;
	or.b64  	%rd4, %rd23, -9223372036854775808;
	mov.u64 	%rd25, __cudart_i2opi_d;
	mov.u64 	%rd76, %rd1;
	mov.u32 	%r28, %r6;

$L__BB38_3:
	.pragma "nounroll";
	mul.wide.s32 	%rd24, %r28, 8;
	add.s64 	%rd26, %rd25, %rd24;
	ld.global.nc.u64 	%rd27, [%rd26];
	{
	.reg .u32 %r0, %r1, %r2, %r3, %alo, %ahi, %blo, %bhi, %clo, %chi;
	mov.b64 	{%alo,%ahi}, %rd27;
	mov.b64 	{%blo,%bhi}, %rd4;
	mov.b64 	{%clo,%chi}, %rd75;
	mad.lo.cc.u32 	%r0, %alo, %blo, %clo;
	madc.hi.cc.u32 	%r1, %alo, %blo, %chi;
	madc.hi.u32 	%r2, %alo, %bhi, 0;
	mad.lo.cc.u32 	%r1, %alo, %bhi, %r1;
	madc.hi.cc.u32 	%r2, %ahi, %blo, %r2;
	madc.hi.u32 	%r3, %ahi, %bhi, 0;
	mad.lo.cc.u32 	%r1, %ahi, %blo, %r1;
	madc.lo.cc.u32 	%r2, %ahi, %bhi, %r2;
	addc.u32 	%r3, %r3, 0;
	mov.b64 	%rd28, {%r0,%r1};
	mov.b64 	%rd75, {%r2,%r3};
	}
	st.local.u64 	[%rd76], %rd28;
	add.s32 	%r28, %r28, 1;
	sub.s32 	%r14, %r28, %r6;
	mul.wide.s32 	%rd29, %r14, 8;
	add.s64 	%rd76, %rd1, %rd29;
	setp.lt.s32 	%p4, %r28, %r5;
	@%p4 bra 	$L__BB38_3;

$L__BB38_4:
	st.local.u64 	[%rd76], %rd75;
	ld.local.u64 	%rd78, [%rd1+16];
	ld.local.u64 	%rd77, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32 	%p5, %r9, 0;
	@%p5 bra 	$L__BB38_6;

	mov.u32 	%r15, 64;
	sub.s32 	%r16, %r15, %r9;
	shl.b64 	%rd30, %rd77, %r9;
	shr.u64 	%rd31, %rd78, %r16;
	or.b64  	%rd77, %rd30, %rd31;
	shl.b64 	%rd32, %rd78, %r9;
	ld.local.u64 	%rd33, [%rd1+8];
	shr.u64 	%rd34, %rd33, %r16;
	or.b64  	%rd78, %rd34, %rd32;

$L__BB38_6:
	and.b32  	%r17, %r1, -2147483648;
	shr.u64 	%rd35, %rd77, 62;
	cvt.u32.u64 	%r18, %rd35;
	shr.u64 	%rd36, %rd78, 62;
	shl.b64 	%rd37, %rd77, 2;
	or.b64  	%rd38, %rd36, %rd37;
	shr.u64 	%rd39, %rd77, 61;
	cvt.u32.u64 	%r19, %rd39;
	and.b32  	%r20, %r19, 1;
	add.s32 	%r21, %r20, %r18;
	neg.s32 	%r22, %r21;
	setp.eq.s32 	%p6, %r17, 0;
	selp.b32 	%r23, %r21, %r22, %p6;
	cvta.to.local.u64 	%rd40, %rd18;
	mov.u64 	%rd41, 0;
	st.local.u32 	[%rd40], %r23;
	setp.eq.s32 	%p7, %r20, 0;
	shl.b64 	%rd42, %rd78, 2;
	{
	.reg .u32 %r0, %r1, %r2, %r3, %a0, %a1, %a2, %a3, %b0, %b1, %b2, %b3;
	mov.b64 	{%a0,%a1}, %rd41;
	mov.b64 	{%a2,%a3}, %rd41;
	mov.b64 	{%b0,%b1}, %rd42;
	mov.b64 	{%b2,%b3}, %rd38;
	sub.cc.u32 	%r0, %a0, %b0;
	subc.cc.u32 	%r1, %a1, %b1;
	subc.cc.u32 	%r2, %a2, %b2;
	subc.u32 	%r3, %a3, %b3;
	mov.b64 	%rd43, {%r0,%r1};
	mov.b64 	%rd44, {%r2,%r3};
	}
	selp.b64 	%rd45, %rd38, %rd44, %p7;
	selp.b64 	%rd46, %rd42, %rd43, %p7;
	xor.b32  	%r24, %r17, -2147483648;
	selp.b32 	%r25, %r17, %r24, %p7;
	clz.b64 	%r26, %rd45;
	cvt.u64.u32 	%rd47, %r26;
	setp.eq.s64 	%p8, %rd47, 0;
	shl.b64 	%rd48, %rd45, %r26;
	mov.u64 	%rd49, 64;
	sub.s64 	%rd50, %rd49, %rd47;
	cvt.u32.u64 	%r27, %rd50;
	shr.u64 	%rd51, %rd46, %r27;
	or.b64  	%rd52, %rd51, %rd48;
	selp.b64 	%rd53, %rd45, %rd52, %p8;
	mov.u64 	%rd54, -3958705157555305931;
	{
	.reg .u32 %r0, %r1, %r2, %r3, %alo, %ahi, %blo, %bhi;
	mov.b64 	{%alo,%ahi}, %rd53;
	mov.b64 	{%blo,%bhi}, %rd54;
	mul.lo.u32 	%r0, %alo, %blo;
	mul.hi.u32 	%r1, %alo, %blo;
	mad.lo.cc.u32 	%r1, %alo, %bhi, %r1;
	madc.hi.u32 	%r2, %alo, %bhi, 0;
	mad.lo.cc.u32 	%r1, %ahi, %blo, %r1;
	madc.hi.cc.u32 	%r2, %ahi, %blo, %r2;
	madc.hi.u32 	%r3, %ahi, %bhi, 0;
	mad.lo.cc.u32 	%r2, %ahi, %bhi, %r2;
	addc.u32 	%r3, %r3, 0;
	mov.b64 	%rd55, {%r0,%r1};
	mov.b64 	%rd56, {%r2,%r3};
	}
	setp.gt.s64 	%p9, %rd56, 0;
	{
	.reg .u32 %r0, %r1, %r2, %r3, %a0, %a1, %a2, %a3, %b0, %b1, %b2, %b3;
	mov.b64 	{%a0,%a1}, %rd55;
	mov.b64 	{%a2,%a3}, %rd56;
	mov.b64 	{%b0,%b1}, %rd55;
	mov.b64 	{%b2,%b3}, %rd56;
	add.cc.u32 	%r0, %a0, %b0;
	addc.cc.u32 	%r1, %a1, %b1;
	addc.cc.u32 	%r2, %a2, %b2;
	addc.u32 	%r3, %a3, %b3;
	mov.b64 	%rd57, {%r0,%r1};
	mov.b64 	%rd58, {%r2,%r3};
	}
	selp.b64 	%rd59, %rd58, %rd56, %p9;
	selp.u64 	%rd60, 1, 0, %p9;
	add.s64 	%rd61, %rd47, %rd60;
	cvt.u64.u32 	%rd62, %r25;
	shl.b64 	%rd63, %rd62, 32;
	shl.b64 	%rd64, %rd61, 52;
	mov.u64 	%rd65, 4602678819172646912;
	sub.s64 	%rd66, %rd65, %rd64;
	add.s64 	%rd67, %rd59, 1;
	shr.u64 	%rd68, %rd67, 10;
	add.s64 	%rd69, %rd68, 1;
	shr.u64 	%rd70, %rd69, 1;
	add.s64 	%rd71, %rd66, %rd70;
	or.b64  	%rd72, %rd71, %rd63;
	mov.b64 	%fd4, %rd72;

$L__BB38_7:
	st.param.f64 	[func_retval0+0], %fd4;
	ret;

}

`
